
/* /web_studio/static/src/client_action/action_editor/action_editor.js */
odoo.define('@web_studio/client_action/action_editor/action_editor',['@odoo/owl','@web/core/utils/hooks','@web/core/registry','@web/core/l10n/translation','@web/core/utils/arrays','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/confirmation_dialog/confirmation_dialog','@web/webclient/actions/action_service','@web/model/record','@web/views/fields/many2many_tags/many2many_tags_field','@web/views/fields/char/char_field','@web/views/fields/text/text_field','@web_studio/studio_service','@web_studio/client_action/editor/new_view_dialogs/new_view_dialog','@web_studio/client_action/editor/new_view_dialogs/map_new_view_dialog'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{sortBy}=require("@web/core/utils/arrays");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{Record}=require("@web/model/record");const{Many2ManyTagsField,many2ManyTagsField,}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{CharField}=require("@web/views/fields/char/char_field");const{TextField}=require("@web/views/fields/text/text_field");const{viewTypeToString,useStudioServiceAsReactive}=require("@web_studio/studio_service");const{NewViewDialog}=require("@web_studio/client_action/editor/new_view_dialogs/new_view_dialog");const{MapNewViewDialog}=require("@web_studio/client_action/editor/new_view_dialogs/map_new_view_dialog");function getViewCategories(){return{general:{title:_t("General views"),viewTypes:["form","search","activity"],},multiple:{title:_t("Multiple records views"),viewTypes:["list","kanban","map"],},timeline:{title:_t("Timeline views"),viewTypes:["calendar","cohort","gantt"],},reporting:{title:_t("Reporting views"),viewTypes:["graph","pivot"],},};}
const actionFieldsGet={id:{type:"integer"},name:{type:"char"},help:{type:"text"},groups_id:{type:"many2many",relation:"res.groups",string:"Groups"},};function getActionActiveFields(){const activeFields={};for(const fName of Object.keys(actionFieldsGet)){activeFields[fName]={};}
const groups_idRelated=Object.fromEntries(many2ManyTagsField.relatedFields({options:{}}).map((f)=>[f.name,f]));activeFields.groups_id.related={activeFields:groups_idRelated,fields:groups_idRelated};return activeFields;}
function getActionValues(action){const values={};for(const fName of Object.keys(actionFieldsGet)){values[fName]=action[fName];}
return values;}
class ActionEditor extends Component{setup(){this.studio=useStudioServiceAsReactive();this.action=useService("action");this.notification=useService("notification");this.rpc=useService("rpc");this.user=useService("user");this.viewCategories=getViewCategories();this.addDialog=useOwnedDialogs();this.actionFieldsGet={...actionFieldsGet};}
get actionRecordProps(){const values=getActionValues(this.studio.editedAction);return{fields:this.actionFieldsGet,resModel:"ir.actions.act_window",resId:values.id,mode:"edit",values,activeFields:getActionActiveFields(),onRecordChanged:(record,changes)=>{return this.editAction(changes);},};}
get activeViews(){return this.studio.editedAction.views.map(([,name])=>name);}
getOrderedViewTypes(viewTypes){const activeViews=this.activeViews;const currentDefaultView=activeViews[0];const viewInfos=viewTypes.map((viewType)=>{return{name:viewType,title:viewTypeToString(viewType),isActive:activeViews.includes(viewType),isDefault:currentDefaultView===viewType,imgUrl:`/web_studio/static/src/img/view_type/${viewType}.png`,canBeDefault:!["form","search"].includes(viewType),canBeDisabled:viewType!=="search",};});return sortBy(viewInfos,({isDefault,isActive})=>{return isDefault?2:isActive?1:0;},"desc");}
setDefaultView(viewType){viewType=viewType==="tree"?"list":viewType;let viewModes=this.studio.editedAction.view_mode.split(",");viewModes=viewModes.filter((m)=>m!==viewType);viewModes.unshift(viewType);return this.editAction({view_mode:viewModes.join(",")});}
disableView(viewType){const viewMode=this.studio.editedAction.view_mode.split(",").filter((m)=>m!==viewType);if(!viewMode.length){this.addDialog(AlertDialog,{body:_t("You cannot deactivate this view as it is the last one active."),});}else{return this.editAction({view_mode:viewMode.join(",")});}}
restoreDefaultView(viewType){return this.env.editionFlow.restoreDefaultView(null,viewType);}
async addViewType(viewType){const action=this.studio.editedAction;const viewMode=action.view_mode.split(",");viewMode.push(viewType);let viewAdded=await this.rpc("/web_studio/add_view_type",{action_type:action.type,action_id:action.id,res_model:action.res_model,view_type:viewType,args:{view_mode:viewMode.join(",")},context:this.user.context,});if(viewAdded!==true){viewAdded=await new Promise((resolve)=>{let DialogClass;const dialogProps={confirm:async()=>{resolve(true);},cancel:()=>resolve(false),};if(["gantt","calendar","cohort"].includes(viewType)){DialogClass=NewViewDialog;dialogProps.viewType=viewType;}else if(viewType==="map"){DialogClass=MapNewViewDialog;}else{this.addDialog(AlertDialog,{body:_t("Creating this type of view is not currently supported in Studio."),});resolve(false);}
this.addDialog(DialogClass,dialogProps);});}
if(viewAdded){await this.editAction({view_mode:viewMode.join(",")});}
return viewAdded;}
editView(viewType){this.studio.setParams({viewType,editorTab:"views"});}
async onThumbnailClicked(viewType){if(this.activeViews.includes(viewType)){return this.editView(viewType);}
const resModel=this.studio.editedAction.res_model;if(viewType==="activity"){const activityAllowed=await this.studio.isAllowed("activity",resModel);if(!activityAllowed){this.notification.add({title:false,type:"danger",message:_t("Activity view unavailable on this model"),});return;}}
if(await this.addViewType(viewType)){return this.editView(viewType);}}
openFormAction(){return this.action.doAction({type:"ir.actions.act_window",res_model:"ir.actions.act_window",res_id:this.studio.editedAction.id,views:[[false,"form"]],target:"current",},{stackPosition:"replacePreviousAction",});}
async editAction(changes){await this.rpc("/web_studio/edit_action",{action_id:this.studio.editedAction.id,action_type:"ir.actions.act_window",args:changes,});return this.studio.reload({},false);}}
ActionEditor.template="web_studio.ActionEditor";ActionEditor.components={Dropdown,DropdownItem,Record,CharField,TextField,Many2ManyTagsField,};ActionEditor.props={...standardActionServiceProps};registry.category("actions").add("web_studio.action_editor",ActionEditor);return __exports;});;

/* /web_studio/static/src/client_action/app_creator/app_creator.js */
odoo.define('@web_studio/client_action/app_creator/app_creator',['@odoo/owl','@web/core/utils/hooks','@web_studio/utils','@web_studio/client_action/model_configurator/model_configurator','@web_studio/client_action/icon_creator/icon_creator','@web_studio/client_action/menu_creator/menu_creator'],function(require){'use strict';let __exports={};const{Component,reactive,useExternalListener,useState}=require("@odoo/owl");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{BG_COLORS,COLORS,ICONS}=require("@web_studio/utils");const{ModelConfigurator}=require("@web_studio/client_action/model_configurator/model_configurator");const{IconCreator}=require("@web_studio/client_action/icon_creator/icon_creator");const{MenuCreator,MenuCreatorModel}=require("@web_studio/client_action/menu_creator/menu_creator");class AppCreatorState{constructor({onFinished}){this._onFinished=onFinished;this.step="welcome";this.fieldsValidators={appName:()=>!!this.data.appName,menu:(_this)=>_this.menuCreatorModel.isValid,};this.menuCreatorModel=reactive(new MenuCreatorModel());this.data={appName:"",iconData:{backgroundColor:BG_COLORS[5],color:COLORS[4],iconClass:ICONS[0],type:"custom_icon",},menu:this.menuCreatorModel.data,modelOptions:[],};this._steps={welcome:{next:()=>"app",},app:{previous:"welcome",next:()=>"model",fields:["appName"],},model:{previous:"app",next:(data)=>{return data.menu.modelChoice==="new"?"model_configuration":"";},fields:["menu"],},model_configuration:{previous:"model",},};}
get step(){return this._step;}
set step(step){this._step=step;this.showValidation=false;}
get nextStep(){const next=this._next;return this._stepInvalidFields.length?false:next;}
get hasPrevious(){return"previous"in this._currentStep;}
isFieldValid(fieldName){return this.showValidation?this.fieldsValidators[fieldName](this):true;}
next(){this.showValidation=true;const invalidFields=this._stepInvalidFields;if(invalidFields.length){return;}
const next=this._next;if(next){this.step=next;}else{return this._onFinished();}}
previous(){if(this._currentStep.previous){this.step=this._currentStep.previous;}}
get _currentStep(){return this._steps[this._step];}
get _next(){return this._currentStep.next?this._currentStep.next(this.data):"";}
get _stepInvalidFields(){return(this._currentStep.fields||[]).filter((fName)=>{return!this.fieldsValidators[fName](this);});}}
const AppCreator=__exports.AppCreator=class AppCreator extends Component{static template="web_studio.AppCreator";static components={IconCreator,ModelConfigurator,MenuCreator};static props={onNewAppCreated:{type:Function},};setup(){this.state=useState(new AppCreatorState({onFinished:this.createNewApp.bind(this),}));this.uiService=useService("ui");this.rpc=useService("rpc");this.user=useService("user");useAutofocus();useExternalListener(window,"keydown",this.onKeydown);}
async createNewApp(){this.uiService.block();const data=this.state.data;const iconData=data.iconData;const iconValue=iconData.type==="custom_icon"?[iconData.iconClass,iconData.color,iconData.backgroundColor]:iconData.uploaded_attachment_id;try{const result=await this.rpc("/web_studio/create_new_app",{app_name:data.appName,menu_name:data.menu.menuName,model_choice:data.menu.modelChoice,model_id:data.menu.modelChoice&&data.menu.modelId&&data.menu.modelId[0],model_options:data.modelOptions,icon:iconValue,context:this.user.context,});await this.props.onNewAppCreated(result);}finally{this.uiService.unblock();}}
onKeydown(ev){if(ev.key==="Enter"&&!(ev.target.classList&&ev.target.classList.contains("o_web_studio_app_creator_previous"))){ev.preventDefault();this.state.next();}}
onConfirmOptions(options){this.state.data.modelOptions=options;return this.state.next();}}
return __exports;});;

/* /web_studio/static/src/client_action/editor/app_menu_editor/app_menu_editor.js */
odoo.define('@web_studio/client_action/editor/app_menu_editor/app_menu_editor',['@odoo/owl','@web/core/utils/hooks','@web/core/dialog/dialog','@web/core/utils/nested_sortable','@web/views/view_dialogs/form_view_dialog','@web_studio/client_action/menu_creator/menu_creator','@web_studio/client_action/utils','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,useRef,useState}=require("@odoo/owl");const{useBus,useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{useNestedSortable}=require("@web/core/utils/nested_sortable");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{MenuCreatorDialog}=require("@web_studio/client_action/menu_creator/menu_creator");const{useDialogConfirmation,useSubEnvAndServices}=require("@web_studio/client_action/utils");const{_t}=require("@web/core/l10n/translation");const EditMenuDialogProps={...Dialog.props};EditMenuDialogProps.close={type:Function};delete EditMenuDialogProps.slots;class EditMenuDialog extends Component{static components={Dialog};static template="web_studio.AppMenuEditor.EditMenuDialog";static props=EditMenuDialogProps;setup(){const originalBus=this.env.bus;useBus(originalBus,"MENUS:APP-CHANGED",()=>(this.state.tree=this.getTree()));this.menus=useService("menu");this.addDialog=useOwnedDialogs();this.orm=useService("orm");this.user=useService("user");this.rpc=useService("rpc");useBus(this.env.bus,"ACTION_MANAGER:UPDATE",()=>this.cancel());this.title=_t("Edit Menu");this.state=useState({tree:{},flatMenus:{}});this.state.tree=this.getTree();this.toMove={};this.toDelete=[];const root=useRef("root");useNestedSortable({ref:root,handle:".o-draggable-handle",nest:true,maxLevels:5,useElementSize:true,onDrop:this.moveMenu.bind(this),});const{confirm,cancel}=useDialogConfirmation({confirm:async()=>{await this.saveChanges();},});this.confirm=confirm;this.cancel=cancel;}
get flatMenus(){return this.state.flatMenus;}
get mainItem(){return this.state.tree;}
getTree(){let currentApp=this.menus.getCurrentApp();if(!currentApp){return null;}
currentApp=this.menus.getMenuAsTree(currentApp.id);const item=this._getItemFromMenu(currentApp,null);item.isDraggable=false;item.isRemovable=false;return item;}
_getItemFromMenu(menu,parentId){const item={id:menu.id,name:menu.name,isDraggable:true,isRemovable:true,parentId,};item.children=menu.childrenTree.map((menu)=>this._getItemFromMenu(menu,item.id));this.flatMenus[item.id]=item;return item;}
moveMenu({element,parent,previous}){const menuId=parseInt(element.dataset.itemId);const menu=this.flatMenus[menuId];let parentMenu=this.flatMenus[menu.parentId];parentMenu.children=parentMenu.children.filter((m)=>m.id!==menuId);const parentLi=parent?.closest("li");const parentMenuId=parentLi?parseInt(parentLi.dataset.itemId):this.mainItem.id;if(parentMenuId!==parentMenu.id){parentMenu=this.flatMenus[parentMenuId];menu.parentId=parentMenu.id;}
if(previous){const previousMenu=this.flatMenus[previous.dataset.itemId];const index=parentMenu.children.findIndex((child)=>child===previousMenu);parentMenu.children.splice(index+1,0,menu);}else{parentMenu.children.unshift(menu);}
this.toMove[menuId]={parent_menu_id:menu.parentId,};parentMenu.children.forEach((m,index)=>{this.toMove[m.id]=this.toMove[m.id]||{};this.toMove[m.id].sequence=index+1;});}
removeItem(menu){const parentMenu=this.flatMenus[menu.parentId];if(!parentMenu){return;}
parentMenu.children=parentMenu.children.filter((m)=>m.id!==menu.id);this.toDelete.push(menu.id);}
editItem(menu){this.addDialog(FormViewDialog,{resModel:"ir.ui.menu",resId:menu.id,onRecordSaved:async()=>{await this.saveChanges(true);},});}
async saveChanges(reload=false){if(Object.keys(this.toMove).length||this.toDelete.length){await this.orm.call("ir.ui.menu","customize",[],{to_move:this.toMove,to_delete:this.toDelete,});reload=true;}
if(reload){await this.menus.reload();}}
onNewMenu(){this.addDialog(MenuCreatorDialog,{confirm:async(data)=>{await this.rpc("/web_studio/create_new_menu",{menu_name:data.menuName,model_id:data.modelId[0],model_choice:data.modelChoice,model_options:data.modelOptions||{},parent_menu_id:this.mainItem.id,context:this.user.context,});this.env.bus.trigger("CLEAR-CACHES");this.menus.reload();},});}}
const AppMenuEditor=__exports.AppMenuEditor=class AppMenuEditor extends Component{static props={env:{type:Object},};static template="web_studio.AppMenuEditor";setup(){this.menus=useService("menu");const bus=this.env.bus;useSubEnvAndServices(this.props.env);this.addDialog=useOwnedDialogs();useBus(bus,"MENUS:APP-CHANGED",()=>this.render());}
onClick(ev){ev.preventDefault();this.addDialog(EditMenuDialog);}}
return __exports;});;

/* /web_studio/static/src/client_action/editor/edition_flow.js */
odoo.define('@web_studio/client_action/editor/edition_flow',['@web/core/l10n/translation','@odoo/owl','@web_studio/client_action/utils','@web/core/confirmation_dialog/confirmation_dialog','@web/core/utils/concurrency'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{toRaw,useState,useEnv,reactive,onMounted,onWillUnmount,markRaw}=require("@odoo/owl");const{Reactive}=require("@web_studio/client_action/utils");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{KeepLast}=require("@web/core/utils/concurrency");const EditionFlow=__exports.EditionFlow=class EditionFlow extends Reactive{constructor(env,services){super();this.env=env;for(const[servName,serv]of Object.entries(services)){this[servName]=serv;}
this.setup();}
setup(){let requestId;const updateBreadcrumbs=(studio)=>{if(studio.requestId!==requestId){this.breadcrumbs=[];}
requestId=studio.requestId;};const studio=reactive(this.studio,()=>updateBreadcrumbs(studio));this.studio=studio;this.breadcrumbs=[];updateBreadcrumbs(studio);}
pushBreadcrumb(crumb){const bcLength=this.breadcrumbs.length;const handler=()=>{this.breadcrumbs.length=bcLength+1;this.studio.setParams({},false);};this.breadcrumbs.push({data:crumb,handler});}
async loadViews({forceSearch=false}={}){const editedAction=this.studio.editedAction;const{context,res_model,id}=editedAction;const views=[...editedAction.views];if(forceSearch&&!views.some((tuple)=>tuple[1]==="search")){views.push([false,"search"]);}
const newContext={...context,lang:false};const options={loadIrFilters:true,loadActionMenus:false,id,studio:true};const res=await this.view.loadViews({resModel:res_model,views,context:newContext},options);return JSON.parse(JSON.stringify(res));}
restoreDefaultView(viewId,viewType){return new Promise((resolve)=>{const confirm=async()=>{if(!viewId&&viewType){const result=await this.loadViews();viewId=result.views[viewType].id;}
const res=await this.rpc("/web_studio/restore_default_view",{view_id:viewId,});this.env.bus.trigger("CLEAR-CACHES");resolve(res);};this.dialog.add(ConfirmationDialog,{body:_t("Are you sure you want to restore the default view?\r\nAll customization done with studio on this view will be lost."),confirm,cancel:()=>resolve(false),});});}}
__exports.useEditorBreadcrumbs=useEditorBreadcrumbs;function useEditorBreadcrumbs(initialCrumb){const env=useEnv();const editionFlow=env.editionFlow;if(initialCrumb&&!editionFlow.breadcrumbs.length){onMounted(()=>editionFlow.pushBreadcrumb(initialCrumb));}
const crumbs=useState(editionFlow.breadcrumbs);const push=(crumb)=>editionFlow.pushBreadcrumb(crumb);return{crumbs,push};}
__exports.useEditorMenuItem=useEditorMenuItem;function useEditorMenuItem(MenuItem){const editionFlow=useEnv().editionFlow;onMounted(()=>{editionFlow.MenuItem=MenuItem;});onWillUnmount(()=>{if(toRaw(editionFlow).MenuItem===MenuItem){editionFlow.MenuItem=null;}});}
const SnackbarIndicator=__exports.SnackbarIndicator=class SnackbarIndicator extends Reactive{constructor(){super();this.state="";this.keepLast=markRaw(new KeepLast());}
add(prom){this.state="loading";const raw=this.raw();this.pending=Promise.all([raw.pending,prom]);this.keepLast.add(raw.pending).then(()=>(this.state="loaded")).catch(()=>{this.state="error";}).finally(()=>{this.pending=null;});return prom;}}
const EditorOperations=__exports.EditorOperations=class EditorOperations extends Reactive{constructor(params){super();this.operations=[];this.undone=[];this._lock="";this._keepLast=markRaw(new KeepLast());this._callbacks={do:params.do,onError:params.onError,onDone:params.onDone,};}
get canUndo(){return this.operations.length||(this.pending&&this.pending.length);}
get canRedo(){return this.undone.length||(this.pendingUndone&&this.pendingUndone.length);}
_wrapPromise(prom){return this._keepLast.add(prom);}
_prepare(mode){const raw=this.raw();const lock=raw._lock;if(lock&&lock!==mode){this._wrapPromise(Promise.resolve());this._close();return false;}
this._lock=mode;const pending=raw.pending;if(!pending){this.pending=[...raw.operations];this.pendingUndone=[...raw.undone];}
return true;}
async _do(mode,pending,lastOp){let result;let error;try{result=await this._wrapPromise(this._callbacks.do({mode,operations:pending,lastOp}));}catch(e){error=e;}
if(error){return{error};}
return{result};}
_close(done=null){const raw=this.raw();const mode=raw._lock;this._lock=null;const pending=raw.pending;const pendingUndone=raw.pendingUndone;this.pending=null;this.pendingUndone=null;if(!done){return;}
if("result"in done){this.operations=pending;this.undone=pendingUndone;if(typeof done.result!=="boolean"){return this._callbacks.onDone({mode,pending,pendingUndone,result:done.result,});}}
if("error"in done){return this._callbacks.onError({mode,pending,error:done.error});}}
async undo(canRedo=true){if(!this._prepare("undo")){this._close();return;}
const ops=this.raw().pending;if(!ops||!ops.length){this._close();return;}
const op=ops.pop();if(canRedo){this.pendingUndone.push(op);}
const done=await this._do("undo",this.raw().pending,op);this._close(done);}
pushOp(op){this.operations.push(op);}
async redo(){if(!this._prepare("redo")){this._close();return;}
const ops=this.raw().pendingUndone;if(!ops||!ops.length){this._close();return;}
const op=ops.pop();this.pending.push(op);const done=await this._do("do",this.raw().pending,op);this._close(done);}
async doMulti(ops=[]){if(!ops.length){return;}
let prom;for(let i=0;i<ops.length;i++){let silent=true;if(i===ops.length-1){silent=false;}
prom=this.do(ops[i],silent);}
return prom;}
async do(op,silent=false){if(!this._prepare("do")||!op){this._close();return;}
this.pending.push(op);this.pendingUndone=[];let done={};if(!silent){done=await this._do("do",this.raw().pending,op);}else{done={result:true};}
this._close(done);}
clear(all=true){this.operations=[];if(all){this.undone=[];}}}
return __exports;});;

/* /web_studio/static/src/client_action/editor/editor.js */
odoo.define('@web_studio/client_action/editor/editor',['@odoo/owl','@web/core/registry','@web/webclient/actions/action_service','@web/core/utils/hooks','@web_studio/client_action/editor/studio_action_container','@web_studio/client_action/editor/editor_menu/editor_menu','@web_studio/client_action/editor/app_menu_editor/app_menu_editor','@web_studio/client_action/editor/new_model_item/new_model_item','@web_studio/client_action/editor/edition_flow','@web_studio/studio_service','@web_studio/client_action/utils','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{Component,EventBus,onWillDestroy,useState,useSubEnv,xml}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{actionService}=require("@web/webclient/actions/action_service");const{useBus,useService}=require("@web/core/utils/hooks");const{StudioActionContainer}=require("@web_studio/client_action/editor/studio_action_container");const{EditorMenu}=require("@web_studio/client_action/editor/editor_menu/editor_menu");const{AppMenuEditor}=require("@web_studio/client_action/editor/app_menu_editor/app_menu_editor");const{NewModelItem}=require("@web_studio/client_action/editor/new_model_item/new_model_item");const{EditionFlow}=require("@web_studio/client_action/editor/edition_flow");const{useStudioServiceAsReactive}=require("@web_studio/studio_service");const{useSubEnvAndServices,useServicesOverrides}=require("@web_studio/client_action/utils");const{omit}=require("@web/core/utils/objects");class DialogWithEnv extends Component{static template=xml`<t t-component="props.Component" t-props="componentProps" />`;static props=["*"];setup(){useSubEnvAndServices(this.props.env);}
get componentProps(){const additionalProps=omit(this.props,"Component","env","componentProps");return{...this.props.componentProps,...additionalProps};}}
const dialogService={dependencies:["dialog"],start(env,{dialog}){function addDialog(Component,_props,options){const props={env,Component,componentProps:_props};return dialog.add(DialogWithEnv,props,options);}
return{add:addDialog};},};const actionServiceStudio={dependencies:["studio","dialog"],start(env,{studio}){const action=actionService.start(env);const _doAction=action.doAction;async function doAction(actionRequest,options){if(actionRequest==="web_studio.action_edit_report"){return studio.setParams({editedReport:options.report,});}
return _doAction(...arguments);}
return Object.assign(action,{doAction});},};const routerService={start(){return{current:{hash:{}},pushState(){},};},};const menuButtonsRegistry=registry.category("studio_navbar_menubuttons");const Editor=__exports.Editor=class Editor extends Component{static menuButtonsId=1;setup(){const globalBus=this.env.bus;const newBus=new EventBus();newBus.addEventListener("CLEAR-CACHES",()=>globalBus.trigger("CLEAR-CACHES"));useSubEnv({bus:newBus,});useServicesOverrides({router:routerService,dialog:dialogService,action:actionServiceStudio,});this.studio=useService("studio");const editionFlow=new EditionFlow(this.env,{rpc:useService("rpc"),dialog:useService("dialog"),studio:useStudioServiceAsReactive(),view:useService("view"),});useSubEnv({editionFlow,});this.actionService=useService("action");this.rpc=useService("rpc");this.state=useState({actionContainerId:1});useBus(this.studio.bus,"UPDATE",async()=>{this.state.actionContainerId++;});menuButtonsRegistry.getEntries().forEach(([name])=>{if(name.startsWith("app_menu_editor_")||name.startsWith("new_model_item_")){menuButtonsRegistry.remove(name);}});const menuButtonsId=this.constructor.menuButtonsId++;menuButtonsRegistry.add(`app_menu_editor_${menuButtonsId}`,{Component:AppMenuEditor,props:{env:this.env},});menuButtonsRegistry.add(`new_model_item_${menuButtonsId}`,{Component:NewModelItem});onWillDestroy(()=>{menuButtonsRegistry.remove(`app_menu_editor_${menuButtonsId}`);menuButtonsRegistry.remove(`new_model_item_${menuButtonsId}`);});}
switchView({viewType}){this.studio.setParams({viewType,editorTab:"views"});}
switchViewLegacy(ev){this.studio.setParams({viewType:ev.detail.view_type});}
switchTab({tab}){this.studio.setParams({editorTab:tab});}}
Editor.template="web_studio.Editor";Editor.props={};Editor.components={EditorMenu,StudioActionContainer,};return __exports;});;

/* /web_studio/static/src/client_action/editor/editor_menu/editor_menu.js */
odoo.define('@web_studio/client_action/editor/editor_menu/editor_menu',['@web/core/utils/hooks','@web/core/l10n/translation','@web/core/l10n/localization','@web/core/registry','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{localization}=require("@web/core/l10n/localization");const{registry}=require("@web/core/registry");const{Component,useState}=require("@odoo/owl");const editorTabRegistry=registry.category("web_studio.editor_tabs");class Breadcrumbs extends Component{static template="web_studio.EditorMenu.Breadcrumbs";static props={currentTab:{type:Object},switchTab:Function,};setup(){this.editionFlow=useState(this.env.editionFlow);this.nextCrumbId=1;}
get breadcrumbs(){const currentTab=this.props.currentTab;const crumbs=[{data:{name:currentTab.name,},handler:()=>this.props.switchTab({tab:currentTab.id}),},];const breadcrumbs=this.editionFlow.breadcrumbs;breadcrumbs.forEach((crumb)=>{crumbs.push(crumb);});for(const crumb of crumbs){crumb.id=this.nextCrumbId++;}
return crumbs;}}
const EditorMenu=__exports.EditorMenu=class EditorMenu extends Component{static components={Breadcrumbs};setup(){this.l10n=localization;this.studio=useService("studio");this.rpc=useService("rpc");this.editionFlow=useState(this.env.editionFlow);}
get activeViews(){const action=this.studio.editedAction;const viewTypes=(action._views||action.views).map(([,type])=>type);return this.constructor.viewTypes.filter((vt)=>viewTypes.includes(vt.type));}
get editorTabs(){const entries=editorTabRegistry.getEntries();return entries.map((entry)=>Object.assign({},entry[1],{id:entry[0]}));}
get currentTab(){return this.editorTabs.find((tab)=>tab.id===this.studio.editorTab);}
openTab(tab){this.props.switchTab({tab});}}
EditorMenu.props={switchTab:Function,switchView:Function,};EditorMenu.template="web_studio.EditorMenu";EditorMenu.viewTypes=[{title:_t("Form"),type:"form",iconClasses:"fa fa-address-card",},{title:_t("List"),type:"list",iconClasses:"oi oi-view-list",},{title:_t("Kanban"),type:"kanban",iconClasses:"oi oi-view-kanban",},{title:_t("Map"),type:"map",iconClasses:"fa fa-map-marker",},{title:_t("Calendar"),type:"calendar",iconClasses:"fa fa-calendar",},{title:_t("Graph"),type:"graph",iconClasses:"fa fa-area-chart",},{title:_t("Pivot"),type:"pivot",iconClasses:"oi oi-view-pivot",},{title:_t("Gantt"),type:"gantt",iconClasses:"fa fa-tasks",},{title:_t("Cohort"),type:"cohort",iconClasses:"oi oi-view-cohort",},{title:_t("Activity"),type:"activity",iconClasses:"fa fa-clock-o",},{title:_t("Search"),type:"search",iconClasses:"oi oi-search",},];editorTabRegistry.add("views",{name:_t("Views"),action:"web_studio.action_editor"}).add("reports",{name:_t("Reports")}).add("automations",{name:_t("Automations")}).add("automation_webhooks",{name:_t("Webhooks")}).add("acl",{name:_t("Access Control")}).add("filters",{name:_t("Filter Rules")});return __exports;});;

/* /web_studio/static/src/client_action/editor/new_model_item/new_model_item.js */
odoo.define('@web_studio/client_action/editor/new_model_item/new_model_item',['@odoo/owl','@web/core/l10n/translation','@web/core/utils/hooks','@web/core/dialog/dialog','@web_studio/client_action/model_configurator/model_configurator','@web_studio/client_action/utils'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{useBus,useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{ModelConfiguratorDialog}=require("@web_studio/client_action/model_configurator/model_configurator");const{useDialogConfirmation}=require("@web_studio/client_action/utils");class SimpleNewModelDialog extends Component{static template="web_studio.SimpleNewModelDialog";static components={Dialog};static props={close:{type:Function}};setup(){this.addDialog=useOwnedDialogs();this.rpc=useService("rpc");this.menus=useService("menu");this.user=useService("user");this.action=useService("action");this.studio=useService("studio");this.state=useState({modelName:"",showValidation:false});const{confirm,cancel}=useDialogConfirmation({confirm:async(data)=>{const{menu_id,action_id}=await this.rpc("/web_studio/create_new_menu",{menu_name:this.state.modelName,model_id:false,model_choice:"new",model_options:data.modelOptions,parent_menu_id:this.menus.getCurrentApp().id,context:this.user.context,});await this.menus.reload();const action=await this.action.loadAction(action_id);this.menus.setCurrentMenu(menu_id);this.studio.setParams({action,viewType:"form"});},});this._confirm=confirm;this._cancel=cancel;}
get title(){return _t("Create a new Model");}
confirm(data={}){return this._confirm(data);}
onConfigureModel(){if(!this.state.modelName){this.state.showValidation=true;return;}
this.addDialog(ModelConfiguratorDialog,{confirmLabel:_t("Create Model"),confirm:(data)=>{this.confirm({modelOptions:data});},});}}
const NewModelItem=__exports.NewModelItem=class NewModelItem extends Component{static props={};static template="web_studio.NewModelItem";setup(){this.addDialog=useOwnedDialogs();this.menus=useService("menu");this.studio=useService("studio");this.action=useService("action");useBus(this.env.bus,"MENUS:APP-CHANGED",()=>this.render());}
onClick(ev){ev.preventDefault();this.addDialog(SimpleNewModelDialog);}}
return __exports;});;

/* /web_studio/static/src/client_action/editor/new_view_dialogs/map_new_view_dialog.js */
odoo.define('@web_studio/client_action/editor/new_view_dialogs/map_new_view_dialog',['@web/core/l10n/translation','@web_studio/client_action/editor/new_view_dialogs/new_view_dialog','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{NewViewDialog}=require("@web_studio/client_action/editor/new_view_dialogs/new_view_dialog");const{useService}=require("@web/core/utils/hooks");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const MapNewViewDialog=__exports.MapNewViewDialog=class MapNewViewDialog extends NewViewDialog{setup(){super.setup();this.dialog=useService("dialog");this.fieldsChoice={res_partner:null,};}
get viewType(){return"map";}
computeSpecificFields(fields){this.partnerFields=fields.filter((field)=>field.type==="many2one"&&field.relation==="res.partner");if(!this.partnerFields.length){this.dialog.add(AlertDialog,{body:_t("Contact Field Required"),contentClass:"o_web_studio_preserve_space",});this.props.close();}else{this.fieldsChoice.res_partner=this.partnerFields[0].name;}}}
MapNewViewDialog.template="web_studio.MapNewViewDialog";MapNewViewDialog.props={...NewViewDialog.props,};delete MapNewViewDialog.props.viewType;return __exports;});;

/* /web_studio/static/src/client_action/editor/new_view_dialogs/new_view_dialog.js */
odoo.define('@web_studio/client_action/editor/new_view_dialogs/new_view_dialog',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{onWillStart}=require("@odoo/owl");const NewViewDialog=__exports.NewViewDialog=class NewViewDialog extends ConfirmationDialog{setup(){super.setup();this.orm=useService("orm");this.rpc=useService("rpc");this.studio=useService("studio");this.user=useService("user");this.mandatoryStopDate=["gantt","cohort"].includes(this.viewType);this.title=_t("Generate %s View",this.viewType);this.fieldsChoice={date_start:null,date_stop:null,};onWillStart(async()=>{const fieldsGet=await this.orm.call(this.studio.editedAction.res_model,"fields_get");const fields=Object.entries(fieldsGet).map(([fName,field])=>{field.name=fName;return field;});fields.sort((first,second)=>{if(first.string===second.string){return 0;}
if(first.string<second.string){return-1;}
if(first.string>second.string){return 1;}});this.computeSpecificFields(fields);});}
get viewType(){return this.props.viewType;}
computeSpecificFields(fields){this.dateFields=[];this.rowFields=[];this.measureFields=[];fields.forEach((field)=>{if(field.store){if(field.type==="date"||field.type==="datetime"){this.dateFields.push(field);}
if(this.constructor.GROUPABLE_TYPES.includes(field.type)){this.rowFields.push(field);}
if(this.constructor.MEASURABLE_TYPES.includes(field.type)){if(field.name!=="id"&&field.name!=="sequence"){this.measureFields.push(field);}}}});if(this.dateFields.length){this.fieldsChoice.date_start=this.dateFields[0].name;this.fieldsChoice.date_stop=this.dateFields[0].name;}}
async _confirm(){await this.rpc("/web_studio/create_default_view",{model:this.studio.editedAction.res_model,view_type:this.viewType,attrs:this.fieldsChoice,context:this.user.context,});super._confirm();}}
NewViewDialog.template="web_studio.NewViewDialog";NewViewDialog.GROUPABLE_TYPES=["many2one","char","boolean","selection","date","datetime"];NewViewDialog.MEASURABLE_TYPES=["integer","float"];NewViewDialog.props={...ConfirmationDialog.props,viewType:String,};delete NewViewDialog.props.body;return __exports;});;

/* /web_studio/static/src/client_action/editor/studio_action_container.js */
odoo.define('@web_studio/client_action/editor/studio_action_container',['@web/webclient/actions/action_container','@web/core/utils/hooks','@web/core/registry','@web/core/utils/concurrency','@odoo/owl','@web_studio/studio_service','@web/views/view_compiler'],function(require){'use strict';let __exports={};const{ActionContainer}=require("@web/webclient/actions/action_container");const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{Component,markup,onWillStart,onWillUnmount,onWillUpdateProps,xml}=require("@odoo/owl");const{useStudioServiceAsReactive}=require("@web_studio/studio_service");const{resetViewCompilerCache}=require("@web/views/view_compiler");const editorTabRegistry=registry.category("web_studio.editor_tabs");const StudioActionContainer=__exports.StudioActionContainer=class StudioActionContainer extends Component{static template=xml`
        <t t-name="web.ActionContainer">
        <div class="o_action_manager">
            <t t-if="info.Component" t-component="info.Component" className="'o_action'" t-props="info.componentProps" t-key="info.id"/>
        </div>
        </t>`;static props={};setup(){this.actionService=useService("action");this.studio=useStudioServiceAsReactive();this.rpc=useService("rpc");this.info={};let actionKey=1;const onUiUpdate=({detail:info})=>{this.info=info;actionKey++;this.render();};this.env.bus.addEventListener("ACTION_MANAGER:UPDATE",onUiUpdate);onWillUnmount(()=>this.env.bus.removeEventListener("ACTION_MANAGER:UPDATE",onUiUpdate));const doAction=async(action,options)=>{try{await this.actionService.doAction(action,options);this.actionKey=actionKey;}catch(e){if(action!=="web_studio.action_editor"){this.studio.setParams({editorTab:"views"});}
throw e;}};onWillStart(async()=>{const action=await this.getStudioAction();this.studioKey=this.studio.requestId;doAction(action);await Promise.resolve();});const willUpdateKeepLast=new KeepLast();onWillUpdateProps(async()=>{if(this.studio.requestId!==this.studioKey||this.actionKey!==actionKey){const action=await willUpdateKeepLast.add(this.getStudioAction());resetViewCompilerCache();return new Promise((_resolve)=>{const resolve=()=>{this.env.bus.removeEventListener("ACTION_MANAGER:UPDATE",resolve);_resolve();};this.studioKey=this.studio.requestId;doAction(action,{clearBreadcrumbs:true,noEmptyTransition:true}).finally(()=>{this.env.bus.removeEventListener("ACTION_MANAGER:UPDATE",resolve);});this.env.bus.addEventListener("ACTION_MANAGER:UPDATE",resolve);});}});}
async getStudioAction(){const{editorTab,editedAction,editedReport,editedViewType}=this.studio;const tab=editorTabRegistry.get(editorTab);if(editorTab==="views"){if(editedViewType){return"web_studio.view_editor";}
return tab.action;}
if(tab.action){return tab.action;}else if(editorTab==="reports"&&editedReport){return"web_studio.report_editor";}else{const action=await this.rpc("/web_studio/get_studio_action",{action_name:editorTab,model:editedAction.res_model,view_id:editedAction.view_id&&editedAction.view_id[0],});action.help=action.help&&markup(action.help);return action;}}}
StudioActionContainer.props={...ActionContainer.props,reloadId:{type:Number},};return __exports;});;

/* /web_studio/static/src/client_action/icon_creator/icon_creator.js */
odoo.define('@web_studio/client_action/icon_creator/icon_creator',['@web_studio/utils','@web/core/file_input/file_input','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{COLORS,BG_COLORS,ICONS}=require("@web_studio/utils");const{FileInput}=require("@web/core/file_input/file_input");const{useService}=require("@web/core/utils/hooks");const{Component,onWillUpdateProps,useRef,useState}=require("@odoo/owl");const DEFAULT_ICON={backgroundColor:BG_COLORS[5],color:COLORS[4],iconClass:ICONS[0],};const IconCreator=__exports.IconCreator=class IconCreator extends Component{setup(){this.COLORS=COLORS;this.BG_COLORS=BG_COLORS;this.ICONS=ICONS;this.iconRef=useRef("app-icon");this.orm=useService("orm");this.rpc=useService("rpc");const user=useService("user");this.FileInput=FileInput;this.fileInputProps={acceptedFileExtensions:"image/png",resModel:"res.users",resId:user.userId,};this.state=useState({iconClass:this.props.iconClass});this.show=useState({backgroundColor:false,color:false,iconClass:false,});onWillUpdateProps((nextProps)=>{if(this.constructor.enableTransitions&&nextProps.iconClass!==this.props.iconClass){this.applyIconTransition(nextProps.iconClass);}else{this.state.iconClass=nextProps.iconClass;}});}
applyIconTransition(nextIconClass){const iconEl=this.iconRef.el;if(!iconEl){return;}
iconEl.classList.remove("o-fading-in");iconEl.classList.remove("o-fading-out");iconEl.onanimationend=()=>{this.state.iconClass=nextIconClass;iconEl.onanimationend=()=>{iconEl.onanimationend=null;iconEl.classList.remove("o-fading-in");};iconEl.classList.remove("o-fading-out");iconEl.classList.add("o-fading-in");};iconEl.classList.add("o-fading-out");}
onDesignIconClick(){this.props.onIconChange({type:"custom_icon",...DEFAULT_ICON,});}
async onFileUploaded([file]){if(!file){return;}
const res=await this.orm.read("ir.attachment",[file.id],["datas"]);this.props.onIconChange({type:"base64",uploaded_attachment_id:file.id,webIconData:"data:image/png;base64,"+res[0].datas.replace(/\s/g,""),});}
onPaletteItemClick(palette,value){if(this.props[palette]===value){return;}
this.props.onIconChange({backgroundColor:this.props.backgroundColor,color:this.props.color,iconClass:this.props.iconClass,type:"custom_icon",[palette]:value,});}
onTogglePalette(palette){for(const pal in this.show){if(pal===palette){this.show[pal]=!this.show[pal];}else if(this.show[pal]){this.show[pal]=false;}}}}
IconCreator.defaultProps=DEFAULT_ICON;IconCreator.props={backgroundColor:{type:String,optional:1},color:{type:String,optional:1},editable:{type:Boolean,optional:1},iconClass:{type:String,optional:1},type:{validate:(t)=>["base64","custom_icon"].includes(t)},uploaded_attachment_id:{type:Number,optional:1},webIconData:{type:String,optional:1},onIconChange:Function,};IconCreator.template="web_studio.IconCreator";IconCreator.enableTransitions=true;return __exports;});;

/* /web_studio/static/src/client_action/menu_creator/menu_creator.js */
odoo.define('@web_studio/client_action/menu_creator/menu_creator',['@odoo/owl','@web/core/utils/hooks','@web/core/dialog/dialog','@web/core/l10n/translation','@web_studio/client_action/utils','@web_studio/client_action/model_configurator/model_configurator','@web/core/record_selectors/record_selector'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{useOwnedDialogs}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useDialogConfirmation}=require("@web_studio/client_action/utils");const{ModelConfiguratorDialog}=require("@web_studio/client_action/model_configurator/model_configurator");const{RecordSelector}=require("@web/core/record_selectors/record_selector");const MenuCreatorModel=__exports.MenuCreatorModel=class MenuCreatorModel{constructor({allowNoModel}={}){this.data={modelId:false,menuName:"",modelChoice:"new",};this.modelChoiceSelection={new:_t("New Model"),existing:_t("Existing Model"),};if(allowNoModel){this.modelChoiceSelection.parent=_t("Parent Menu");}}
validateField(fieldName){if(fieldName==="menuName"){return!!this.data.menuName;}else if(fieldName==="modelId"){return this.data.modelChoice==="existing"?!!this.data.modelId:true;}}
get isValid(){return["menuName","modelId"].every((fName)=>this.validateField(fName));}}
const MenuCreator=__exports.MenuCreator=class MenuCreator extends Component{static template="web_studio.MenuCreator";static components={RecordSelector};static props={menuCreatorModel:{type:Object},showValidation:{type:Boolean,optional:true},};static defaultProps={showValidation:false,};get multiRecordSelectorProps(){return{resModel:"ir.model",resId:this.state.data.modelId&&this.state.data.modelId[0],update:(resId)=>(this.state.data.modelId=[resId]),domain:[["transient","=",false],["abstract","=",false],],};}
setup(){this.state=useState(this.props.menuCreatorModel);}
isValid(fieldName){return this.props.showValidation?this.state.validateField(fieldName):true;}}
const MenuCreatorDialog=__exports.MenuCreatorDialog=class MenuCreatorDialog extends Component{static template="web_studio.MenuCreatorDialog";static components={Dialog,MenuCreator};static props={confirm:{type:Function},close:{type:Function}};setup(){this.addDialog=useOwnedDialogs();this.menuCreatorModel=useState(new MenuCreatorModel({allowNoModel:true}));this.state=useState({showValidation:false});this.title=_t("Create your menu");const{confirm,cancel}=useDialogConfirmation({confirm:async(data={})=>{if(!this.menuCreatorModel.isValid){this.state.showValidation=true;return false;}
await this.props.confirm(data);},});this._confirm=confirm;this._cancel=cancel;}
confirm(data={}){this._confirm({...this.menuCreatorModel.data,...data});}
onCreateNewModel(){if(!this.menuCreatorModel.isValid){this.state.showValidation=true;return;}
this.addDialog(ModelConfiguratorDialog,{confirmLabel:_t("Create Menu"),confirm:(data)=>{this.confirm({modelOptions:data});},});}}
return __exports;});;

/* /web_studio/static/src/client_action/model_configurator/model_configurator.js */
odoo.define('@web_studio/client_action/model_configurator/model_configurator',['@web/core/dialog/dialog','@odoo/owl','@web/core/l10n/translation','@web/session'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{session}=require("@web/session");function getModelOptions(){const modelOptions={use_partner:{label:_t("Contact details"),help:_t("Get contact, phone and email fields on records"),value:false,},use_responsible:{label:_t("User assignment"),help:_t("Assign a responsible to each record"),value:false,},use_date:{label:_t("Date & Calendar"),help:_t("Assign dates and visualize records in a calendar"),value:false,},use_double_dates:{label:_t("Date range & Gantt"),help:_t("Define start/end dates and visualize records in a Gantt chart"),value:false,},use_stages:{label:_t("Pipeline stages"),help:_t("Stage and visualize records in a custom pipeline"),value:false,},use_tags:{label:_t("Tags"),help:_t("Categorize records with custom tags"),value:false,},use_image:{label:_t("Picture"),help:_t("Attach a picture to a record"),value:false,},lines:{label:_t("Lines"),help:_t("Add details to your records with an embedded list view"),value:false,},use_notes:{label:_t("Notes"),help:_t("Write additional notes or comments"),value:false,},use_value:{label:_t("Monetary value"),help:_t("Set a price or cost on records"),value:false,},use_company:{label:_t("Company"),help:_t("Restrict a record to a specific company"),value:false,},use_sequence:{label:_t("Custom Sorting"),help:_t("Manually sort records in the list view"),value:true,},use_mail:{label:_t("Chatter"),help:_t("Send messages, log notes and schedule activities"),value:true,},use_active:{label:_t("Archiving"),help:_t("Archive deprecated records"),value:true,},};if(!session.display_switch_company_menu){delete modelOptions.use_company;}
return modelOptions;}
const ModelConfigurator=__exports.ModelConfigurator=class ModelConfigurator extends Component{setup(){this.state=useState({saving:false});this.options=useState(getModelOptions());}
async onConfirm(){try{this.state.saving=true;const mappedOptions=Object.entries(this.options).filter((opt)=>opt[1].value).map((opt)=>opt[0]);await this.props.onConfirmOptions(mappedOptions);}finally{this.state.saving=false;}}}
ModelConfigurator.template="web_studio.ModelConfigurator";ModelConfigurator.components={};ModelConfigurator.props={embed:{type:Boolean,optional:true},label:{type:String},onConfirmOptions:Function,onPrevious:Function,};const ModelConfiguratorDialog=__exports.ModelConfiguratorDialog=class ModelConfiguratorDialog extends Component{static components={Dialog,ModelConfigurator};static template="web_studio.ModelConfiguratorDialog";static props={confirm:{type:Function},close:{type:Function},confirmLabel:{type:String,optional:true},};async onConfirm(data){await this.props.confirm(data);this.props.close();}
onPrevious(){this.props.close();}
get title(){return _t("Suggested features for your new model");}}
return __exports;});;

/* /web_studio/static/src/client_action/navbar/home_menu_customizer/home_menu_customizer.js */
odoo.define('@web_studio/client_action/navbar/home_menu_customizer/home_menu_customizer',['@web/core/l10n/translation','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/utils/hooks','@web/core/browser/browser','@web/core/network/download','@web/core/confirmation_dialog/confirmation_dialog','@web/core/file_input/file_input','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{browser}=require("@web/core/browser/browser");const{download}=require("@web/core/network/download");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{FileInput}=require("@web/core/file_input/file_input");const{Component}=require("@odoo/owl");const HomeMenuCustomizer=__exports.HomeMenuCustomizer=class HomeMenuCustomizer extends Component{setup(){this.rpc=useService("rpc");this.ui=useService("ui");this.notification=useService("notification");this.company=useService("company");this.user=useService("user");this.actionManager=useService("action");this.menus=useService("menu");this.dialogManager=useService("dialog");}
setBackgroundImage(attachment_id){return this.rpc("/web_studio/set_background_image",{attachment_id:attachment_id,context:this.user.context,});}
exportCusto(){download({url:"/web_studio/export",data:{}});}
importCusto(){const action={name:"Import modules",res_model:"base.import.module",views:[[false,"form"]],type:"ir.actions.act_window",target:"new",context:{dialog_size:"medium",},};const options={onClose:()=>this.menus.reload(),};this.actionManager.doAction(action,options);}
async confirmReset(){this.ui.block();try{await this.rpc("/web_studio/reset_background_image",{context:this.user.context,});browser.location.reload();}finally{this.ui.unblock();}}
resetBackground(){this.dialogManager.add(ConfirmationDialog,{body:_t("Are you sure you want to reset the background image?"),title:_t("Confirmation"),confirm:()=>this.confirmReset(),});}
async onBackgroundUpload([file]){if(!file){this.notification.add(_t("Could not change the background"),{sticky:true,type:"warning",});}else{this.ui.block();try{await this.setBackgroundImage(file.id);browser.location.reload();}finally{this.ui.unblock();}}}}
HomeMenuCustomizer.template="web_studio.HomeMenuCustomizer";HomeMenuCustomizer.props={};HomeMenuCustomizer.components={Dropdown,DropdownItem,FileInput};return __exports;});;

/* /web_studio/static/src/client_action/navbar/navbar.js */
odoo.define('@web_studio/client_action/navbar/navbar',['@web/core/l10n/translation','@odoo/owl','@web/core/registry','@web/core/utils/hooks','@web_enterprise/webclient/navbar/navbar','@web_studio/client_action/navbar/home_menu_customizer/home_menu_customizer','@web_studio/studio_service'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{onMounted,onWillUnmount}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{EnterpriseNavBar}=require("@web_enterprise/webclient/navbar/navbar");const{HomeMenuCustomizer}=require("@web_studio/client_action/navbar/home_menu_customizer/home_menu_customizer");const{useStudioServiceAsReactive,NotEditableActionError}=require("@web_studio/studio_service");const menuButtonsRegistry=registry.category("studio_navbar_menubuttons");const StudioNavbar=__exports.StudioNavbar=class StudioNavbar extends EnterpriseNavBar{setup(){super.setup();this.studio=useStudioServiceAsReactive();this.actionManager=useService("action");this.user=useService("user");this.dialogManager=useService("dialog");this.notification=useService("notification");onMounted(()=>{this.env.bus.removeEventListener("HOME-MENU:TOGGLED",this._busToggledCallback);this._updateMenuAppsIcon();});const onMenuButtonsUpdate=()=>this.render();menuButtonsRegistry.addEventListener("UPDATE",onMenuButtonsUpdate);onWillUnmount(()=>menuButtonsRegistry.removeEventListener("UPDATE",onMenuButtonsUpdate));}
onMenuToggle(){this.studio.toggleHomeMenu();}
closeStudio(){this.studio.leave();}
async onNavBarDropdownItemSelection(menu){if(menu.actionID){try{await this.studio.open(this.studio.MODES.EDITOR,menu.actionID);}catch(e){if(e instanceof NotEditableActionError){const options={type:"danger"};this.notification.add(_t("This action is not editable by Studio"),options);return;}
throw e;}}}
get hasBackgroundAction(){return this.studio.editedAction||this.studio.MODES.APP_CREATOR===this.studio.mode;}
get isInApp(){return this.studio.mode===this.studio.MODES.EDITOR;}
get menuButtons(){return Object.fromEntries(menuButtonsRegistry.getEntries());}}
StudioNavbar.template="web_studio.StudioNavbar";StudioNavbar.components.HomeMenuCustomizer=HomeMenuCustomizer;return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor.js */
odoo.define('@web_studio/client_action/report_editor/report_editor',['@odoo/owl','@web/core/registry','@web_studio/client_action/report_editor/report_editor_model','@web_studio/client_action/report_editor/report_editor_wysiwyg/report_editor_wysiwyg','@web_studio/client_action/report_editor/report_editor_xml/report_editor_xml','@web_studio/client_action/report_editor/utils','@web/webclient/actions/action_service'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{useReportEditorModel}=require("@web_studio/client_action/report_editor/report_editor_model");const{ReportEditorWysiwyg}=require("@web_studio/client_action/report_editor/report_editor_wysiwyg/report_editor_wysiwyg");const{ReportEditorXml}=require("@web_studio/client_action/report_editor/report_editor_xml/report_editor_xml");const{getCssFromPaperFormat}=require("@web_studio/client_action/report_editor/utils");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");class ReportEditor extends Component{static template="web_studio.ReportEditor";static components={ReportEditorWysiwyg,ReportEditorXml};static props={...standardActionServiceProps};setup(){this.reportEditorModel=useReportEditorModel();}
get paperFormatStyle(){const{margin_top,margin_left,margin_right,print_page_height,print_page_width,header_spacing,}=this.reportEditorModel.paperFormat;const marginTop=Math.max(0,(margin_top||0)-(header_spacing||0));return getCssFromPaperFormat({margin_top:marginTop,margin_left,margin_right,print_page_height,print_page_width,});}}
registry.category("actions").add("web_studio.report_editor",ReportEditor);return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor_iframe.js */
odoo.define('@web_studio/client_action/report_editor/report_editor_iframe',['@odoo/owl','@web_studio/client_action/report_editor/utils','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component,useRef,useState}=require("@odoo/owl");const{getCssFromPaperFormat}=require("@web_studio/client_action/report_editor/utils");const{useThrottleForAnimation}=require('@web/core/utils/timing');const ReportEditorIframe=__exports.ReportEditorIframe=class ReportEditorIframe extends Component{static template="web_studio.ReportEditor.Iframe";static props={iframeKey:String,iframeSource:String,onIframeLoaded:Function,};setup(){this.reportEditorModel=useState(this.env.reportEditorModel);this.iframeRef=useRef("iframeRef");this.onContainerScroll=useThrottleForAnimation(()=>{if(this.iframeRef.el?.contentDocument){this.iframeRef.el.contentDocument.dispatchEvent(new Event("scroll"))}})}
get paperFormatStyle(){const{margin_top,margin_left,margin_right,print_page_height,print_page_width,header_spacing,}=this.reportEditorModel.paperFormat;const marginTop=Math.max(0,(margin_top||0)-(header_spacing||0));return getCssFromPaperFormat({margin_top:marginTop,margin_left,margin_right,print_page_height,print_page_width,});}
get iframeStyle(){const{print_page_height}=this.reportEditorModel.paperFormat;return getCssFromPaperFormat({print_page_height});}
get iframeSource(){return this.props.iframeSource;}
get iframeKey(){return this.reportEditorModel.renderKey+"_"+(this.props.iframeKey||"");}
async onIframeLoaded(){await this.resizeIframeContent({iframeRef:this.iframeRef});this.props.onIframeLoaded({iframeRef:this.iframeRef});}
async resizeIframeContent({iframeRef}){const paperFormat=this.reportEditorModel.paperFormat;const iframeEl=iframeRef.el;const iframeContent=iframeEl.contentDocument;const zoom=96/paperFormat.dpi;Array.from(iframeContent.querySelector("main")?.children||[]).forEach((el)=>{let sectionZoom=zoom;if(!paperFormat.disable_shrinking){const{width}=el.getBoundingClientRect();sectionZoom=Math.min(zoom,width/el.scrollWidth);}
el.setAttribute("oe-origin-style",el.getAttribute("style")||"");el.style.setProperty("zoom",sectionZoom);});const computeIframeHeight=()=>(iframeEl.style.height=iframeContent.body.scrollHeight+"px");const footer=iframeContent.querySelector(".footer");const footerStyle=footer?.style;if(footerStyle){const{width}=iframeContent.querySelector(".page")?.getBoundingClientRect()||{};footer.setAttribute("oe-origin-style",footer.getAttribute("style")||"");footerStyle.setProperty("position","fixed");footerStyle.setProperty("bottom","0");if(width){footerStyle.setProperty("width",`${width}px`);}}
iframeContent.querySelector("html").style.overflow="hidden";const proms=[];Array.from(iframeContent.querySelectorAll("img[src]")||[]).forEach((img)=>{if(img.complete){return;}
const prom=new Promise((resolve)=>{img.onload=resolve;});proms.push(prom);});await Promise.all(proms);computeIframeHeight();}}
return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor_model.js */
odoo.define('@web_studio/client_action/report_editor/report_editor_model',['@web_studio/client_action/utils','@odoo/owl','@web/core/utils/hooks','@web/core/utils/objects','@web/core/l10n/translation','@web_studio/client_action/editor/edition_flow','@web/core/utils/concurrency','@web/core/utils/render','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{Reactive}=require("@web_studio/client_action/utils");const{EventBus,markRaw,onWillStart,reactive,toRaw,useEnv,useState,useSubEnv,}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{omit,pick}=require("@web/core/utils/objects");const{_t}=require("@web/core/l10n/translation");const{useEditorBreadcrumbs}=require("@web_studio/client_action/editor/edition_flow");const{KeepLast}=require("@web/core/utils/concurrency");const{renderToMarkup}=require("@web/core/utils/render");const{makeActiveField}=require("@web/model/relational_model/utils");const notificationErrorTemplate="web_studio.ReportEditor.NotificationError";const errorQweb=`<html><div>The report could not be rendered due to an error</div><html>`;const ReportEditorModel=__exports.ReportEditorModel=class ReportEditorModel extends Reactive{constructor({services,resModel}){super();this.bus=markRaw(new EventBus());this.mode="wysiwyg";this.warningMessage="";this._isDirty=false;this._isInEdition=false;this._services=markRaw(services);this._errorMessage=false;this.paperFormat={margin_top:0,margin_left:0,margin_right:0,print_page_width:210,print_page_height:297,};this.reportFields=markRaw({id:{name:"id",type:"number"},name:{name:"name",type:"char"},model:{name:"model",type:"char"},report_name:{name:"report_name",type:"char"},groups_id:{name:"groups_id",type:"many2many",relation:"res.groups",relatedFields:{display_name:{type:"char"},},},paperformat_id:{name:"paperformat_id",type:"many2one",relation:"report.paperformat",},binding_model_id:{name:"binding_model_id",type:"many2one",relation:"ir.model"},attachment_use:{name:"attachment_use",type:"boolean"},attachment:{name:"attachment",type:"char"},display_in_print_menu:{name:"display_in_print_menu",type:"boolean"},});this.reportActiveFields=markRaw({id:makeActiveField(),name:makeActiveField(),model:makeActiveField(),report_name:makeActiveField(),groups_id:{...makeActiveField(),related:{fields:{display_name:{name:"display_name",type:"char"}},activeFields:{display_name:makeActiveField()},},},paperformat_id:makeActiveField(),binding_model_id:makeActiveField(),attachment_use:makeActiveField(),attachment:makeActiveField(),display_in_print_menu:makeActiveField(),});this.reportEnv={};this.loadHtmlKeepLast=markRaw(new KeepLast());this._reportArchs={};this.renderKey=1;this.routesContext=pick(this._services.user.context,"allowed_company_ids");}
get reportData(){return this._reportChanges||this._reportData;}
set reportData(_data){const fields=this.reportFields;const data={..._data};for(const[fName,value]of Object.entries(data)){const field=fields[fName];if(field.type==="many2many"){data[fName]=[...value.currentIds];}}
this._reportChanges=data;}
get reportResModel(){return this._reportData.model;}
get recordToDisplay(){return this.reportEnv.currentId||this.reportEnv.ids.find((i)=>!!i)||false;}
get editedReportId(){return this._services.studio.editedReport.res_id;}
get reportQweb(){return this._reportArchs.reportQweb;}
get reportHtml(){return this._reportArchs.reportHtml;}
get isDirty(){return this._reportChanges||this._isDirty;}
set isDirty(bool){this._isDirty=bool;}
get isInEdition(){return this._isInEdition;}
setInEdition(value){value=!!value;if(reactive(this)._isInEdition===value){return;}
this._isInEdition=value;if(value){this._services.ui.block();}else{this._services.ui.unblock();}}
_resetInternalArchs(){toRaw(this)._reportArchs={};}
async loadReportEditor(){await this.loadReportData();return this.loadModelEnv();}
async loadReportData(){const data=await this._services.rpc("/web_studio/load_report_editor",{report_id:this.editedReportId,fields:Object.keys(omit(this.reportActiveFields,"display_in_print_menu")),context:this.routesContext,});this._reportData=this._parseFakeFields(data.report_data);Object.assign(this.paperFormat,data.paperformat);this._errorMessage=data.qweb_error;this._reportArchs.reportQweb=data.report_qweb||errorQweb;this._isLoaded=true;}
async loadReportQweb(){if(!this._isLoaded){return;}
if(this._reportArchs.reportQweb){return;}
try{const reportQweb=await this.loadHtmlKeepLast.add(this._services.rpc("/web_studio/get_report_qweb",{report_id:this.editedReportId,context:this.routesContext,}));this._reportArchs.reportQweb=reportQweb;}catch(e){this._errorMessage=e;this._reportArchs.reportQweb=errorQweb;}
this.setInEdition(false);}
async loadReportHtml({resId}={}){if(!this._isLoaded){return;}
if(resId===undefined&&this._reportArchs.reportHtml){return;}
this.reportEnv.currentId=resId!==undefined?resId:this.reportEnv.currentId;try{const reportHtml=await this.loadHtmlKeepLast.add(this._services.rpc("/web_studio/get_report_html",{report_id:this.editedReportId,record_id:this.reportEnv.currentId||0,context:this.routesContext,}));this._reportArchs.reportHtml=reportHtml;}catch{this._reportArchs.reportHtml=errorQweb;}
this.setInEdition(false);}
async saveReport({htmlParts,urgent,xmlVerbatim}={}){const hasPartsToSave=htmlParts&&Object.keys(htmlParts).length;const hasVerbatimToSave=xmlVerbatim&&Object.keys(xmlVerbatim).length;const hasDataToSave=this.isDirty;this.warningMessage="";if(hasVerbatimToSave&&hasPartsToSave){throw new Error(_t("Saving both some report's parts and full xml is not permitted."));}
if(this._errorMessage&&hasPartsToSave){throw new Error(_t("The report is in error. Only editing the XML sources is permitted"));}
if(!hasVerbatimToSave&&!hasPartsToSave&&!hasDataToSave){return;}
if(!urgent){this.setInEdition(true);}
let result;try{result=await this._services.unProtectedRpc("/web_studio/save_report",{report_id:this.editedReportId,report_changes:this._reportChanges||null,html_parts:htmlParts||null,xml_verbatim:xmlVerbatim||null,record_id:this.reportEnv.currentId||null,context:this.routesContext,},{silent:urgent});}catch{this.setInEdition(false);const message=renderToMarkup(notificationErrorTemplate,{reportName:this._reportData.name,recordId:this.reportEnv.currentId,});this._services.unProtectedNotification.add(message,{type:"warning",title:_t("Report edition failed"),});this.warningMessage=_t("Report edition failed");return false;}finally{this._errorMessage=false;}
if(hasPartsToSave||hasVerbatimToSave){this._resetInternalArchs();}
const{report_data,paperformat,report_html,report_qweb}=result||{};if(!urgent&&report_data){this._reportData=this._parseFakeFields(report_data);this._reportChanges=null;this.paperFormat=paperformat;}
this.isDirty=false;if(!urgent){this._reportArchs.reportHtml=report_html;this._reportArchs.reportQweb=report_qweb;}
this.setInEdition(false);}
discardReport(){this.setInEdition(true);this.warningMessage="";this.isDirty=false;this.renderKey++;}
async loadModelEnv(){if(this.reportEnv.ids){return;}
const modelName=this.reportResModel;const result=await this._services.orm.search(modelName,this.getModelDomain(),{context:this._services.user.context,});this.reportEnv={ids:result,currentId:result[0]||false,};}
getModelDomain(){const modelName=this.reportResModel;let domain=[];if(modelName==="account.move"){domain=[["move_type","!=","entry"]];}
return domain;}
async resetReport(includeHeaderFooter=true){this.setInEdition(true);await this._services.rpc("/web_studio/reset_report_archs",{report_id:this.editedReportId,include_web_layout:includeHeaderFooter,});this._resetInternalArchs();await this.loadReportQweb();}
_parseFakeFields(reportData){reportData.display_in_print_menu=!!reportData.binding_model_id;return reportData;}}
__exports.useReportEditorModel=useReportEditorModel;function useReportEditorModel(){const services=Object.fromEntries(["orm","user","rpc","ui"].map((name)=>{return[name,useService(name)];}));const env=useEnv();services.studio={...env.services.studio};services.unProtectedRpc=env.services.rpc;services.unProtectedNotification=env.services.notification;const reportEditorModel=new ReportEditorModel({services});useSubEnv({reportEditorModel});function getName(rem){return rem.reportData?.name;}
const crumb=reactive({});const rem=reactive(reportEditorModel,()=>{crumb.name=getName(rem);});crumb.name=getName(rem);useEditorBreadcrumbs(crumb);onWillStart(()=>reportEditorModel.loadReportEditor());return useState(reportEditorModel);}
return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor_snackbar.js */
odoo.define('@web_studio/client_action/report_editor/report_editor_snackbar',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const ReportEditorSnackbar=__exports.ReportEditorSnackbar=class ReportEditorSnackbar extends Component{static template="web_studio.ReportEditor.SnackBar";static props={onSave:Function,state:Object,onDiscard:{type:Function,optional:true},};}
return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor_wysiwyg/report_editor_wysiwyg.js */
odoo.define('@web_studio/client_action/report_editor/report_editor_wysiwyg/report_editor_wysiwyg',['@odoo/owl','@web/core/assets','@web/core/l10n/translation','@web/core/utils/objects','@web/core/popover/popover_hook','@web/core/hotkeys/hotkey_hook','@web/core/utils/arrays','@web/core/utils/hooks','@web/core/select_menu/select_menu','@web_editor/js/backend/QWebPlugin','@web_editor/js/editor/odoo-editor/src/utils/utils','@web_studio/client_action/report_editor/report_editor_wysiwyg/studio_dynamic_placeholder_popover','@web/views/fields/many2many_tags/many2many_tags_field','@web/views/fields/char/char_field','@web/model/record','@web/views/fields/many2one/many2one_field','@web/views/fields/boolean/boolean_field','@web/core/confirmation_dialog/confirmation_dialog','@web_studio/client_action/report_editor/report_editor_snackbar','@web_studio/client_action/editor/edition_flow','@web_studio/client_action/utils','@web_studio/client_action/report_editor/report_editor_iframe'],function(require){'use strict';let __exports={};const{Component,onWillStart,onMounted,onWillDestroy,onWillUnmount,reactive,useState,}=require("@odoo/owl");const{loadBundle}=require("@web/core/assets");const{_t}=require("@web/core/l10n/translation");const{omit}=require("@web/core/utils/objects");const{usePopover}=require("@web/core/popover/popover_hook");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{sortBy}=require("@web/core/utils/arrays");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{SelectMenu}=require('@web/core/select_menu/select_menu');const{QWebPlugin}=require("@web_editor/js/backend/QWebPlugin");const{setSelection,startPos,endPos}=require("@web_editor/js/editor/odoo-editor/src/utils/utils");const{StudioDynamicPlaceholderPopover}=require("@web_studio/client_action/report_editor/report_editor_wysiwyg/studio_dynamic_placeholder_popover");const{Many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{CharField}=require("@web/views/fields/char/char_field");const{Record:_Record}=require("@web/model/record");const{Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{BooleanField}=require("@web/views/fields/boolean/boolean_field");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{ReportEditorSnackbar}=require("@web_studio/client_action/report_editor/report_editor_snackbar");const{useEditorMenuItem}=require("@web_studio/client_action/editor/edition_flow");const{memoizeOnce}=require("@web_studio/client_action/utils");const{ReportEditorIframe}=require("@web_studio/client_action/report_editor/report_editor_iframe");class __Record extends _Record.components._Record{setup(){super.setup();const willSaveUrgently=()=>this.model.bus.trigger("WILL_SAVE_URGENTLY");onMounted(()=>{this.env.reportEditorModel.bus.addEventListener("WILL_SAVE_URGENTLY",willSaveUrgently);});onWillDestroy(()=>this.env.reportEditorModel.bus.removeEventListener("WILL_SAVE_URGENTLY",willSaveUrgently));}}
class Record extends _Record{static components={..._Record.components,_Record:__Record};}
function getOrderedTAs(node){const results=[];while(node){const closest=node.closest("[t-foreach]");if(closest){results.push(closest.getAttribute("t-as"));node=closest.parentElement;}else{node=null;}}
return results;}
class FieldDynamicPlaceholder extends Component{static components={StudioDynamicPlaceholderPopover,SelectMenu};static template="web_studio.FieldDynamicPlaceholder";static props={resModel:String,availableQwebVariables:Object,close:Function,validate:Function,isEditingFooterHeader:Boolean,initialQwebVar:{optional:true,type:String},showOnlyX2ManyFields:Boolean,};static defaultProps={initialQwebVar:"",};setup(){this.state=useState({currentVar:this.getDefaultVariable()});useHotkey("escape",()=>this.props.close());}
get currentResModel(){const currentVar=this.state.currentVar;const resModel=currentVar&&this.props.availableQwebVariables[currentVar].model;return resModel||this.props.resModel;}
get sortedVariables(){const entries=Object.entries(this.props.availableQwebVariables).filter(([k,v])=>v.in_foreach&&!this.props.isEditingFooterHeader);const resModel=this.props.resModel;const sortFn=([k,v])=>{let score=0;if(k==="doc"){score+=2;}
if(k==="docs"){score-=2;}
if(k==="o"){score++;}
if(v.model===resModel){score++;}
return score;};const mapFn=([k,v])=>{return{value:k,label:`${k} (${v.name})`,model:v.model,}}
return sortBy(entries,sortFn,"desc").map(e=>mapFn(e));}
validate(...args){this.props.validate(this.state.currentVar,...args);}
getDefaultVariable(){const initialQwebVar=this.props.initialQwebVar;if(initialQwebVar&&initialQwebVar in this.props.availableQwebVariables){return initialQwebVar;}
if(this.props.isEditingFooterHeader){const companyVar=Object.entries(this.props.availableQwebVariables).find(([k,v])=>v.model==="res.company");return companyVar&&companyVar[0];}
let defaultVar=this.sortedVariables.find((v)=>{return["doc","o"].includes(v.value);});defaultVar=defaultVar||this.sortedVariables.find((v)=>v.model===this.props.resModel);return defaultVar&&defaultVar.value;}}
class UndoRedo extends Component{static template="web_studio.ReportEditorWysiwyg.UndoRedo";static props={state:Object,};}
class ResetConfirmatiopnPopup extends ConfirmationDialog{static template="web_studio.ReportEditorWysiwyg.ResetConfirmatiopnPopup";static props={...omit(ConfirmationDialog.props,"body"),state:Object,};}
function getMaxColumns(row){let cols=[];const children=Array.from(row.children);if(children.every((el)=>el.tagName==="T")){for(const child of children){const subCols=getMaxColumns(child);if(subCols.length>cols.length){cols=subCols;}}}else{cols=children.filter((el)=>el.tagName!=="T");}
return cols;}
function computeTableLayout(table){const allRows=table.querySelectorAll("[oe-origin-tag='tr']");let refCols=[];for(const row of allRows){const cols=getMaxColumns(row);if(cols.length>refCols.length){refCols=cols;}}
let numCols=0;for(const col of refCols){const colSpan=parseInt(col.getAttribute("colspan")||"1");numCols+=colSpan;}
const baseColSize=Math.floor(100/numCols);const gap=10;for(const row of allRows){const cols=row.querySelectorAll("[oe-origin-tag='td'],[oe-origin-tag='th']");for(const col of cols){let colSpan=parseInt(col.getAttribute("colspan")||"1");if(colSpan>numCols){colSpan=numCols;}
col.setAttribute("style",`width: calc(${baseColSize * colSpan}% - ${gap}px);`);}}}
const ReportEditorWysiwyg=__exports.ReportEditorWysiwyg=class ReportEditorWysiwyg extends Component{static components={CharField,Record,Many2ManyTagsField,Many2OneField,BooleanField,UndoRedo,ReportEditorIframe,};static props={paperFormatStyle:String,};static template="web_studio.ReportEditorWysiwyg";setup(){this.rpc=useService("rpc");this.action=useService("action");this.user=useService("user");this.addDialog=useOwnedDialogs();this.notification=useService("notification");this._getReportQweb=memoizeOnce(()=>{const tree=new DOMParser().parseFromString(this.reportEditorModel.reportQweb,"text/html");for(const table of tree.querySelectorAll("[oe-origin-tag='table']")){computeTableLayout(table);}
return tree.firstElementChild;});const reportEditorModel=(this.reportEditorModel=useState(this.env.reportEditorModel));this.state=useState({wysiwygKey:0});this.fieldPopover=usePopover(FieldDynamicPlaceholder);useEditorMenuItem({component:ReportEditorSnackbar,props:{state:reportEditorModel,onSave:this.save.bind(this),onDiscard:this.discard.bind(this),},});onWillStart(async()=>{await Promise.all([loadBundle("web_editor.backend_assets_wysiwyg"),this.reportEditorModel.loadReportQweb(),]);this.Wysiwyg=(await odoo.loader.modules.get("@web_editor/js/wysiwyg/wysiwyg")).Wysiwyg;});onWillUnmount(()=>{this.reportEditorModel.bus.trigger("WILL_SAVE_URGENTLY");this.save({urgent:true});});this.setWysiwygInstance=async(wysiwyg)=>{await wysiwyg.startEdition();if(this.observer){this.observer.disconnect();this.observer=null;}
this.wysiwyg=wysiwyg;const odooEditor=this.wysiwyg.odooEditor;const undoRedoState=this.undoRedoState;undoRedoState.canUndo=false;undoRedoState.canRedo=false;odooEditor.addEventListener("historyStep",()=>{undoRedoState.canUndo=odooEditor.historyCanUndo();undoRedoState.canRedo=odooEditor.historyCanRedo();this.reportEditorModel.isDirty=this.undoRedoState.canUndo;});const observe=()=>{this.observer.observe(wysiwyg.$editable[0],{childList:true,subtree:true,attributes:true,attributeOldValue:true,characterData:true,});};this.observer=new MutationObserver((records)=>this.domChangesDirtyMutations(odooEditor,records));odooEditor.addEventListener("observerUnactive",()=>{if(this.observer){this.domChangesDirtyMutations(odooEditor,this.observer.takeRecords());this.observer.disconnect();}});odooEditor.addEventListener("observerActive",observe);odooEditor.observerUnactive();if(odoo.debug){["t-esc","t-out","t-field"].forEach((tAtt)=>{odooEditor.document.querySelectorAll(`*[${tAtt}]`).forEach((e)=>{if(e.hasAttribute("title")){e.setAttribute("data-oe-title",e.getAttribute("title"));}
e.setAttribute("title",e.getAttribute(tAtt));});});}
odooEditor.observerActive();};this.undoRedoState=reactive({canUndo:false,canRedo:false,undo:()=>this.wysiwyg?.odooEditor.historyUndo(),redo:()=>this.wysiwyg?.odooEditor.historyRedo(),});}
onIframeLoaded({iframeRef}){this.iframeRef=iframeRef;const doc=iframeRef.el.contentDocument;const _jquery=window.$;doc.defaultView.$=(...args)=>{if(args.length<=2&&typeof args[0]==="string"){return _jquery(args[0],args[1]||doc);}else{return _jquery(...args);}};doc.body.classList.remove("container");this.state.wysiwygKey++;this.reportEditorModel.setInEdition(false);}
get reportQweb(){const model=this.reportEditorModel;return this._getReportQweb(`${model.renderKey}_${model.reportQweb}`).outerHTML;}
get wysiwygProps(){const iframe=this.iframeRef.el;const options={get editable(){return $(iframe.contentDocument.querySelector("#wrapwrap"));},get document(){return iframe.contentDocument;},powerboxCategories:[{name:_t("Report Tools"),priority:100}],powerboxCommands:this.getPowerboxCommands(),allowCommandVideo:false,editorPlugins:[QWebPlugin],savableSelector:"[data-oe-model='ir.ui.view']",autostart:true,sideAttach:true,getContextFromParentRect:()=>{return this.iframeRef.el.getBoundingClientRect();},};return{options,startWysiwyg:this.setWysiwygInstance};}
get reportRecordProps(){const model=this.reportEditorModel;return{fields:model.reportFields,activeFields:model.reportActiveFields,values:model.reportData,};}
async save({urgent=false}={}){if(!this.wysiwyg){return;}
const htmlParts={};const editableClone=this.wysiwyg.$editable.clone()[0];this.wysiwyg._saveElement=async($el)=>{const viewId=$el.data("oe-id");if(!viewId){return;}
const escaped_html=$el[0].outerHTML;htmlParts[viewId]=htmlParts[viewId]||{};const xpath=$el.data("oe-xpath");htmlParts[viewId][xpath||"entire_view"]=escaped_html;};if(odoo.debug){editableClone.querySelectorAll("*[t-field],*[t-out],*[t-esc]").forEach((e)=>{if(e.hasAttribute("data-oe-title")){e.setAttribute("title",e.getAttribute("data-oe-title"));e.removeAttribute("data-oe-title");}else{e.removeAttribute("title");}});}
await this.wysiwyg.saveContent(false,editableClone);await this.reportEditorModel.saveReport({htmlParts,urgent});}
async discard(){this.wysiwyg.odooEditor.document.getSelection().removeAllRanges();await this.wysiwyg.cancel(false);await this.reportEditorModel.discardReport();}
domChangesDirtyMutations(odooEditor,records){records=odooEditor.filterMutationRecords(records);for(const record of records){if(record.type==="attributes"){if(record.attributeName==="contenteditable"){continue;}
if(record.attributeName.startsWith("data-oe-t")){continue;}}
let target=record.target;if(!target.isConnected){continue;}
if(target.nodeType!==Node.ELEMENT_NODE){target=target.parentElement;}
if(!target){continue;}
target=target.closest(`[data-oe-model='ir.ui.view']`);if(!target){continue;}
const viewId=target.getAttribute("data-oe-id");if(target.parentElement.closest(`.o_dirty[data-oe-model='ir.ui.view'][data-oe-id='${viewId}']`)){continue;}
target.classList.add("o_dirty");target.querySelectorAll(`[data-oe-model='ir.ui.view'][data-oe-id='${viewId}'].o_dirty`).forEach((n)=>n.classList.remove("o_dirty"));}}
getPowerboxCommands(){return[{category:_t("Report Tools"),name:_t("Field"),priority:150,description:_t("Insert a field"),fontawesome:"fa-magic",callback:()=>this.insertField(),},{category:_t("Report Tools"),name:_t("Dynamic Table"),priority:140,description:_t("Insert a table based on a relational field."),fontawesome:"fa-magic",callback:()=>this.insertTableX2Many(),},];}
getFieldPopoverParams(){const odooEditor=this.wysiwyg.odooEditor;const doc=odooEditor.document;const resModel=this.reportEditorModel.reportResModel;const docSelection=doc.getSelection();const{anchorNode}=docSelection;const isEditingFooterHeader=!!(doc.querySelector(".header")&&doc.querySelector(".header").contains(anchorNode))||!!(doc.querySelector(".footer")&&doc.querySelector(".footer").contains(anchorNode));const popoverAnchor=anchorNode.nodeType===1?anchorNode:anchorNode.parentElement;const nodeOeContext=popoverAnchor.closest("[oe-context]");const availableQwebVariables=nodeOeContext&&JSON.parse(nodeOeContext.getAttribute("oe-context"));return{popoverAnchor,props:{availableQwebVariables,initialQwebVar:getOrderedTAs(popoverAnchor)[0]||"",isEditingFooterHeader,resModel,},};}
async insertTableX2Many(){const{popoverAnchor,props}=this.getFieldPopoverParams();await this.fieldPopover.open(popoverAnchor,{...props,showOnlyX2ManyFields:true,validate:(qwebVar,fieldNameChain,defaultValue="",is_image,relation,relationName)=>{this.wysiwyg.focus();const doc=this.wysiwyg.odooEditor.document;const table=doc.createElement("table");table.classList.add("table","table-sm");const tBody=table.createTBody();const topRow=tBody.insertRow();topRow.classList.add("border-bottom","border-top-0","border-start-0","border-end-0","border-2","border-dark","fw-bold");const topTd=doc.createElement("td");topTd.appendChild(doc.createTextNode(defaultValue||"Column name"));topRow.appendChild(topTd);const tr=doc.createElement("tr");tr.setAttribute("t-foreach",`${qwebVar}.${fieldNameChain}`);tr.setAttribute("t-as","x2many_record");tr.setAttribute("oe-context",JSON.stringify({x2many_record:{model:relation,in_foreach:true,name:relationName,},...props.availableQwebVariables}));tBody.appendChild(tr);const td=doc.createElement("td");td.textContent=_t("Insert a field...");tr.appendChild(td);this.wysiwyg.odooEditor.execCommand("insert",table);this.iframeRef.el.focus();setSelection(...startPos(td),...endPos(td),true);},});}
async insertField(){const{popoverAnchor,props}=this.getFieldPopoverParams();await this.fieldPopover.open(popoverAnchor,{...props,showOnlyX2ManyFields:false,validate:(qwebVar,fieldNameChain,defaultValue="",is_image)=>{this.wysiwyg.focus();const doc=this.wysiwyg.odooEditor.document;const span=doc.createElement("span");span.textContent=defaultValue;span.setAttribute("t-field",`${qwebVar}.${fieldNameChain}`);if(odoo.debug){span.setAttribute("title",`${qwebVar}.${fieldNameChain}`);}
if(is_image){span.setAttribute("t-options-widget","'image'");span.setAttribute("t-options-qweb_img_raw_data",1);}
this.wysiwyg.odooEditor.execCommand("insert",span);},});}
async printPreview(){const model=this.reportEditorModel;await this.save();const recordId=model.reportEnv.currentId||model.reportEnv.ids.find((i)=>!!i)||false;if(!recordId){this.notification.add(_t("There is no record on which this report can be previewed. Create at least one record to preview the report."),{type:"danger",title:_t("Report preview not available"),});return;}
const action=await this.rpc("/web_studio/print_report",{record_id:recordId,report_id:model.editedReportId,});this.reportEditorModel.renderKey++;return this.action.doAction(action,{clearBreadcrumbs:true});}
async resetReport(){this.wysiwyg.odooEditor.document.getSelection().removeAllRanges();const state=reactive({includeHeaderFooter:true});this.addDialog(ResetConfirmatiopnPopup,{title:_t("Reset report"),confirmLabel:_t("Reset report"),confirmClass:"btn-danger",cancelLabel:_t("Go back"),state,cancel:()=>{},confirm:async()=>{await this.reportEditorModel.saveReport();this.reportEditorModel.renderKey++;return this.reportEditorModel.resetReport(state.includeHeaderFooter);},});}
async openReportFormView(){await this.save();return this.action.doAction({type:"ir.actions.act_window",res_model:"ir.actions.report",res_id:this.reportEditorModel.editedReportId,views:[[false,"form"]],target:"current",},{clearBreadcrumbs:true});}
async editSources(){await this.save();this.reportEditorModel.mode="xml";}}
return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor_wysiwyg/studio_dynamic_placeholder_popover.js */
odoo.define('@web_studio/client_action/report_editor/report_editor_wysiwyg/studio_dynamic_placeholder_popover',['@web/views/fields/dynamic_placeholder_popover','@web/core/model_field_selector/utils'],function(require){'use strict';let __exports={};const{DynamicPlaceholderPopover}=require("@web/views/fields/dynamic_placeholder_popover");const{useLoadFieldInfo}=require("@web/core/model_field_selector/utils");const StudioDynamicPlaceholderPopover=__exports.StudioDynamicPlaceholderPopover=class StudioDynamicPlaceholderPopover extends DynamicPlaceholderPopover{static template="web_studio.StudioDynamicPlaceholderPopover";static props=[...DynamicPlaceholderPopover.props,"showOnlyX2ManyFields"];setup(){super.setup();this.loadFieldInfo=useLoadFieldInfo();}
filter(fieldDef){if(this.props.showOnlyX2ManyFields){return["one2many","many2many"].includes(fieldDef.type);}else{return super.filter(fieldDef);}}
async validate(){const fieldInfo=(await this.loadFieldInfo(this.props.resModel,this.state.path)).fieldDef;const filename_exists=(await this.loadFieldInfo(this.props.resModel,this.state.path+"_filename")).fieldDef;const is_image=fieldInfo.type=="binary"&&!filename_exists;this.props.close();this.props.validate(this.state.path,this.state.defaultValue,is_image,fieldInfo.relation,fieldInfo.string);}}
return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor_xml/report_editor_xml.js */
odoo.define('@web_studio/client_action/report_editor/report_editor_xml/report_editor_xml',['@odoo/owl','@web_studio/client_action/xml_resource_editor/xml_resource_editor','@web_studio/client_action/editor/edition_flow','@web_studio/client_action/report_editor/report_editor_snackbar','@web_studio/client_action/report_editor/report_editor_xml/report_record_navigation','@web/core/utils/hooks','@web_studio/client_action/report_editor/report_editor_iframe','@web/core/l10n/localization','@web/views/fields/translation_dialog','@web/views/view'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUnmount,toRaw,useState}=require("@odoo/owl");const{XmlResourceEditor}=require("@web_studio/client_action/xml_resource_editor/xml_resource_editor");const{useEditorMenuItem}=require("@web_studio/client_action/editor/edition_flow");const{ReportEditorSnackbar}=require("@web_studio/client_action/report_editor/report_editor_snackbar");const{ReportRecordNavigation}=require("@web_studio/client_action/report_editor/report_editor_xml/report_record_navigation");const{useBus,useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{ReportEditorIframe}=require("@web_studio/client_action/report_editor/report_editor_iframe");const{localization}=require("@web/core/l10n/localization");const{TranslationDialog}=require("@web/views/fields/translation_dialog");const{View}=require("@web/views/view");class ReportResourceEditor extends XmlResourceEditor{static props={...XmlResourceEditor.props,slots:Object};setup(){super.setup();useBus(this.env.reportEditorModel.bus,"node-clicked",(ev)=>{const{viewId}=ev.detail;const nextResource=this.state.resourcesOptions.find((opt)=>opt.value===viewId);if(nextResource){this.state.currentResourceId=nextResource.value;}});}}
class TranslationButton extends Component{static template="web.TranslationButton";static props={resourceId:Number,};setup(){this.user=useService("user");this.addDialog=useOwnedDialogs();}
get isMultiLang(){return localization.multiLang;}
get lang(){return this.user.lang.split("_")[0].toUpperCase();}
onClick(){this.addDialog(TranslationDialog,{fieldName:"arch_db",resModel:"ir.ui.view",resId:this.props.resourceId,onSave:()=>{const model=this.env.reportEditorModel;model.loadReportHtml({resId:model.reportEnv.currentId});},});}}
class _View extends View{async loadView(){const res=await super.loadView(...arguments);const Controller=this.Controller;if(!("afterExecuteActionButton"in Controller.props)&&"afterExecuteActionButton"in Controller.prototype){class _Controller extends Controller{afterExecuteActionButton(clickParams){const res=super.afterExecuteActionButton(...arguments);this.props.afterExecuteActionButton(this.model,...arguments);return res;}}
_Controller.props={...Controller.props,afterExecuteActionButton:{type:Function},};this.Controller=_Controller;}
return res;}}
const ReportEditorXml=__exports.ReportEditorXml=class ReportEditorXml extends Component{static components={XmlResourceEditor:ReportResourceEditor,ReportRecordNavigation,ReportEditorIframe,TranslationButton,View:_View,};static template="web_studio.ReportEditorXml";static props={paperFormatStyle:String,};setup(){this.reportEditorModel=useState(this.env.reportEditorModel);this.state=useState({xmlChanges:null,reloadSources:1,viewIdToDiff:false,warningMessage:"",get isDirty(){return!!this.xmlChanges;},});useEditorMenuItem({component:ReportEditorSnackbar,props:{state:this.state,onSave:this.save.bind(this),onDiscard:this.discardChanges.bind(this),},});onWillStart(()=>this.reportEditorModel.loadReportHtml());onWillUnmount(()=>{this.save({urgent:true});});}
get minWidth(){const factor=this.state.viewIdToDiff?0.2:0.4;return Math.floor(document.documentElement.clientWidth*factor);}
async onCloseXmlEditor(){await this.save();this.reportEditorModel.mode="wysiwyg";}
onXmlChanged(changes){this.state.xmlChanges=changes;}
async save({urgent=false}={}){const changes={...toRaw(this.state.xmlChanges)};const result=await this.reportEditorModel.saveReport({urgent,xmlVerbatim:changes,});this.state.warningMessage=this.reportEditorModel.warningMessage;if(result!==false){this.state.xmlChanges=null;if(!urgent&&Object.keys(changes).length){this.state.reloadSources++;}}}
async discardChanges(){this.state.xmlChanges=null;this.state.reloadSources++;}
onIframeLoaded({iframeRef}){iframeRef.el.contentWindow.document.addEventListener("click",(ev)=>{const target=ev.target;const brandingTarget=target.closest(`[data-oe-model="ir.ui.view"][data-oe-field="arch"]`);if(!brandingTarget){return;}
const viewId=parseInt(brandingTarget.getAttribute("data-oe-id"));this.reportEditorModel.bus.trigger("node-clicked",{viewId});});this.reportEditorModel.setInEdition(false);}
async switchToDiff(viewId){await this.save();this.state.viewIdToDiff=viewId;}
get diffProps(){return{type:"form",resModel:"reset.view.arch.wizard",context:{studio:false,studio_report_diff:true,active_ids:[this.state.viewIdToDiff],active_model:"ir.ui.view",},afterExecuteActionButton:(model,clickParams)=>{if(model.root.resModel==="reset.view.arch.wizard"&&clickParams.name==="reset_view_button"){this.state.reloadSources++;this.reportEditorModel._resetInternalArchs();this.reportEditorModel.loadReportHtml();}},preventCreate:true,};}
onResourceChanged(resource){if(this.state.viewIdToDiff){this.state.viewIdToDiff=resource.id;}}}
return __exports;});;

/* /web_studio/static/src/client_action/report_editor/report_editor_xml/report_record_navigation.js */
odoo.define('@web_studio/client_action/report_editor/report_editor_xml/report_record_navigation',['@odoo/owl','@web/core/pager/pager','@web/core/record_selectors/record_selector'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{Pager}=require("@web/core/pager/pager");const{RecordSelector}=require("@web/core/record_selectors/record_selector");const ReportRecordNavigation=__exports.ReportRecordNavigation=class ReportRecordNavigation extends Component{static components={RecordSelector,Pager};static template="web_studio.ReportEditor.ReportRecordNavigation";static props={};setup(){this.reportEditorModel=useState(this.env.reportEditorModel);}
get multiRecordSelectorProps(){const currentId=this.reportEditorModel.reportEnv.currentId;return{resModel:this.reportEditorModel.reportResModel,update:(resId)=>{this.reportEditorModel.loadReportHtml({resId});},resId:currentId,domain:this.reportEditorModel.getModelDomain(),context:{studio:false},};}
get pagerProps(){const{reportEnv}=this.reportEditorModel;const{ids,currentId}=reportEnv;return{limit:1,offset:ids.indexOf(currentId),total:ids.length,};}
updatePager({offset}){const ids=this.reportEditorModel.reportEnv.ids;const resId=ids[offset];this.reportEditorModel.loadReportHtml({resId});}}
return __exports;});;

/* /web_studio/static/src/client_action/report_editor/utils.js */
odoo.define('@web_studio/client_action/report_editor/utils',[],function(require){'use strict';let __exports={};const PAPER_TO_CSS={margin_top:"padding-top",margin_left:"padding-left",margin_right:"padding-right",print_page_width:"width",print_page_height:"min-height",};__exports.getCssFromPaperFormat=getCssFromPaperFormat;function getCssFromPaperFormat(paperFormat,unit="mm"){return Object.entries(paperFormat).map((f)=>`${PAPER_TO_CSS[f[0]]}:${f[1]}${unit}`).join(";");}
return __exports;});;

/* /web_studio/static/src/client_action/studio_client_action.js */
odoo.define('@web_studio/client_action/studio_client_action',['@web/core/registry','@web/core/utils/hooks','@web/webclient/actions/action_service','@web/webclient/menus/menu_helpers','@web_studio/client_action/utils','@web_studio/client_action/app_creator/app_creator','@web_studio/client_action/editor/editor','@web_studio/client_action/navbar/navbar','@web_studio/client_action/studio_home_menu/studio_home_menu','@odoo/owl','@web/core/orm_service'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{computeAppsAndMenuItems,reorderApps}=require("@web/webclient/menus/menu_helpers");const{useServicesOverrides}=require("@web_studio/client_action/utils");const{AppCreator}=require("@web_studio/client_action/app_creator/app_creator");const{Editor}=require("@web_studio/client_action/editor/editor");const{StudioNavbar}=require("@web_studio/client_action/navbar/navbar");const{StudioHomeMenu}=require("@web_studio/client_action/studio_home_menu/studio_home_menu");const{Component,onWillStart,onMounted,onPatched,onWillUnmount}=require("@odoo/owl");const{ormService}=require("@web/core/orm_service");const studioUserService={dependencies:["user"],start(env,{user}){const originalUserService=user;user=Object.create(user);Object.defineProperty(user,"context",{get(){return{...originalUserService.context,studio:1};},});return user;},};const StudioClientAction=__exports.StudioClientAction=class StudioClientAction extends Component{setup(){useServicesOverrides({orm:ormService,user:studioUserService});const user=useService("user");const homemenuConfig=JSON.parse(user.settings?.homemenu_config||"null");this.studio=useService("studio");useBus(this.studio.bus,"UPDATE",()=>{this.render();});this.menus=useService("menu");this.actionService=useService("action");let apps=computeAppsAndMenuItems(this.menus.getMenuAsTree("root")).apps;if(homemenuConfig){reorderApps(apps,homemenuConfig);}
this.homeMenuProps={apps:apps,};useBus(this.env.bus,"MENUS:APP-CHANGED",()=>{apps=computeAppsAndMenuItems(this.menus.getMenuAsTree("root")).apps;if(homemenuConfig){reorderApps(apps,homemenuConfig);}
this.homeMenuProps={apps:apps,};this.render();});onWillStart(this.onWillStart);onMounted(this.onMounted);onPatched(this.onPatched);onWillUnmount(this.onWillUnmount);}
onWillStart(){return this.studio.ready;}
onMounted(){this.studio.pushState();document.body.classList.add("o_in_studio");}
onPatched(){this.studio.pushState();}
onWillUnmount(){document.body.classList.remove("o_in_studio");}
async onNewAppCreated({action_id,menu_id}){await this.menus.reload();this.menus.setCurrentMenu(menu_id);const action=await this.actionService.loadAction(action_id);let initViewType="form";if(!action.views.some((vTuple)=>vTuple[1]===initViewType)){initViewType=action.views[0][1];}
this.studio.setParams({mode:this.studio.MODES.EDITOR,editorTab:"views",action,viewType:initViewType,});}}
StudioClientAction.template="web_studio.StudioClientAction";StudioClientAction.props={...standardActionServiceProps};StudioClientAction.components={StudioNavbar,StudioHomeMenu,Editor,AppCreator,};StudioClientAction.target="fullscreen";registry.category("lazy_components").add("StudioClientAction",StudioClientAction);registry.category("actions").add("studio",StudioClientAction,{force:true});return __exports;});;

/* /web_studio/static/src/client_action/studio_home_menu/icon_creator_dialog/icon_creator_dialog.js */
odoo.define('@web_studio/client_action/studio_home_menu/icon_creator_dialog/icon_creator_dialog',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/utils/hooks','@web_studio/client_action/icon_creator/icon_creator','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{IconCreator}=require("@web_studio/client_action/icon_creator/icon_creator");const{Component,useState}=require("@odoo/owl");const IconCreatorDialog=__exports.IconCreatorDialog=class IconCreatorDialog extends Component{setup(){this.user=useService("user");this.rpc=useService("rpc");this.menus=useService("menu");this.initialAppData={...this.props.editedAppData};this.editedAppData=useState(this.props.editedAppData);}
onIconChanged(icon){for(const key in this.editedAppData){delete this.editedAppData[key];}
for(const key in icon){this.editedAppData[key]=icon[key];}}
async saveIcon(){const{type}=this.initialAppData;const appId=this.props.appId;let iconValue;if(this.editedAppData.type!==type){if(this.editedAppData.type==="base64"){iconValue=this.editedAppData.uploaded_attachment_id;}else{const{iconClass,color,backgroundColor}=this.editedAppData;iconValue=[iconClass,color,backgroundColor];}}else if(this.editedAppData.type==="custom_icon"){const{iconClass,color,backgroundColor}=this.editedAppData;if(this.initialAppData.iconClass!==iconClass||this.initialAppData.color!==color||this.initialAppData.backgroundColor!==backgroundColor){iconValue=[iconClass,color,backgroundColor];}}else if(this.editedAppData.uploaded_attachment_id){iconValue=this.editedAppData.uploaded_attachment_id;}
if(iconValue){await this.rpc("/web_studio/edit_menu_icon",{context:this.user.context,icon:iconValue,menu_id:appId,});await this.menus.reload();}
this.props.close();}}
IconCreatorDialog.title=_t("Edit Application Icon");IconCreatorDialog.props={editedAppData:Object,appId:Number,close:Function,};IconCreatorDialog.template="web_studio.IconCreatorDialog";IconCreatorDialog.components={Dialog,IconCreator};return __exports;});;

/* /web_studio/static/src/client_action/studio_home_menu/studio_home_menu.js */
odoo.define('@web_studio/client_action/studio_home_menu/studio_home_menu',['@web/core/l10n/translation','@web_enterprise/webclient/home_menu/home_menu','@web/core/utils/hooks','@web_studio/studio_service','@web_studio/client_action/studio_home_menu/icon_creator_dialog/icon_creator_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{HomeMenu}=require("@web_enterprise/webclient/home_menu/home_menu");const{useService}=require("@web/core/utils/hooks");const{NotEditableActionError}=require("@web_studio/studio_service");const{IconCreatorDialog}=require("@web_studio/client_action/studio_home_menu/icon_creator_dialog/icon_creator_dialog");const{onMounted,onWillUnmount,useRef}=require("@odoo/owl");const NEW_APP_BUTTON={isNewAppButton:true,label:"New App",webIconData:"/web_studio/static/src/img/default_icon_app.png",};const StudioHomeMenu=__exports.StudioHomeMenu=class StudioHomeMenu extends HomeMenu{setup(){super.setup(...arguments);this.user=useService("user");this.studio=useService("studio");this.notifications=useService("notification");this.dialog=useService("dialog");this.root=useRef("root");onMounted(()=>{this.canEditIcons=true;document.body.classList.add("o_home_menu_background");document.body.classList.toggle("o_home_menu_background_custom",this.menus.getMenu("root").backgroundImage);});onWillUnmount(()=>{document.body.classList.remove("o_home_menu_background","o_home_menu_background_custom");});}
get displayedApps(){return[...super.displayedApps,NEW_APP_BUTTON];}
async _openMenu(menu){if(menu.isNewAppButton){this.canEditIcons=false;return this.studio.open(this.studio.MODES.APP_CREATOR);}else{try{await this.studio.open(this.studio.MODES.EDITOR,menu.actionID);this.menus.setCurrentMenu(menu);}catch(e){if(e instanceof NotEditableActionError){const options={type:"danger"};this.notifications.add(_t("This action is not editable by Studio"),options);return;}
throw e;}}}
_enableAppsSorting(){return false;}
onEditIconClick(app){if(!this.canEditIcons){return;}
const editedAppData={};if(app.webIconData){Object.assign(editedAppData,{webIconData:app.webIconData,type:"base64",});}else{Object.assign(editedAppData,{backgroundColor:app.webIcon.backgroundColor,color:app.webIcon.color,iconClass:app.webIcon.iconClass,type:"custom_icon",});}
const dialogProps={editedAppData,appId:app.id,};this.dialog.add(IconCreatorDialog,dialogProps);}}
StudioHomeMenu.props={apps:HomeMenu.props.apps};StudioHomeMenu.template="web_studio.StudioHomeMenu";return __exports;});;

/* /web_studio/static/src/client_action/utils.js */
odoo.define('@web_studio/client_action/utils',['@odoo/owl'],function(require){'use strict';let __exports={};const{reactive,useComponent,useEnv,useSubEnv}=require("@odoo/owl");__exports.useDialogConfirmation=useDialogConfirmation;function useDialogConfirmation({confirm,cancel,before,close}){before=before||(()=>{});confirm=confirm||(()=>{});cancel=cancel||(()=>{});if(!close){const component=useComponent();close=()=>component.props.close();}
let isProtected=false;async function canExecute(){if(isProtected){return false;}
isProtected=true;await before();return true;}
async function execute(cb,...args){let succeeded=false;try{succeeded=await cb(...args);}catch(e){close();throw e;}
if(succeeded===undefined||succeeded){return close();}
isProtected=false;}
async function _confirm(...args){if(!(await canExecute())){return;}
return execute(confirm,...args);}
async function _cancel(...args){if(!(await canExecute())){return;}
return execute(cancel,...args);}
const env=useEnv();env.dialogData.dismiss=()=>_cancel();return{confirm:_confirm,cancel:_cancel};}
const Reactive=__exports.Reactive=class Reactive{constructor(){const raw=this;this.raw=()=>{return raw;};return reactive(this);}}
__exports.memoizeOnce=memoizeOnce;function memoizeOnce(callback){let key,value;return function(...args){if(key===args[0]){return value;}
key=args[0];value=callback.call(this,...args);return value;};}
__exports.useSubEnvAndServices=useSubEnvAndServices;function useSubEnvAndServices(env){const services=env.services;const bus=env.bus;useSubEnv(env);useSubEnv({services,bus});}
function topologicalSort(elems,getDependencies){const result=[];const visited=new Set();function visit(n){if(visited.has(n)){return;}
visited.add(n);if(!elems.includes(n)){return;}
for(const dep of getDependencies(n)){visit(dep);}
result.push(n);}
for(const el of elems){visit(el);}
return result;}
__exports.useServicesOverrides=useServicesOverrides;function useServicesOverrides(overrides){let env=useEnv();const services=Object.create(env.services);useSubEnv({services});env=useEnv();const getDependencies=(name)=>overrides[name]?.dependencies||[];const topoSorted=topologicalSort(Object.keys(overrides),getDependencies);for(const servName of topoSorted){services[servName]=overrides[servName].start(env,services);}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/default_view_sidebar/default_view_sidebar.js */
odoo.define('@web_studio/client_action/view_editor/default_view_sidebar/default_view_sidebar',['@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const DefaultViewSidebar=__exports.DefaultViewSidebar=class DefaultViewSidebar extends Component{static template="web_studio.ViewEditor.DefaultViewSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,SidebarViewToolbox,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/calendar/calendar_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/calendar/calendar_editor',['@web/views/calendar/calendar_view','@web/core/registry','@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/editors/utils','@web/views/calendar/calendar_controller','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{calendarView}=require("@web/views/calendar/calendar_view");const{registry}=require("@web/core/registry");const{Component,useState}=require("@odoo/owl");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{fieldsToChoices}=require("@web_studio/client_action/view_editor/editors/utils");const{SCALE_LABELS}=require("@web/views/calendar/calendar_controller");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const CalendarEditorSidebar=__exports.CalendarEditorSidebar=class CalendarEditorSidebar extends Component{static template="web_studio.ViewEditor.CalendarEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,Property,SidebarViewToolbox,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});}
get archInfo(){return this.viewEditorModel.controllerProps.archInfo;}
onViewAttributeChanged(value,name){value=value?value:"";return this.editArchAttributes({[name]:value});}
get quickCreateFields(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.type==="char"&&field.store);}
get startDateFields(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>["date","datetime"].includes(field.type));}
get delayFields(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>["float","integer"].includes(field.type));}
get colorFields(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>["many2one","selection"].includes(field.type));}
get allDayFields(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.type==="boolean");}
get modeChoices(){return this.viewEditorModel.controllerProps.archInfo.scales.map((value)=>{return{value,label:SCALE_LABELS[value],};});}}
registry.category("studio_editors").add("calendar",{...calendarView,Sidebar:CalendarEditorSidebar,});return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/cohort/cohort_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/cohort/cohort_editor',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web_cohort/cohort_view','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/editors/utils','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{cohortView}=require("@web_cohort/cohort_view");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{fieldsToChoices}=require("@web_studio/client_action/view_editor/editors/utils");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const CohortEditorSidebar=__exports.CohortEditorSidebar=class CohortEditorSidebar extends Component{static template="web_studio.ViewEditor.CohortEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,Property,SidebarViewToolbox,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});}
onViewAttributeChanged(value,name){value=value?value:"";return this.editArchAttributes({[name]:value});}
get modelParams(){return this.env.viewEditorModel.controllerProps.modelParams;}
get dateFields(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.store&&["date","datetime"].includes(field.type));}
get measureFields(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.name!=="id"&&field.store&&["integer","float","monetary"].includes(field.type));}
get intervalChoices(){return[{label:_t("Day"),value:"day"},{label:_t("Week"),value:"week"},{label:_t("Month"),value:"month"},{label:_t("Year"),value:"year"},];}
get modeChoices(){return[{label:_t("Retention"),value:"retention"},{label:_t("Churn"),value:"churn"},];}
get timelineChoices(){return[{label:_t("Forward"),value:"forward"},{label:_t("Backwards"),value:"backward"},];}}
registry.category("studio_editors").add("cohort",{...cohortView,Sidebar:CohortEditorSidebar,});return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/components/field_content_overlay.js */
odoo.define('@web_studio/client_action/view_editor/editors/components/field_content_overlay',['@web/core/l10n/translation','@odoo/owl','@web_studio/studio_service'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,xml}=require("@odoo/owl");const{viewTypeToString}=require("@web_studio/studio_service");const FieldContentOverlay=__exports.FieldContentOverlay=class FieldContentOverlay extends Component{static template=xml`
    <div class="position-relative">
      <t t-slot="default" />
      <div class="o-web-studio-edit-x2manys-buttons w-100 h-100 d-flex justify-content-center gap-3 position-absolute start-0 top-0 opacity-75 bg-dark" t-if="props.displayOverlay" style="z-index: 1000;">
          <button class="btn btn-primary btn-secondary o_web_studio_editX2Many align-self-center"
          t-foreach="['list', 'form']" t-as="vType" t-key="vType"
          t-on-click.stop="() => props.onEditViewType(vType)"
          t-att-data-type="vType">
          <t t-esc="getButtonText(vType)" />
          </button>
      </div>
    </div>`;static props={displayOverlay:{type:Boolean},slots:{type:Object},onEditViewType:{type:Function},};getButtonText(viewType){return _t("Edit %s view",viewTypeToString(viewType));}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/components/field_selector_dialog.js */
odoo.define('@web_studio/client_action/view_editor/editors/components/field_selector_dialog',['@web/core/dialog/dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component,useRef}=require("@odoo/owl");const FieldSelectorDialog=__exports.FieldSelectorDialog=class FieldSelectorDialog extends Component{static props={close:{type:Function},onConfirm:{type:Function},fields:{type:Array},showNew:{type:Boolean,optional:true},};static defaultProps={showNew:false,};setup(){this.selectRef=useRef("select");}
onConfirm(){const field=this.selectRef.el.value;this.props.onConfirm(field);this.props.close();}
onCancel(){this.props.close();}}
FieldSelectorDialog.template="web_studio.FieldSelectorDialog";FieldSelectorDialog.components={Dialog};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/components/field_studio.js */
odoo.define('@web_studio/client_action/view_editor/editors/components/field_studio',['@web/views/fields/field','@web_studio/client_action/view_editor/editors/components/field_content_overlay','@web_studio/client_action/view_editor/editors/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{Field}=require("@web/views/fields/field");const{FieldContentOverlay}=require("@web_studio/client_action/view_editor/editors/components/field_content_overlay");const{useStudioRef,studioIsVisible}=require("@web_studio/client_action/view_editor/editors/utils");const{useState}=require("@odoo/owl");const FieldStudio=__exports.FieldStudio=class FieldStudio extends Field{setup(){super.setup();this.state=useState({displayOverlay:false,});useStudioRef("rootRef",this.onClick);}
get fieldComponentProps(){const fieldComponentProps=super.fieldComponentProps;delete fieldComponentProps.studioXpath;delete fieldComponentProps.hasEmptyPlaceholder;delete fieldComponentProps.hasLabel;delete fieldComponentProps.studioIsVisible;return fieldComponentProps;}
get classNames(){const classNames=super.classNames;classNames["o_web_studio_show_invisible"]=!studioIsVisible(this.props);classNames["o-web-studio-editor--element-clickable"]=!!this.props.studioXpath;if(this.studioIsEmpty()){delete classNames["o_field_empty"];classNames["o_web_studio_widget_empty"]=true;}
return classNames;}
studioIsEmpty(){const{name,record,hasLabel}=this.props;if(hasLabel){return false;}
return"isEmpty"in this.field?this.field.isEmpty(record,name):!record.data[name];}
getEmptyPlaceholder(){const{hasEmptyPlaceholder,name,record,fieldInfo}=this.props;if(!hasEmptyPlaceholder){return false;}
return this.studioIsEmpty()&&(fieldInfo.string||record.fields[name].string);}
isX2ManyEditable(props){const{name,record}=props;const field=record.fields[name];if(!["one2many","many2many"].includes(field.type)){return false;}
return!!this.props.fieldInfo.field.useSubView;}
onEditViewType(viewType){const{name,record,studioXpath}=this.props;this.env.viewEditorModel.editX2ManyView({viewType,fieldName:name,record,xpath:studioXpath,fieldContext:this.fieldComponentProps.context,});}
onClick(ev){if(ev.target.classList.contains("o_web_studio_editX2Many")){return;}
ev.stopPropagation();ev.preventDefault();this.env.config.onNodeClicked(this.props.studioXpath);this.state.displayOverlay=!this.state.displayOverlay;}}
FieldStudio.components={...Field.components,FieldContentOverlay};FieldStudio.template="web_studio.Field";return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/components/studio_hook_component.js */
odoo.define('@web_studio/client_action/view_editor/editors/components/studio_hook_component',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,xml}=require("@odoo/owl");const formGrid=xml`
    <div class="o_web_studio_hook"
        t-attf-class="g-col-sm-{{ props.colSpan }}"
        t-att-data-xpath="props.xpath"
        t-att-data-position="props.position"
        t-att-data-type="props.type">
            <span class="o_web_studio_hook_separator" />
    </div>
`;const kanbanRecord=xml`
    <span class="o_web_studio_hook"
        t-att-data-xpath="props.xpath"
        t-att-data-position="props.position"
        t-att-data-type="props.type" />
`;const defaultTemplate=xml`
<div class="o_web_studio_hook" t-att-data-xpath="props.xpath" t-att-data-position="props.position" t-att-data-type="props.type" t-att-data-infos="props.infos">
    <span class="o_web_studio_hook_separator" />
</div>
`;const StudioHook=__exports.StudioHook=class StudioHook extends Component{getTemplate(templateName){return this.constructor.subTemplates[templateName||"defaultTemplate"];}}
StudioHook.template=xml`<t t-call="{{ getTemplate(props.subTemplate) }}" />`;StudioHook.props=["xpath?","position?","type?","colSpan?","subTemplate?","width?","infos?"];StudioHook.subTemplates={formGrid,defaultTemplate,kanbanRecord,};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/components/view_button_studio.js */
odoo.define('@web_studio/client_action/view_editor/editors/components/view_button_studio',['@web/views/view_button/view_button','@web_studio/client_action/view_editor/editors/utils','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{ViewButton}=require("@web/views/view_button/view_button");const{useStudioRef,studioIsVisible}=require("@web_studio/client_action/view_editor/editors/utils");const{useBus}=require("@web/core/utils/hooks");const ViewButtonStudio=__exports.ViewButtonStudio=class ViewButtonStudio extends ViewButton{setup(){super.setup();useStudioRef("rootRef");if(this.props.studioApproval){useBus(this.env.viewEditorModel.env.bus,"approval-update",()=>{this.approval.fetchApprovals();});}}
getClassName(){let className=super.getClassName();if(!studioIsVisible(this.props)){className+=" o_web_studio_show_invisible";}
if(this.props.studioXpath){className+=" o-web-studio-editor--element-clickable";}
return className;}
onClick(ev){if(this.props.tag==="a"){ev.preventDefault();}
if(!this.props.studioXpath){return;}
this.env.config.onNodeClicked(this.props.studioXpath);}}
ViewButtonStudio.template="web_studio.ViewButton";ViewButtonStudio.props=[...ViewButton.props,"studioIsVisible?","studioXpath?"];return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/components/widget_studio.js */
odoo.define('@web_studio/client_action/view_editor/editors/components/widget_studio',['@web/views/widgets/widget'],function(require){'use strict';let __exports={};const{Widget}=require("@web/views/widgets/widget");const WidgetStudio=__exports.WidgetStudio=class WidgetStudio extends Widget{get widgetProps(){const widgetProps=super.widgetProps;delete widgetProps.studioXpath;delete widgetProps.hasEmptyPlaceholder;delete widgetProps.hasLabel;delete widgetProps.studioIsVisible;return widgetProps;}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/chatter_container.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/chatter_container',['@mail/core/web/chatter','@odoo/owl'],function(require){'use strict';let __exports={};const{Chatter}=require("@mail/core/web/chatter");const{Component}=require("@odoo/owl");const ChatterContainer=__exports.ChatterContainer=class ChatterContainer extends Chatter{onClick(ev){this.env.config.onNodeClicked(this.props.studioXpath);}}
ChatterContainer.template="web_studio.ChatterContainer";ChatterContainer.props=[...Chatter.props,"studioXpath?"];const ChatterContainerHook=__exports.ChatterContainerHook=class ChatterContainerHook extends Component{onClick(){this.env.viewEditorModel.doOperation({type:"chatter",model:this.env.viewEditorModel.resModel,...this.props.chatterData,});}}
ChatterContainerHook.template="web_studio.ChatterContainerHook";ChatterContainerHook.components={Chatter};ChatterContainerHook.props={chatterData:Object,threadModel:String,};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor',['@web/views/form/form_view','@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer','@web_studio/client_action/view_editor/editors/form/form_editor_controller/form_editor_controller','@web_studio/client_action/view_editor/editors/form/form_editor_compiler','@web/core/registry','@web/core/utils/objects','@web_studio/client_action/view_editor/editors/utils','@web/views/view_compiler','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/form_editor_sidebar'],function(require){'use strict';let __exports={};const{formView}=require("@web/views/form/form_view");const{FormEditorRenderer}=require("@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer");const{FormEditorController}=require("@web_studio/client_action/view_editor/editors/form/form_editor_controller/form_editor_controller");const{FormEditorCompiler}=require("@web_studio/client_action/view_editor/editors/form/form_editor_compiler");const{registry}=require("@web/core/registry");const{omit}=require("@web/core/utils/objects");const{makeModelErrorResilient}=require("@web_studio/client_action/view_editor/editors/utils");const{getModifier}=require("@web/views/view_compiler");const{FormEditorSidebar}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/form_editor_sidebar");const{getStudioNoFetchFields}=require("@web_studio/client_action/view_editor/editors/utils");class EditorArchParser extends formView.ArchParser{parse(){const archInfo=super.parse(...arguments);const noFetch=getStudioNoFetchFields(archInfo.fieldNodes);archInfo.fieldNodes=omit(archInfo.fieldNodes,...noFetch.fieldNodes);return archInfo;}}
class Model extends formView.Model{}
Model.Record=class RecordNoEdit extends formView.Model.Record{get isInEdition(){return false;}};const formEditor={...formView,ArchParser:EditorArchParser,Compiler:FormEditorCompiler,Renderer:FormEditorRenderer,Controller:FormEditorController,props(genericProps,editor,config){const arch=genericProps.arch;Array.from(arch.querySelectorAll("field > tree, field > form, field > kanban")).forEach((el)=>{if(getModifier(el,"invisible")){el.remove();}});const props=formView.props(genericProps,editor,config);props.Model=makeModelErrorResilient(Model);props.preventEdit=true;return props;},Sidebar:FormEditorSidebar,};registry.category("studio_editors").add("form",formEditor);const HOOK_CLASS_WHITELIST=["o_web_studio_field_signature","o_web_studio_field_html","o_web_studio_field_many2many","o_web_studio_field_one2many","o_web_studio_field_tabs","o_web_studio_field_columns","o_web_studio_field_lines",];const HOOK_TYPE_BLACKLIST=["genericTag","afterGroup","afterNotebook","insideSheet"];const isBlackListedHook=(draggedEl,hookEl)=>!HOOK_CLASS_WHITELIST.some((cls)=>draggedEl.classList.contains(cls))&&HOOK_TYPE_BLACKLIST.some((t)=>hookEl.dataset.type===t);function canDropNotebook(hookEl){if(hookEl.dataset.type==="page"){return false;}
if(hookEl.closest(".o_group")){return false;}
return true;}
function canDropGroup(hookEl){if(hookEl.dataset.type==="insideGroup"){return false;}
if(hookEl.closest(".o_group")){return false;}
return true;}
function isValidFormHook({hook,element}){const draggingStructure=element.dataset.structure;switch(draggingStructure){case"notebook":{if(!canDropNotebook(hook)){return false;}
break;}
case"group":{if(!canDropGroup(hook)){return false;}
break;}}
if(isBlackListedHook(element,hook)){return false;}
return true;}
formEditor.isValidHook=isValidFormHook;return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_compiler.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_compiler',['@web/views/view_compiler','@web_studio/client_action/view_editor/editors/xml_utils','@web/core/utils/xml','@web/views/form/form_view','@web/views/form/form_compiler'],function(require){'use strict';let __exports={};const{isComponentNode}=require("@web/views/view_compiler");const{computeXpath,applyInvisible,}=require("@web_studio/client_action/view_editor/editors/xml_utils");const{createElement}=require("@web/core/utils/xml");const{formView}=require("@web/views/form/form_view");const{objectToString}=require("@web/views/form/form_compiler");const interestingSelector=[":not(field) sheet",":not(field) field",":not(field) notebook",":not(field) page",":not(field) button",":not(field) label",":not(field) group",":not(field) group group > *",":not(field) div.oe_chatter",":not(field) .oe_avatar",].join(", ");const FormEditorCompiler=__exports.FormEditorCompiler=class FormEditorCompiler extends formView.Compiler{compile(key,params={}){const xml=this.templates[key];for(const el of xml.querySelectorAll(interestingSelector)){const xpath=computeXpath(el);el.setAttribute("studioXpath",xpath);}
this.addChatter=true;this.chatterData={remove_message_ids:false,remove_follower_ids:false,remove_activity_ids:false,};this.avatars=[];const compiled=super.compile(key,params);const sheetBg=compiled.querySelector(".o_form_sheet_bg");if(sheetBg){const studioHook=createElement("StudioHook",{xpath:`"${sheetBg.getAttribute("studioXpath")}"`,position:"'inside'",type:"'insideSheet'",});sheetBg.querySelector(".o_form_sheet").prepend(studioHook);}
if(this.addChatter){const chatterContainerHook=createElement("ChatterContainerHook",{threadModel:`__comp__.props.record.resModel`,chatterData:objectToString(this.chatterData),});const el=compiled.querySelector(".o_form_sheet")||compiled;el.after(chatterContainerHook);}else{const parent=compiled.querySelector(".o-mail-Form-chatter");parent.removeAttribute("t-attf-class");parent.removeAttribute("t-if");}
const checkStatusBarButtons=compiled.querySelector("StatusBarButtons");if(!checkStatusBarButtons){const addButtonAction=createElement("AddButtonAction");const el=compiled.querySelector(".o_form_sheet_bg")||compiled;el.prepend(addButtonAction);}
const fieldStatus=compiled.querySelector(`Field[type="'statusbar'"]`);if(!fieldStatus){const addStatusBar=!compiled.querySelector(".o_form_statusbar");const statusBarFieldHook=createElement("StatusBarFieldHook",{addStatusBar});const el=compiled.querySelector(".o_form_sheet_bg")||compiled;el.prepend(statusBarFieldHook);}
const buttonBoxXml=xml.querySelector("div[name='button_box']");let buttonBox;const buttonBoxContainer=createElement("div",{class:"d-flex justify-content-end my-2",});if(buttonBoxXml){buttonBox=this.compileNode(buttonBoxXml,params);}else{buttonBox=createElement("ButtonBox");}
buttonBoxContainer.append(buttonBox);const el=compiled.querySelector(".o_form_sheet_bg")||compiled;el.prepend(buttonBoxContainer);const buttonHook=createElement("t",[createElement("ButtonHook",{add_buttonbox:!buttonBoxXml})],{"t-set-slot":`slot_button_hook`});buttonBox.insertAdjacentElement("afterbegin",buttonHook);const title=compiled.querySelector(".oe_title");if(title){if(!title.querySelector(":scope > h1 > [isAvatar]")&&!title.parentElement.querySelector(":scope > [isAvatar]")){const avatarHook=createElement("AvatarHook",{fields:`__comp__.props.record.fields`,});avatarHook.setAttribute("class",`'oe_avatar d-flex align-items-center justify-content-center ms-3 o_web_studio_avatar h4'`);title.before(avatarHook);}}
for(const el of this.avatars){el.removeAttribute("isAvatar");}
compiled.querySelectorAll(":not(.o_form_statusbar) Field").forEach((el)=>{el.setAttribute("hasEmptyPlaceholder","true");});compiled.querySelectorAll(`InnerGroup > t[t-set-slot][subType="'item_component'"] Field`).forEach((el)=>{el.setAttribute("hasLabel","true");});return compiled;}
applyInvisible(invisible,compiled,params){return applyInvisible(invisible,compiled,params);}
createLabelFromField(fieldId,fieldName,fieldString,label,params){const studioXpath=label.getAttribute("studioXpath");const formLabel=super.createLabelFromField(...arguments);formLabel.setAttribute("studioXpath",`"${studioXpath}"`);if(formLabel.hasAttribute("t-if")){formLabel.setAttribute("studioIsVisible",formLabel.getAttribute("t-if"));formLabel.removeAttribute("t-if");}
return formLabel;}
compileNode(node,params={},evalInvisible=true){const nodeType=node.nodeType;const currentSlot=params.currentSlot;if(nodeType===1&&currentSlot&&!currentSlot.hasAttribute("studioXpath")){const parentElement=node.parentElement;if(parentElement&&parentElement.tagName==="page"){const xpath=computeXpath(node.parentElement);currentSlot.setAttribute("studioXpath",`"${xpath}"`);if(!parentElement.querySelector(":scope > group:last-child > group")){const pageHookProps={position:"'inside'",type:"'page'",xpath:`"${xpath}"`,};currentSlot.setAttribute("studioHookProps",objectToString(pageHookProps));}}else{const xpath=node.getAttribute("studioXpath");currentSlot.setAttribute("studioXpath",`"${xpath}"`);}}
if(nodeType===1&&node.getAttribute("studio_no_fetch")){return;}
const compiled=super.compileNode(node,{...params,compileInvisibleNodes:true},true);if(nodeType===1){if(node.hasAttribute("studioXpath")){const xpath=node.getAttribute("studioXpath");if(isComponentNode(compiled)){compiled.setAttribute("studioXpath",`"${xpath}"`);}else if(!compiled.hasAttribute("studioXpath")){compiled.setAttribute("studioXpath",xpath);}}
if(node.tagName==="notebook"){const originalChildren=Array.from(node.children);Array.from(compiled.children).forEach((elem,index)=>{if(!elem.hasAttribute("studioXpath")){const studioXpath=originalChildren[index].getAttribute("studioXpath");elem.setAttribute("studioXpath",`"${studioXpath}"`);const pageHookProps={position:"'inside'",type:"'page'",xpath:`"${studioXpath}"`,};elem.setAttribute("studioHookProps",objectToString(pageHookProps));}});}
if(node.classList.contains("oe_chatter")){this.addChatter=false;const chatterNode=compiled.querySelector("t[t-component='__comp__.mailComponents.Chatter']");const xpath=node.getAttribute("studioXpath");chatterNode.setAttribute("studioXpath",`"${xpath}"`);compiled.setAttribute("data-studio-xpath",xpath);compiled.classList.add("o-web-studio-editor--element-clickable");}
if(node.classList.contains("oe_avatar")){compiled.setAttribute("isAvatar",true);this.avatars.push(compiled);}
const name=node.getAttribute("name");if(name==="message_ids"){this.chatterData.remove_message_ids=true;}else if(name==="message_follower_ids"){this.chatterData.remove_follower_ids=true;}else if(name==="activity_ids"){this.chatterData.remove_activity_ids=true;}}
return compiled;}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_controller/form_editor_controller.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_controller/form_editor_controller',['@odoo/owl','@web/views/form/form_view','@web_studio/client_action/view_editor/editors/utils'],function(require){'use strict';let __exports={};const{useState,onMounted,onPatched}=require("@odoo/owl");const{formView}=require("@web/views/form/form_view");const{useModelConfigFetchInvisible}=require("@web_studio/client_action/view_editor/editors/utils");function useExternalParentInModel(model,parentRecord){model._createRoot=(config,data)=>{return new model.constructor.Record(model,config,data,{parentRecord});};}
const FormEditorController=__exports.FormEditorController=class FormEditorController extends formView.Controller{setup(){super.setup();useModelConfigFetchInvisible(this.model);this.mailTemplate=null;this.hasFileViewerInArch=false;this.viewEditorModel=useState(this.env.viewEditorModel);if(this.props.parentRecord){useExternalParentInModel(this.model,this.props.parentRecord);}
onMounted(()=>{const xpath=this.viewEditorModel.lastActiveNodeXpath;if(xpath&&xpath.includes("notebook")){const tabXpath=xpath.match(/.*\/page\[\d+\]/)[0];const tab=document.querySelector(`[data-studio-xpath='${tabXpath}'] a`);if(tab){this.notebookElementData={xpath,restore:Boolean(this.viewEditorModel.activeNodeXpath),sidebarTab:this.viewEditorModel.sidebarTab,isTab:xpath.length===tabXpath.length,};tab.click();}}else{this.notebookElementData=null;}});onPatched(()=>{if(this.notebookElementData){if(this.notebookElementData.isTab&&this.viewEditorModel.lastActiveNodeXpath!==this.notebookElementData.xpath){return;}
if(this.notebookElementData.restore){this.env.config.onNodeClicked(this.notebookElementData.xpath);}else{this.viewEditorModel.resetSidebar(this.notebookElementData.sidebarTab);}
this.notebookElementData=null;}});}
beforeUnload(){}}
FormEditorController.props={...formView.Controller.props,parentRecord:{type:[Object,{value:null}],optional:true},};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_renderer/form_editor_groups.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_groups',['@web/views/form/form_view','@web_studio/client_action/view_editor/editors/utils','@web_studio/client_action/view_editor/editors/components/studio_hook_component','@odoo/owl'],function(require){'use strict';let __exports={};const{formView}=require("@web/views/form/form_view");const{studioIsVisible}=require("@web_studio/client_action/view_editor/editors/utils");const{StudioHook}=require("@web_studio/client_action/view_editor/editors/components/studio_hook_component");const{Component,useEffect,useRef,useState}=require("@odoo/owl");const components=formView.Renderer.components;function extendGroup(GroupClass){class Group extends GroupClass{setup(){super.setup();this.viewEditorModel=useState(this.env.viewEditorModel);this.rootRef=useRef("rootRef");}
get allClasses(){let classes=super.allClasses;if(!studioIsVisible(this.props)){classes=`${classes || ""} o_web_studio_show_invisible`;}
if(this.props.studioXpath){classes=`${classes || ""} o-web-studio-editor--element-clickable`;}
return classes;}
_getItems(){const items=super._getItems();return items.map(([k,v])=>{v=Object.assign({},v);v.studioIsVisible=v.isVisible;v.isVisible=v.isVisible||this.viewEditorModel.showInvisible;if(v.subType==="item_component"){v.props.studioIsVisible=v.studioIsVisible;v.props.studioXpath=v.studioXpath;}
return[k,v];});}
onGroupClicked(ev){if(ev.target.closest(".o-web-studio-editor--element-clickable")!==this.rootRef.el){return;}
this.env.config.onNodeClicked(this.props.studioXpath);}}
Group.props=[...GroupClass.props,"studioXpath?","studioIsVisible?"];Group.components={...GroupClass.components,StudioHook};return Group;}
class InnerGroupItemComponent extends Component{static props={cell:{type:Object},slots:{type:Object},};setup(){const labelRef=useRef("labelRef");const fieldRef=useRef("fieldRef");this.labelRef=labelRef;useEffect((studioIsVisible,labelEl,fieldEl)=>{if(labelEl){const clickable=labelEl.querySelector(".o-web-studio-editor--element-clickable");if(clickable){clickable.classList.remove("o-web-studio-editor--element-clickable");}
labelEl.classList.add("o-web-studio-editor--element-clickable");const invisible=labelEl.querySelector(".o_web_studio_show_invisible");if(invisible){invisible.classList.remove("o_web_studio_show_invisible");}
labelEl.classList.toggle("o_web_studio_show_invisible",!studioIsVisible);labelEl.classList.add("o-draggable");}
if(fieldEl){const clickable=fieldEl.querySelector(".o-web-studio-editor--element-clickable");if(clickable){clickable.classList.remove("o-web-studio-editor--element-clickable");}
const invisible=fieldEl.querySelector(".o_web_studio_show_invisible");if(invisible){invisible.classList.remove("o_web_studio_show_invisible");}
fieldEl.classList.add("o-web-studio-element-ghost");}},()=>[this.cell.studioIsVisible,labelRef.el,fieldRef.el]);this.onMouseFieldIO=(ev)=>{labelRef.el.classList.toggle("o-web-studio-ghost-hovered",ev.type==="mouseover");};}
get cell(){return this.props.cell;}
onClicked(ev){if(ev.target.closest(".o-web-studio-element-ghost")){ev.stopPropagation();}
this.env.config.onNodeClicked(this.cell.studioXpath);}}
InnerGroupItemComponent.template="web_studio.Form.InnerGroup.ItemComponent";const _InnerGroup=extendGroup(components.InnerGroup);const InnerGroup=__exports.InnerGroup=class InnerGroup extends _InnerGroup{getRows(){const rows=super.getRows();if(!this.viewEditorModel.showInvisible){rows.forEach((row)=>{row.isVisible=row.some((cell)=>cell.studioIsVisible);});}
return rows;}
getStudioHooks(){const hooks=new Map();const rows=this.getRows();const hasRows=rows.length>=1&&rows[0].length;if(!hasRows){hooks.set("inside",{xpath:this.props.studioXpath,position:"inside",subTemplate:"formGrid",colSpan:this.props.maxCols,});}
for(const rowIdx in rows){const row=rows[rowIdx];const colSpan=row.reduce((acc,val)=>acc+val.itemSpan||1,0);if(!hooks.has("beforeFirst")){const cell=row[0];if(cell){hooks.set("beforeFirst",{xpath:cell.studioXpath,position:"before",subTemplate:"formGrid",width:cell.width,colSpan,});}}
if(row.every((cell)=>!cell.studioIsVisible)&&!this.viewEditorModel.showInvisible){continue;}
const cell=row[row.length-1];if(cell){hooks.set(`afterRow ${rowIdx}`,{xpath:cell.studioXpath,position:"after",subTemplate:"formGrid",width:cell.width,colSpan,});}}
return hooks;}}
InnerGroup.components.InnerGroupItemComponent=InnerGroupItemComponent;InnerGroup.template="web_studio.Form.InnerGroup";const OuterGroup=__exports.OuterGroup=extendGroup(components.OuterGroup);OuterGroup.template="web_studio.Form.OuterGroup";return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer',['@odoo/owl','@web/views/form/form_view','@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer_components','@web_studio/client_action/view_editor/editors/form/chatter_container','@web_studio/client_action/view_editor/editors/components/studio_hook_component','@web_studio/client_action/view_editor/editors/components/field_studio','@web_studio/client_action/view_editor/editors/components/widget_studio','@web_studio/client_action/view_editor/editors/components/view_button_studio','@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_groups','@web_studio/client_action/view_editor/interactive_editor/action_button/action_button'],function(require){'use strict';let __exports={};const{useRef,useEffect,useState}=require("@odoo/owl");const{formView}=require("@web/views/form/form_view");const formEditorRendererComponents=require("@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer_components");const{ChatterContainer,ChatterContainerHook}=require("@web_studio/client_action/view_editor/editors/form/chatter_container");const{StudioHook}=require("@web_studio/client_action/view_editor/editors/components/studio_hook_component");const{FieldStudio}=require("@web_studio/client_action/view_editor/editors/components/field_studio");const{WidgetStudio}=require("@web_studio/client_action/view_editor/editors/components/widget_studio");const{ViewButtonStudio}=require("@web_studio/client_action/view_editor/editors/components/view_button_studio");const{InnerGroup,OuterGroup}=require("@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_groups");const{AddButtonAction}=require("@web_studio/client_action/view_editor/interactive_editor/action_button/action_button");const components=formView.Renderer.components;const FormEditorRenderer=__exports.FormEditorRenderer=class FormEditorRenderer extends formView.Renderer{setup(){super.setup();const rootRef=useRef("compiled_view_root");this.rootRef=rootRef;const viewEditorModel=this.env.viewEditorModel;this.viewEditorModel=useState(viewEditorModel);this.mailComponents.Chatter=ChatterContainer;useEffect((rootEl,showInvisible)=>{if(!rootEl){return;}
rootEl.classList.add("o_web_studio_form_view_editor");if(showInvisible){rootEl.querySelectorAll(":not(.o-mail-Form-chatter) .o_invisible_modifier").forEach((el)=>{el.classList.add("o_web_studio_show_invisible");el.classList.remove("o_invisible_modifier");});}else{rootEl.querySelectorAll(":not(.o-mail-Form-chatter) .o_web_studio_show_invisible").forEach((el)=>{el.classList.remove("o_web_studio_show_invisible");el.classList.add("o_invisible_modifier");});}},()=>[rootRef.el,viewEditorModel.showInvisible]);useEffect((rootEl)=>{if(rootEl){const optCols=rootEl.querySelectorAll("i.o_optional_columns_dropdown_toggle");for(const col of optCols){col.classList.add("text-muted");}}},()=>[rootRef.el]);}}
class Setting extends formView.Renderer.components.Setting{static props={...formView.Renderer.components.Setting.props,studioXpath:{type:String,optional:true},studioIsVisible:{type:Boolean,optional:true},};}
FormEditorRenderer.components={...components,...formEditorRendererComponents,Field:FieldStudio,Widget:WidgetStudio,ViewButton:ViewButtonStudio,ChatterContainerHook,InnerGroup,OuterGroup,StudioHook,Setting,AddButtonAction,};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer_components.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_renderer/form_editor_renderer_components',['@web/views/form/form_view','@web_studio/client_action/view_editor/editors/components/studio_hook_component','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/new_button_box_dialog','@web_studio/client_action/view_editor/editors/components/field_selector_dialog','@web_studio/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog','@web_studio/client_action/view_editor/editors/utils','@web/core/l10n/translation','@web/core/utils/hooks','@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/action_button/action_button'],function(require){'use strict';let __exports={};const{formView}=require("@web/views/form/form_view");const{StudioHook}=require("@web_studio/client_action/view_editor/editors/components/studio_hook_component");const{NewButtonBoxDialog}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/new_button_box_dialog");const{FieldSelectorDialog}=require("@web_studio/client_action/view_editor/editors/components/field_selector_dialog");const{SelectionContentDialog}=require("@web_studio/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog");const{randomName,studioIsVisible,useStudioRef,}=require("@web_studio/client_action/view_editor/editors/utils");const{_t}=require("@web/core/l10n/translation");const{useOwnedDialogs}=require("@web/core/utils/hooks");const{Component,useState}=require("@odoo/owl");const{AddButtonAction}=require("@web_studio/client_action/view_editor/interactive_editor/action_button/action_button");const components=formView.Renderer.components;const FormLabel=__exports.FormLabel=class FormLabel extends components.FormLabel{static template="web_studio.FormLabel";static props={...components.FormLabel.props,studioXpath:String,studioIsVisible:{type:Boolean,optional:true},};setup(){super.setup();useStudioRef("rootRef",this.onClick);}
get className(){let className=super.className;if(!studioIsVisible(this.props)){className+=" o_web_studio_show_invisible";}
className+=" o-web-studio-editor--element-clickable";return className;}
onClick(ev){ev.preventDefault();ev.stopPropagation();this.env.config.onNodeClicked(this.props.studioXpath);}}
const Notebook=__exports.Notebook=class Notebook extends components.Notebook{static template="web_studio.Notebook.Hook";static components={...components.Notebook.components,StudioHook};static props={...components.Notebook.props,studioIsVisible:{type:Boolean,optional:true},studioXpath:String,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);super.setup();}
computePages(props){const pages=super.computePages(props);pages.forEach((p)=>{p[1].studioIsVisible=p[1].isVisible;p[1].isVisible=p[1].isVisible||this.viewEditorModel.showInvisible;});return pages;}
onNewPageClicked(){const vem=this.viewEditorModel;const node={tag:"page",attrs:{string:_t("New Page"),name:randomName("studio_page"),},};vem.doOperation({type:"add",node,target:vem.getFullTarget(this.props.studioXpath),position:"inside",});}}
const StatusBarButtons=__exports.StatusBarButtons=class StatusBarButtons extends components.StatusBarButtons{static template=`web_studio.FormViewAddButtonAction`;static components={...components.StatusBarButtons.components,AddButtonAction,};}
const StatusBarFieldHook=__exports.StatusBarFieldHook=class StatusBarFieldHook extends Component{static template="web_studio.StatusBarFieldHook";static props={addStatusBar:{type:Boolean},};setup(){this.addDialog=useOwnedDialogs();}
onClick(){this.addDialog(SelectionContentDialog,{defaultChoices:[["status1",_t("First Status")],["status2",_t("Second Status")],["status3",_t("Third Status")],],onConfirm:(choices)=>{const viewEditorModel=this.env.viewEditorModel;if(this.props.addStatusBar){viewEditorModel.pushOperation({type:"statusbar"});}
const target={tag:"header",};const subViewXpath=viewEditorModel.getSubviewXpath();if(subViewXpath){target.subview_xpath=subViewXpath;}
viewEditorModel.doOperation({type:"add",target,position:"inside",node:{attrs:{widget:"statusbar",options:"{'clickable': '1'}",},field_description:{default_value:true,field_description:_t("Pipeline status bar"),model_name:viewEditorModel.resModel,name:randomName(`x_studio_selection_field`),selection:JSON.stringify(choices),type:"selection",},tag:"field",},});},});}}
const AvatarHook=__exports.AvatarHook=class AvatarHook extends Component{static template="web_studio.AvatarHook";static props={fields:Object,class:{type:String,optional:true}};setup(){this.addDialog=useOwnedDialogs();}
onClick(){const fields=[];for(const field of Object.values(this.props.fields)){if(field.type==="binary"){fields.push(field);}}
this.addDialog(FieldSelectorDialog,{fields,showNew:true,onConfirm:(field)=>{this.env.viewEditorModel.doOperation({type:"avatar_image",field,});},});}}
const ButtonHook=__exports.ButtonHook=class ButtonHook extends Component{static template="web_studio.ButtonHook";static props={add_buttonbox:{type:Boolean,optional:true},studioIsVisible:{type:Boolean,optional:true},};setup(){this.addDialog=useOwnedDialogs();}
onClick(){this.addDialog(NewButtonBoxDialog,{model:this.env.viewEditorModel,isAddingButtonBox:Boolean(this.props.add_buttonbox),});}}
const ButtonBox=__exports.ButtonBox=class ButtonBox extends components.ButtonBox{static props={...components.ButtonBox.props,studioIsVisible:{type:Boolean,optional:true},};getButtons(){const maxVisibleButtons=this.getMaxButtons();const visible=[];const additional=[];for(const[slotName,slot]of Object.entries(this.props.slots)){if(this.env.viewEditorModel.showInvisible||!("isVisible"in slot)||slot.isVisible){if(visible.length>=maxVisibleButtons){additional.push(slotName);}else{visible.push(slotName);}}}
return{visible,additional};}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/form_editor_sidebar.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/form_editor_sidebar',['@odoo/owl','@web/core/utils/hooks','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/view_structures/view_structures','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/properties/properties','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/button_properties','@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_properties','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/group_properties/group_properties','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/label_properties/label_properties','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/page_properties/page_properties','@web/core/l10n/translation','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/chatter_properties/chatter_properties','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{ExistingFields,NewFields,}=require("@web_studio/client_action/view_editor/view_structures/view_structures");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{Properties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/properties");const{ButtonProperties}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/button_properties");const{FieldProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_properties");const{GroupProperties}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/group_properties/group_properties");const{LabelProperties}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/label_properties/label_properties");const{PageProperties}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/page_properties/page_properties");const{_t}=require("@web/core/l10n/translation");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{ChatterProperties}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/chatter_properties/chatter_properties");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");class FormComponents extends Component{static template="web_studio.FormEditor.Sidebar.Components";static props={};get structures(){return{notebook:{name:_t("Tabs"),class:"o_web_studio_field_tabs",},group:{name:_t("Columns"),class:"o_web_studio_field_columns",},};}}
const FormEditorSidebar=__exports.FormEditorSidebar=class FormEditorSidebar extends Component{static template="web_studio.ViewEditor.FormEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,FormComponents,NewFields,ExistingFields,Property,Properties,SidebarViewToolbox,};setup(){this.rpc=useService("rpc");this.dialog=useService("dialog");this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});this.propertiesComponents={button:{component:ButtonProperties,props:{availableOptions:["invisible"],},},field:{component:FieldProperties,props:{availableOptions:["invisible","required","readonly","string","help"],},},group:{component:GroupProperties,},label:{component:LabelProperties,},page:{component:PageProperties,},div:{component:ChatterProperties,},};}
get activeActions(){return this.viewEditorModel.controllerProps.archInfo.activeActions;}
getActiveAction(name){return this.activeActions[name]===true;}
onAttributeChanged(value,name){return this.editArchAttributes({[name]:value});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/button_properties.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/button_properties',['@odoo/owl','@web/core/checkbox/checkbox','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/select_menu/select_menu','@web_studio/client_action/view_editor/property/property','@web/core/utils/hooks','@web/model/record','@web/views/fields/many2one/many2one_field','@web/views/fields/many2many_tags/many2many_tags_field','@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility','@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/rainbow_effect','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox','@web_studio/client_action/view_editor/view_editor_model','@web_studio/client_action/view_editor/view_editor_hook','@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{SelectMenu}=require("@web/core/select_menu/select_menu");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{useService}=require("@web/core/utils/hooks");const{Record}=require("@web/model/record");const{Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{Many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{LimitGroupVisibility}=require("@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility");const{RainbowEffect}=require("@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/rainbow_effect");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const{useSnackbarWrapper}=require("@web_studio/client_action/view_editor/view_editor_hook");const{ModifiersProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties");const ButtonProperties=__exports.ButtonProperties=class ButtonProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Button";static props={node:{type:Object},availableOptions:{type:Array,optional:true},};static components={CheckBox,LimitGroupVisibility,Many2OneField,Many2ManyTagsField,RainbowEffect,Record,SelectMenu,Property,SidebarPropertiesToolbox,ModifiersProperties,};setup(){this.dialog=useService("dialog");this.orm=useService("orm");this.rpc=useService("rpc");this.state=useState({});this.editNodeAttributes=useEditNodeAttributes();this.decoratedOrmCall=useSnackbarWrapper(this.orm.call.bind(this.orm));this.decoratedOrmWrite=useSnackbarWrapper(this.orm.write.bind(this.orm));const m2mFieldsToFetch={display_name:{type:"char"},};const approvalRecordDefinition={group_id:{type:"many2one",relation:"res.groups",},responsible_id:{type:"many2one",relation:"res.users",domain:[["share","=",false]],},users_to_notify:{type:"many2many",relation:"res.users",related:{activeFields:m2mFieldsToFetch,fields:m2mFieldsToFetch},},};this.recordProps={resModel:"studio.approval.rule",fields:approvalRecordDefinition,activeFields:approvalRecordDefinition,};onWillStart(()=>{if(this.props.node.attrs.studio_approval){this.updateApprovalSpec();}});onWillUpdateProps((nextProps)=>{if(nextProps.node.attrs.studio_approval){this.updateApprovalSpec(this.getApprovalParams(nextProps.node));}else{delete this.state.approvalSpec;}});}
onChangeAttribute(value,name){return this.editNodeAttributes({[name]:value});}
async onChangeApprovalRecord(record,changes,id){await this.decoratedOrmWrite("studio.approval.rule",[id],changes);this.updateApprovalSpec();}
onEnableApproval(enable){this.env.viewEditorModel.doOperation({enable,type:"enable_approval",btn_name:this.props.node.attrs.name,btn_type:this.props.node.attrs.type,btn_string:this.props.node.attrs.string,model:this.env.viewEditorModel.controllerProps.resModel,view_id:this.env.viewEditorModel.view.id,});}
get showRainbowMan(){const attrs=this.props.node.attrs;return attrs.class!=="oe_stat_button"&&attrs.type==="object";}
get isApprovalEnabled(){return this.props.node.attrs.studio_approval==="True";}
async createApprovalRule(){const params=this.getApprovalParams();params[3]=this.props.node.attrs.string;await this.decoratedOrmCall("studio.approval.rule","create_rule",params);this.updateApprovalSpec();}
getApprovalParams(node=this.props.node){let method,action=false;if(node.attrs.type==="object"){method=node.attrs.name;}else{action=node.attrs.name;}
return[this.env.viewEditorModel.resModel,method,action];}
async getApprovalSpec(approvalParams){return await this.orm.call("studio.approval.rule","get_approval_spec",approvalParams);}
async onApprovalArchive(id){await this.decoratedOrmWrite("studio.approval.rule",[id],{active:false,});this.updateApprovalSpec();}
async onApprovalEdit(name,id,value){const isMethod=this.props.node.attrs.type==="object";await this.rpc("/web_studio/edit_approval",{model:this.env.viewEditorModel.resModel,method:isMethod?this.props.node.attrs.name:false,action:isMethod?false:this.props.node.attrs.name,operations:[[name,id,value]],});this.updateApprovalSpec();}
onApprovalSelectDomain(id){const domain=this.state.approvalSpec.rules.find((r)=>r.id===id).domain;this.dialog.add(DomainSelectorDialog,{resModel:this.env.viewEditorModel.resModel,domain:JSON.stringify(domain||[]),isDebugMode:!!this.env.debug,onConfirm:async(domain)=>{await this.decoratedOrmWrite("studio.approval.rule",[id],{domain,});this.updateApprovalSpec();},});}
async onChangeNotificationOrder(ev,id){await this.decoratedOrmWrite("studio.approval.rule",[id],{notification_order:ev.target.value,});this.updateApprovalSpec();}
async updateApprovalSpec(params=this.getApprovalParams()){this.state.approvalSpec=await this.getApprovalSpec(params);this.env.viewEditorModel.env.bus.trigger("approval-update");}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/new_button_box_dialog.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/new_button_box_dialog',['@odoo/owl','@web/core/dialog/dialog','@web/views/fields/relational_utils','@web/core/l10n/translation','@web/core/utils/hooks','@web_studio/utils'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{Many2XAutocomplete}=require("@web/views/fields/relational_utils");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{ICONS}=require("@web_studio/utils");const NewButtonBoxDialog=__exports.NewButtonBoxDialog=class NewButtonBoxDialog extends Component{static template="web_studio.NewButtonBoxDialog";static components={Dialog,Many2XAutocomplete,};static props={isAddingButtonBox:{type:Boolean},model:{type:Object},close:{type:Function},};setup(){this.notification=useService("notification");this.state=useState({icon:"fa-diamond",field:undefined,});this.text=undefined;}
get icons(){return ICONS;}
get title(){return _t("Add a Button");}
getDomain(){return[["relation","=",this.props.model.resModel],["ttype","in",["many2one","many2many"]],["store","=",true],];}
onConfirm(){if(!this.state.field?.id){return this.notification.add(_t("Select a related field."));}
if(this.props.isAddingButtonBox){this.props.model.pushOperation({type:"buttonbox"});}
this.props.model.doOperation({type:"add",target:{tag:"div",attrs:{class:"oe_button_box",},},position:"inside",node:{tag:"button",field:this.state.field.id,string:this.text||_t("New button"),attrs:{class:"oe_stat_button",icon:this.state.icon,},},});this.props.close();}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/rainbow_effect.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/button_properties/rainbow_effect',['@odoo/owl','@web/core/file_input/file_input','@web/core/select_menu/select_menu','@web_studio/client_action/view_editor/property/property','@web/core/utils/hooks','@web/core/l10n/translation','@web/core/py_js/py'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{FileInput}=require("@web/core/file_input/file_input");const{SelectMenu}=require("@web/core/select_menu/select_menu");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{evaluateExpr}=require("@web/core/py_js/py");const RainbowEffect=__exports.RainbowEffect=class RainbowEffect extends Component{static template="web_studio.ViewEditorSidebar.RainbowEffect";static props={effect:{type:true,optional:true},onChange:{type:Function},};static components={FileInput,SelectMenu,Property,};setup(){this.user=useService("user");}
get choices(){return[["fast",_t("Fast")],["medium",_t("Medium")],["slow",_t("Slow")],["no",_t("None")],];}
get rainbowEffect(){const effect=this.props.effect;if(effect===undefined){return null;}
if(effect==="True"){return{};}
return evaluateExpr(effect);}
onRainbowEffectChange(name,value){const effect=this.rainbowEffect;if(!value||!value.length){delete effect[name];}else{effect[name]=value;}
this.props.onChange(effect,"effect");}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/properties/chatter_properties/chatter_properties.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/chatter_properties/chatter_properties',['@odoo/owl','@web/core/utils/hooks','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox'],function(require){'use strict';let __exports={};const{Component,useState,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const ChatterProperties=__exports.ChatterProperties=class ChatterProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Chatter";static components={Property,SidebarPropertiesToolbox};setup(){this.rpc=useService("rpc");this.state=useState({});onWillStart(async()=>{const alias=await this.getMailAlias(this.props.node);this.state.mailAlias=alias.email_alias;this.state.aliasDomain=alias.alias_domain;});onWillUpdateProps(async(nextProps)=>{const alias=await this.getMailAlias(nextProps.node);this.state.mailAlias=alias.email_alias;this.state.aliasDomain=alias.alias_domain;});}
async getMailAlias(node){const mailAliasObj=await this.rpc("/web_studio/get_email_alias",{model_name:this.env.viewEditorModel.resModel,});return mailAliasObj;}
onChangeMailAlias(value){this.rpc("/web_studio/set_email_alias",{model_name:this.env.viewEditorModel.resModel,value,});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/properties/group_properties/group_properties.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/group_properties/group_properties',['@odoo/owl','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox','@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{LimitGroupVisibility}=require("@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const{ModifiersProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const GroupProperties=__exports.GroupProperties=class GroupProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Group";static components={ModifiersProperties,LimitGroupVisibility,Property,SidebarPropertiesToolbox,};setup(){this.editNodeAttributes=useEditNodeAttributes();}
onChangeAttribute(value,name){return this.editNodeAttributes({[name]:value});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/properties/label_properties/label_properties.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/label_properties/label_properties',['@odoo/owl','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const LabelProperties=__exports.LabelProperties=class LabelProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Label";static components={Property,SidebarPropertiesToolbox};setup(){this.editNodeAttributes=useEditNodeAttributes();}
onChangeAttribute(value,name){return this.editNodeAttributes({[name]:value});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/form/form_editor_sidebar/properties/page_properties/page_properties.js */
odoo.define('@web_studio/client_action/view_editor/editors/form/form_editor_sidebar/properties/page_properties/page_properties',['@odoo/owl','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox','@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{LimitGroupVisibility}=require("@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const{ModifiersProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");class PageNodeToolbox extends SidebarPropertiesToolbox{removeNodeFromArch(){const node=this.node;let xpathToRemove=node.xpath;if(node.arch.parentElement.children.length<=1){xpathToRemove=node.xpath.split("/").slice(0,-1).join("/");}
return super.removeNodeFromArch(xpathToRemove);}}
const PageProperties=__exports.PageProperties=class PageProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Page";static components={Property,LimitGroupVisibility,PageNodeToolbox,ModifiersProperties,};setup(){this.editNodeAttributes=useEditNodeAttributes();}
onChangeAttribute(value,name){return this.editNodeAttributes({[name]:value});}
static props={node:{type:Object},}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/gantt/gantt_editor_sidebar.js */
odoo.define('@web_studio/client_action/view_editor/editors/gantt/gantt_editor_sidebar',['@web_gantt/gantt_view','@web/core/registry','@odoo/owl','@web/core/l10n/translation','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{ganttView}=require("@web_gantt/gantt_view");const{registry}=require("@web/core/registry");const{Component,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const GanttEditorSidebar=__exports.GanttEditorSidebar=class GanttEditorSidebar extends Component{static template="web_studio.ViewEditor.GanttEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,Property,SidebarViewToolbox,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});}
get modelParams(){return this.viewEditorModel.controllerProps.modelParams.metaData;}
get colorChoices(){return this.modelParams.decorationFields.map((value)=>{return{label:this.modelParams.fields[value].string,value,};});}
get currentDayPrecision(){return this.dayPrecisionChoices.find((e)=>e.value===this.precisionValues.day)?.value;}
get currentWeekPrecision(){return this.weekAndMonthPrecisionChoices.find((e)=>e.value===this.precisionValues.week)?.value;}
get currentMonthPrecision(){return this.weekAndMonthPrecisionChoices.find((e)=>e.value===this.precisionValues.month)?.value;}
get dayPrecisionChoices(){return[{label:_t("Quarter Hour"),value:"hour:quarter"},{label:_t("Half Hour"),value:"hour:half"},{label:_t("Hour"),value:"hour:full"},];}
get defaultScalesChoices(){return Object.values(this.modelParams.scales).map((value)=>{return{label:value.description,value:value.id};});}
get fieldsChoices(){return Object.values(this.modelParams.fields).filter((f)=>f.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(f.type)).map((f)=>{return{label:f.string,value:f.name,};});}
get fieldsDateChoices(){return Object.values(this.modelParams.fields).filter((f)=>f.store&&["date","datetime"].includes(f.type)).map((f)=>{return{label:f.string,value:f.name,};});}
get weekAndMonthPrecisionChoices(){return[{label:_t("Half Day"),value:"day:half"},{label:_t("Day"),value:"day:full"},];}
get precisionValues(){const precision=this.viewEditorModel.xmlDoc.querySelector("gantt").getAttribute("precision")?.replace(/'/g,'"')||"{}";return JSON.parse(precision);}
onDefaultGroupByChanged(selection){this.onViewAttributeChanged(selection.join(","),"default_group_by");}
onPrecisionChanged(value,name){const precision=this.precisionValues;precision[name]=value;this.onViewAttributeChanged(JSON.stringify(precision),"precision");}
onViewAttributeChanged(value,name){return this.editArchAttributes({[name]:value});}}
registry.category("studio_editors").add("gantt",{...ganttView,Sidebar:GanttEditorSidebar,});return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/graph/graph_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/graph/graph_editor',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/views/graph/graph_view','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/operations_utils','@web_studio/client_action/view_editor/editors/utils','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{Component,onWillPatch,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{graphView}=require("@web/views/graph/graph_view");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const operationUtils=require("@web_studio/client_action/view_editor/operations_utils");const{fieldsToChoices}=require("@web_studio/client_action/view_editor/editors/utils");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const GraphEditorSidebar=__exports.GraphEditorSidebar=class GraphEditorSidebar extends Component{static template="web_studio.ViewEditor.GraphEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,Property,SidebarViewToolbox,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});onWillPatch(()=>{this.oldFieldValues={firstDimension:this.modelParams.groupBy[0],secondDimension:this.modelParams.groupBy[1],measure:this.modelParams.measure==="__count"?undefined:this.modelParams.measure,};});}
onViewAttributeChanged(value,name){value=value?value:"";return this.editArchAttributes({[name]:value});}
onGroupByChanged(type,newField,oldField){const operation=operationUtils.viewGroupByOperation("graph",type,newField,oldField);this.viewEditorModel.doOperation(operation);}
get modelParams(){return this.viewEditorModel.controllerProps.modelParams;}
get typeChoices(){return[{label:_t("Bar"),value:"bar"},{label:_t("Line"),value:"line"},{label:_t("Pie"),value:"pie"},];}
get orderChoices(){return[{label:_t("Ascending"),value:"asc"},{label:_t("Descending"),value:"desc"},];}
get firstGroupbyChoices(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(field.type)&&field.name!==this.modelParams.groupBy[1]);}
get secondGroupbyChoices(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(field.type)&&field.name!==this.modelParams.groupBy[0]);}
get mesureChoices(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.name!=="id"&&field.store&&["integer","float","monetary"].includes(field.type));}}
registry.category("studio_editors").add("graph",{...graphView,Sidebar:GraphEditorSidebar,});return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/kanban/kanban_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/kanban/kanban_editor',['@web/core/registry','@web/core/utils/objects','@web/views/kanban/kanban_view','@web_studio/client_action/view_editor/editors/kanban/kanban_editor_renderer','@web_studio/client_action/view_editor/editors/utils','@web_studio/client_action/view_editor/editors/kanban/kanban_editor_sidebar/kanban_editor_sidebar'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{omit}=require("@web/core/utils/objects");const{kanbanView}=require("@web/views/kanban/kanban_view");const{KanbanEditorRenderer}=require("@web_studio/client_action/view_editor/editors/kanban/kanban_editor_renderer");const{makeModelErrorResilient}=require("@web_studio/client_action/view_editor/editors/utils");const{KanbanEditorSidebar}=require("@web_studio/client_action/view_editor/editors/kanban/kanban_editor_sidebar/kanban_editor_sidebar");const{getStudioNoFetchFields,useModelConfigFetchInvisible}=require("@web_studio/client_action/view_editor/editors/utils");class EditorArchParser extends kanbanView.ArchParser{parse(arch,models,modelName){const parsed=super.parse(...arguments);const noFetch=getStudioNoFetchFields(parsed.fieldNodes);parsed.fieldNodes=omit(parsed.fieldNodes,...noFetch.fieldNodes);return parsed;}}
class OneRecordModel extends kanbanView.Model{async load(){this.progressAttributes=false;await super.load(...arguments);let list=this.root;let hasRecords;const isGrouped=list.isGrouped;if(!isGrouped){hasRecords=list.records.length;}else{hasRecords=list.groups.some((g)=>g.list.records.length);}
if(!hasRecords){if(isGrouped){const commonConfig={resModel:list.config.resModel,fields:list.config.fields,activeFields:list.config.activeFields,groupByFieldName:list.groupBy[0],context:list.context,list:{resModel:list.config.resModel,fields:list.config.fields,activeFields:list.config.activeFields,groupBy:[],context:list.context,},};const data={count:0,length:0,records:[],__domain:[],value:"fake",displayName:"fake",groups:[{display_name:false,count:0,},],};list.config.groups.fake=commonConfig;const group=list._createGroupDatapoint(data);list.groups.push(group);list=group.list;}
await list.addNewRecord();}}}
class KanbanEditorController extends kanbanView.Controller{setup(){super.setup();useModelConfigFetchInvisible(this.model);}}
const kanbanEditor={...kanbanView,Controller:KanbanEditorController,ArchParser:EditorArchParser,Renderer:KanbanEditorRenderer,Model:OneRecordModel,Sidebar:KanbanEditorSidebar,props(genericProps,editor,config){const props=kanbanView.props(genericProps,editor,config);props.defaultGroupBy=props.archInfo.defaultGroupBy;props.Model=makeModelErrorResilient(OneRecordModel);props.limit=1;props.Renderer=KanbanEditorRenderer;return props;},};registry.category("studio_editors").add("kanban",kanbanEditor);return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/kanban/kanban_editor_compiler.js */
odoo.define('@web_studio/client_action/view_editor/editors/kanban/kanban_editor_compiler',['@web/views/kanban/kanban_compiler','@web_studio/client_action/view_editor/editors/xml_utils','@web/views/view_compiler','@web/core/utils/xml','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{computeXpath,applyInvisible}=require("@web_studio/client_action/view_editor/editors/xml_utils");const{isComponentNode}=require("@web/views/view_compiler");const{createElement}=require("@web/core/utils/xml");const{_t}=require("@web/core/l10n/translation");const interestingSelector=["field","widget",".dropdown","img.oe_kanban_avatar",".o_kanban_record_body",".o_kanban_record_bottom",].join(", ");const KanbanEditorCompiler=__exports.KanbanEditorCompiler=class KanbanEditorCompiler extends KanbanCompiler{constructor(){super(...arguments);const kanbanBox=this.templates["kanban-box"];this.isDashboard=kanbanBox.closest("kanban").classList.contains("o_kanban_dashboard");}
applyInvisible(invisible,compiled,params){return applyInvisible(invisible,compiled,params);}
compile(key,params={}){const xml=this.templates[key];const mainDiv=xml.querySelector("div");const interestingArchNodes=[...xml.querySelectorAll(interestingSelector)];if(mainDiv){interestingArchNodes.push(mainDiv);}
for(const el of interestingArchNodes){const xpath=computeXpath(el,"kanban");el.setAttribute("studioXpath",xpath);}
const compiled=super.compile(key,params);const isKanbanBox=key==="kanban-box";if(isKanbanBox&&!this.isDashboard&&mainDiv){const tagsWidget=xml.querySelector("field[widget='many2many_tags']");if(!tagsWidget){this.addTagsWidgetHook(compiled);}
const priorityWidget=xml.querySelector("field[widget='priority']");const favoriteWidget=xml.querySelector("field[widget='boolean_favorite']");if(!priorityWidget&&!favoriteWidget){this.addPriorityHook(compiled);}
const dropdown=this.templates["kanban-menu"];if(!dropdown){this.addDropdownHook(compiled);}
const avatarImg=xml.querySelector("img.oe_kanban_avatar");if(!avatarImg){this.addAvatarHook(compiled);}}
compiled.querySelectorAll(".oe_kanban_avatar").forEach((el)=>{const tIf=el.closest("[t-if]");if(tIf){const tElse=createElement("t",{"t-else":"","t-call":"web_studio.KanbanEditorRecord.AvatarPlaceholder",});tIf.insertAdjacentElement("afterend",tElse);}});return compiled;}
compileField(node){const compiled=super.compileField(...arguments);if(compiled.tagName==="span"){const fieldName=node.getAttribute("name");compiled.setAttribute("data-field-name",fieldName);}else{compiled.setAttribute("hasEmptyPlaceholder",true);}
return compiled;}
addStudioHook(node,compiled){const tNode=createElement("t");if(compiled.hasAttribute("t-if")){tNode.setAttribute("t-if",compiled.getAttribute("t-if"));compiled.removeAttribute("t-if");}
tNode.appendChild(compiled);const xpath=node.getAttribute("studioXpath");const studioHook=createElement("StudioHook",{xpath:`"${xpath}"`,position:"'after'",});tNode.appendChild(studioHook);return tNode;}
compileNode(node,params){const nodeType=node.nodeType;if(nodeType===1&&(isComponentNode(node)||node.getAttribute("studio_no_fetch"))){return;}
let compiled=super.compileNode(node,{...params,compileInvisibleNodes:true});if(nodeType===1&&compiled){if(node.hasAttribute("studioXpath")){const xpath=node.getAttribute("studioXpath");if(isComponentNode(compiled)){compiled.setAttribute("studioXpath",`"${xpath}"`);}else if(!compiled.hasAttribute("studioXpath")){compiled.setAttribute("studioXpath",xpath);}
if(node.classList.contains("oe_kanban_avatar")){compiled.setAttribute("t-on-click",`(ev) => __comp__.env.config.onNodeClicked("${xpath}")`);compiled.classList.add("o-web-studio-editor--element-clickable");}
if(node.tagName==="field"&&!isComponentNode(compiled)){compiled.setAttribute("t-on-click",`(ev) => __comp__.env.config.onNodeClicked("${xpath}")`);compiled.classList.add("o-web-studio-editor--element-clickable");const fieldName=node.getAttribute("name");const isEmptyExpr=`__comp__.isFieldValueEmpty(record["${fieldName}"].value)`;const tattfClassEmpty=`{{ ${isEmptyExpr} ? "o_web_studio_widget_empty" : "" }}`;const tattfClass=compiled.getAttribute("t-attf-class");const nextAttfClass=tattfClass?`${tattfClass} ${tattfClassEmpty}`:tattfClassEmpty;compiled.setAttribute("t-attf-class",nextAttfClass);const fieldId=node.getAttribute("field_id");const tOut=compiled.getAttribute("t-out");compiled.setAttribute("t-out",`${isEmptyExpr} ? __comp__.props.archInfo.fieldNodes['${fieldId}'].string : ${tOut}`);}
if(node.tagName==="field"||node.tagName==="widget"){if(!Array.from(node.getAttributeNames()).filter((att)=>["t-if","t-elif","t-else"].includes(att))[0]){compiled=this.addStudioHook(node,compiled);}}}}
return compiled;}
addTagsWidgetHook(compiled){const parentElement=compiled.querySelector(".o_kanban_record_body")||compiled.querySelector("div");const tagsHook=createElement("span",{class:"o_web_studio_add_kanban_tags","t-on-click":`() => __comp__.onAddTagsWidget({
                xpath: "${parentElement.getAttribute("studioXpath")}"
            })`,});tagsHook.textContent=_t("Add tags");if(parentElement.firstChild){parentElement.insertBefore(tagsHook,parentElement.firstChild);}else{parentElement.appendChild(tagsHook);}}
addDropdownHook(compiled){const rootSibling=compiled.querySelector("div");const dropdownHook=createElement("div",[createElement("a",{class:"btn fa fa-ellipsis-v",}),],{class:"o_web_studio_add_dropdown o_dropdown_kanban dropdown position-absolute end-0",style:"z-index: 1;","t-on-click":"() => __comp__.onAddDropdown()",});rootSibling.insertAdjacentElement("afterend",dropdownHook);}
addPriorityHook(compiled){const parentElement=compiled.querySelector("div");const priorityHook=createElement("div",{class:"o_web_studio_add_priority oe_kanban_bottom_left align-self-start flex-grow-0",style:"z-index: 1;","t-on-click":"() => __comp__.onAddPriority()",});priorityHook.textContent=_t("Add a priority");parentElement.appendChild(priorityHook);}
addAvatarHook(compiled){const parentElement=compiled.querySelector(".o_kanban_record_bottom")||compiled.querySelector("div");const avatarHook=createElement("div",{class:"o_web_studio_add_kanban_image oe_kanban_bottom_right pe-auto",style:"z-index: 1;","t-on-click":"() => __comp__.onAddAvatar()",});avatarHook.textContent=_t("Add an avatar");parentElement.appendChild(avatarHook);}
validateNode(){}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/kanban/kanban_editor_record.js */
odoo.define('@web_studio/client_action/view_editor/editors/kanban/kanban_editor_record',['@web/core/l10n/translation','@web/views/kanban/kanban_view','@web_studio/client_action/view_editor/editors/kanban/kanban_editor_compiler','@web_studio/client_action/view_editor/editors/components/field_studio','@web_studio/client_action/view_editor/editors/components/widget_studio','@web_studio/client_action/view_editor/editors/components/view_button_studio','@web_studio/client_action/view_editor/editors/components/studio_hook_component','@web_studio/client_action/view_editor/editors/components/field_selector_dialog','@web_studio/client_action/view_editor/editors/xml_utils','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{kanbanView}=require("@web/views/kanban/kanban_view");const{KanbanEditorCompiler}=require("@web_studio/client_action/view_editor/editors/kanban/kanban_editor_compiler");const{FieldStudio}=require("@web_studio/client_action/view_editor/editors/components/field_studio");const{WidgetStudio}=require("@web_studio/client_action/view_editor/editors/components/widget_studio");const{ViewButtonStudio}=require("@web_studio/client_action/view_editor/editors/components/view_button_studio");const{StudioHook}=require("@web_studio/client_action/view_editor/editors/components/studio_hook_component");const{FieldSelectorDialog}=require("@web_studio/client_action/view_editor/editors/components/field_selector_dialog");const{computeXpath}=require("@web_studio/client_action/view_editor/editors/xml_utils");const{useService}=require("@web/core/utils/hooks");const{AlertDialog,ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component,toRaw,useEnv,useState,xml,useEffect,useRef,onError}=require("@odoo/owl");class FieldStudioKanbanRecord extends FieldStudio{isX2ManyEditable(){return false;}}
const OriginDropdown=kanbanView.Renderer.components.KanbanRecord.components.Dropdown;class Dropdown extends OriginDropdown{setup(){super.setup();const rootRef=useRef("root");this.rootRef=rootRef;useEffect((rootEl)=>{if(this.props.studioXpath){rootEl.classList.add("o-web-studio-editor--element-clickable");rootEl.dataset.studioXpath=this.props.studioXpath;}
if(this.props.hasCoverSetter){rootEl.dataset.hasCoverSetter=true;}},()=>[rootRef.el]);}
onTogglerClick(){this.env.config.onNodeClicked(this.props.studioXpath);}}
Dropdown.template="web_studio.KanbanEditorRecord.Dropdown";Dropdown.props={...OriginDropdown.props,studioXpath:{type:String,optional:1},hasCoverSetter:{type:Boolean,optional:1},};const KanbanRecord=kanbanView.Renderer.components.KanbanRecord;function useSafeKanban(){const state=useState({hasError:false});const viewEditorModel=toRaw(useEnv().viewEditorModel);onError((error)=>{const hasError=state.hasError;if(hasError||viewEditorModel.isInEdition){throw error;}
state.hasError=true;});return state;}
class SafeKanbanRecord extends KanbanRecord{setup(){super.setup();this.safe=useSafeKanban();}}
SafeKanbanRecord.template="web_studio.SafeKanbanRecord";class _KanbanEditorRecord extends KanbanRecord{setup(){super.setup();this.viewEditorModel=useState(this.env.viewEditorModel);if(this.constructor.KANBAN_MENU_ATTRIBUTE in this.props.templates){const compiledTemplateMenu=this.props.templates[this.constructor.KANBAN_MENU_ATTRIBUTE];this.dropdownXpath=computeXpath(compiledTemplateMenu,"kanban");this.dropdownHasCoverSetter=Boolean(compiledTemplateMenu.querySelectorAll("a[data-type='set_cover']").length);}
this.dialogService=useService("dialog");this.safe=useSafeKanban();useEffect((el)=>{if(!el){return;}
el.classList.remove("oe_kanban_global_click","oe_kanban_global_click_edit");},()=>[this.rootRef.el]);}
onGlobalClick(){}
isFieldValueEmpty(value){if(value===null){return true;}
if(Array.isArray(value)){return!value.length;}
return!value;}
onAddTagsWidget({xpath}){const fields=[];for(const[fName,field]of Object.entries(this.props.record.fields)){if(field.type==="many2many"){const _field={...field,name:fName};fields.push(_field);}}
if(!fields.length){this.dialogService.add(AlertDialog,{body:_t("You first need to create a many2many field in the form view."),});return;}
this.dialogService.add(FieldSelectorDialog,{fields,onConfirm:(field)=>{const operation={type:"add",node:{tag:"field",attrs:{name:field},},target:this.env.viewEditorModel.getFullTarget(xpath),position:"inside",};this.env.viewEditorModel.doOperation(operation);},});}
onAddDropdown(){this.dialogService.add(ConfirmationDialog,{body:_t("Do you want to add a dropdown with colors?"),confirm:()=>{this.env.viewEditorModel.doOperation({type:"kanban_dropdown",});},});}
onAddPriority(){const fields=[];const activeFields=Object.keys(this.props.record.activeFields);for(const[fName,field]of Object.entries(this.props.record.fields)){if(field.type==="selection"&&!activeFields.includes(fName)){const _field={...field,name:fName};fields.push(_field);}}
this.dialogService.add(FieldSelectorDialog,{fields,showNew:true,onConfirm:(field)=>{this.env.viewEditorModel.doOperation({type:"kanban_priority",field,});},});}
onAddAvatar(){const fields=[];for(const[fName,field]of Object.entries(this.props.record.fields)){if(field.type==="many2one"&&(field.relation==="res.partner"||field.relation==="res.users")){const _field={...field,name:fName};fields.push(_field);}}
this.dialogService.add(FieldSelectorDialog,{fields,onConfirm:(field)=>{this.env.viewEditorModel.doOperation({type:"kanban_image",field,});},});}}
_KanbanEditorRecord.components={...KanbanRecord.components,Dropdown,Field:FieldStudioKanbanRecord,Widget:WidgetStudio,StudioHook,ViewButton:ViewButtonStudio,};_KanbanEditorRecord.menuTemplate="web_studio.SafeKanbanRecordMenu";_KanbanEditorRecord.template="web_studio.SafeKanbanRecord";const KanbanEditorRecord=__exports.KanbanEditorRecord=class KanbanEditorRecord extends Component{static props=[...KanbanRecord.props];get KanbanRecord(){if(this.env.viewEditorModel.mode!=="interactive"){return SafeKanbanRecord;}else{return _KanbanEditorRecord;}}
get kanbanRecordProps(){const props={...this.props};if(this.env.viewEditorModel.mode==="interactive"){props.Compiler=KanbanEditorCompiler;}
return props;}}
KanbanEditorRecord.template=xml`<t t-component="KanbanRecord" t-props="kanbanRecordProps" />`;return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/kanban/kanban_editor_renderer.js */
odoo.define('@web_studio/client_action/view_editor/editors/kanban/kanban_editor_renderer',['@web/views/kanban/kanban_view','@web_studio/client_action/view_editor/editors/kanban/kanban_editor_record','@odoo/owl'],function(require){'use strict';let __exports={};const{kanbanView}=require("@web/views/kanban/kanban_view");const{KanbanEditorRecord}=require("@web_studio/client_action/view_editor/editors/kanban/kanban_editor_record");const{useRef,useEffect}=require("@odoo/owl");const KanbanEditorRenderer=__exports.KanbanEditorRenderer=class KanbanEditorRenderer extends kanbanView.Renderer{setup(){super.setup();const rootRef=useRef("root");useEffect((el)=>{if(!el){return;}
el.classList.add("o_web_studio_kanban_view_editor");},()=>[rootRef.el]);}
get canUseSortable(){return false;}
get showNoContentHelper(){return false;}
getGroupsOrRecords(){const{list}=this.props;const groupsOrRec=super.getGroupsOrRecords(...arguments);if(list.isGrouped){return[groupsOrRec.filter((el)=>el.group.list.records.length)[0]];}else{return[groupsOrRec[0]];}}
canCreateGroup(){return false;}
getGroupUnloadedCount(){return 0;}}
KanbanEditorRenderer.template="web_studio.KanbanEditorRenderer";KanbanEditorRenderer.components={...kanbanView.Renderer.components,KanbanRecord:KanbanEditorRecord,};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/kanban/kanban_editor_sidebar/kanban_editor_sidebar.js */
odoo.define('@web_studio/client_action/view_editor/editors/kanban/kanban_editor_sidebar/kanban_editor_sidebar',['@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/view_structures/view_structures','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/interactive_editor/properties/properties','@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_properties','@web_studio/client_action/view_editor/editors/kanban/kanban_editor_sidebar/properties/kanban_cover_properties/kanban_cover_properties','@web_studio/client_action/view_editor/view_editor_model','@web_studio/client_action/view_editor/editors/utils'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{ExistingFields}=require("@web_studio/client_action/view_editor/view_structures/view_structures");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{Properties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/properties");const{FieldProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_properties");const{KanbanCoverProperties}=require("@web_studio/client_action/view_editor/editors/kanban/kanban_editor_sidebar/properties/kanban_cover_properties/kanban_cover_properties");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const{fieldsToChoices}=require("@web_studio/client_action/view_editor/editors/utils");class KanbanFieldProperties extends FieldProperties{onChangeAttribute(value,name){if(name==="bold"&&!value){return this.editNodeAttributes({[name]:""});}
return super.onChangeAttribute(...arguments);}}
const KanbanEditorSidebar=__exports.KanbanEditorSidebar=class KanbanEditorSidebar extends Component{static template="web_studio.ViewEditor.KanbanEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,ExistingFields,Property,Properties,SidebarViewToolbox,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});this.propertiesComponents={field:{component:KanbanFieldProperties,props:{availableOptions:["invisible","string","bold"],},},t:{component:KanbanCoverProperties,},};}
get archInfo(){return this.viewEditorModel.controllerProps.archInfo;}
get defaultGroupBy(){return{choices:fieldsToChoices(this.viewEditorModel.fields,(field)=>{return field.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(field.type);}),required:false,};}
editAttribute(value,name){return this.editArchAttributes({[name]:value});}
editDefaultGroupBy(value){this.editAttribute(value||"","default_group_by");}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/kanban/kanban_editor_sidebar/properties/kanban_cover_properties/kanban_cover_properties.js */
odoo.define('@web_studio/client_action/view_editor/editors/kanban/kanban_editor_sidebar/properties/kanban_cover_properties/kanban_cover_properties',['@odoo/owl','@web_studio/client_action/view_editor/property/property','@web/core/utils/hooks','@web_studio/client_action/view_editor/editors/components/field_selector_dialog','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{useService}=require("@web/core/utils/hooks");const{FieldSelectorDialog}=require("@web_studio/client_action/view_editor/editors/components/field_selector_dialog");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const KanbanCoverProperties=__exports.KanbanCoverProperties=class KanbanCoverProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.KanbanCoverProperties";static props={node:{type:Object},};static components={Property,SidebarPropertiesToolbox};setup(){this.dialog=useService("dialog");}
get coverNode(){return this.env.viewEditorModel.xmlDoc.querySelector("a[data-type='set_cover'],a[type='set_cover']");}
get coverValue(){return!!this.coverNode;}
setCover(value,name){const fields=[];for(const field of Object.values(this.env.viewEditorModel.fields)){if(field.type==="many2one"&&field.relation==="ir.attachment"){fields.push(field);}}
this.dialog.add(FieldSelectorDialog,{fields:fields,showNew:true,onConfirm:(field)=>{const operation={type:"kanban_set_cover",field:field,};this.env.viewEditorModel.doOperation(operation);},});}
onChangeCover(value,name){if(!value){const vem=this.env.viewEditorModel;const fieldToRemove=Object.entries(vem.controllerProps.archInfo.fieldNodes).filter(([fName,fInfo])=>{return fInfo.widget==="attachment_image";});if(fieldToRemove.length!==1){return;}
const extraNode=this.coverNode;const relevantAttr=["type","data-type"].filter((att)=>{return extraNode.hasAttribute(att)&&extraNode.getAttribute(att)==="set_cover";})[0];const operation={target:{attrs:{name:fieldToRemove[0][1].name},tag:"field",extra_nodes:[{tag:extraNode.tagName,attrs:{[relevantAttr]:"set_cover",},},],},type:"remove",};vem.doOperation(operation);}else{this.setCover(value,name);}}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/list/list_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/list/list_editor',['@web/views/list/list_view','@web_studio/client_action/view_editor/editors/xml_utils','@web/core/registry','@web/core/utils/objects','@web_studio/client_action/view_editor/editors/list/list_editor_renderer','@odoo/owl','@web_studio/client_action/view_editor/editors/list/list_editor_sidebar/list_editor_sidebar','@web_studio/client_action/view_editor/editors/utils'],function(require){'use strict';let __exports={};const{listView}=require("@web/views/list/list_view");const{computeXpath}=require("@web_studio/client_action/view_editor/editors/xml_utils");const{registry}=require("@web/core/registry");const{omit}=require("@web/core/utils/objects");const{ListEditorRenderer,columnsStyling}=require("@web_studio/client_action/view_editor/editors/list/list_editor_renderer");const{Component,xml}=require("@odoo/owl");const{ListEditorSidebar}=require("@web_studio/client_action/view_editor/editors/list/list_editor_sidebar/list_editor_sidebar");const{getStudioNoFetchFields,useModelConfigFetchInvisible}=require("@web_studio/client_action/view_editor/editors/utils");function parseStudioGroups(node){if(node.hasAttribute("studio_groups")){return node.getAttribute("studio_groups");}}
class EditorArchParser extends listView.ArchParser{parse(arch,models,modelName){const parsed=super.parse(...arguments);const noFetch=getStudioNoFetchFields(parsed.fieldNodes);parsed.fieldNodes=omit(parsed.fieldNodes,...noFetch.fieldNodes);const noFetchFieldNames=noFetch.fieldNames;parsed.columns=parsed.columns.filter((col)=>col.type!=="field"||!noFetchFieldNames.includes(col.name));return parsed;}
parseFieldNode(node,models,modelName){const parsed=super.parseFieldNode(...arguments);parsed.studioXpath=computeXpath(node,"list, tree");parsed.studio_groups=parseStudioGroups(node);return parsed;}
parseWidgetNode(node,models,modelName){const parsed=super.parseWidgetNode(...arguments);parsed.studioXpath=computeXpath(node,"list, tree");parsed.studio_groups=parseStudioGroups(node);return parsed;}
processButton(node){const parsed=super.processButton(node);parsed.studioXpath=computeXpath(node,"list, tree");parsed.studio_groups=parseStudioGroups(node);return parsed;}}
function useParentedStaticList(model,parentRecord,resIds){const config=model.config;config.resIds=resIds;config.offset=0;config.limit=Math.max(7,resIds.length);model._createRoot=(config,data)=>{const options={parent:parentRecord};const list=new model.constructor.StaticList(model,{...config},data,options);list.selection=[];return list;};}
class ListEditorController extends listView.Controller{setup(){super.setup();useModelConfigFetchInvisible(this.model);if(this.props.parentRecord){useParentedStaticList(this.model,this.props.parentRecord,this.props.resIds);}}}
ListEditorController.props={...listView.Controller.props,parentRecord:{type:Object,optional:true},};class ControllerShadow extends Component{static props={...ListEditorController.props};get Component(){return ListEditorController;}
get componentProps(){const props={...this.props};props.groupBy=[];return props;}}
ControllerShadow.template=xml`<t t-component="Component" t-props="componentProps" />`;const listEditor={...listView,Controller:ControllerShadow,ArchParser:EditorArchParser,Renderer:ListEditorRenderer,props(){const props=listView.props(...arguments);props.allowSelectors=false;props.editable=false;props.showButtons=false;return props;},Sidebar:ListEditorSidebar,};registry.category("studio_editors").add("list",listEditor);const colNearestHookClass="o_web_studio_nearest_hook";listEditor.styleNearestHook=function styleNearestColumn(mainRef,nearestHook){const xpath=nearestHook.dataset.xpath;const position=nearestHook.dataset.position;columnsStyling(mainRef.el,`.o_web_studio_hook[data-xpath='${xpath}'][data-position='${position}']`,[colNearestHookClass]);};listEditor.styleClickedElement=(mainRef,params)=>{columnsStyling(mainRef.el,`[data-studio-xpath='${params.xpath}']:not(.o_web_studio_hook)`,["o-web-studio-editor--element-clicked",]);};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/list/list_editor_renderer.js */
odoo.define('@web_studio/client_action/view_editor/editors/list/list_editor_renderer',['@web/views/list/list_view','@web/core/utils/timing','@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/action_button/action_button'],function(require){'use strict';let __exports={};const{listView}=require("@web/views/list/list_view");const{useThrottleForAnimation}=require("@web/core/utils/timing");const{reactive,useEffect,useState}=require("@odoo/owl");const{AddButtonAction}=require("@web_studio/client_action/view_editor/interactive_editor/action_button/action_button");const colSelectedClass="o-web-studio-editor--element-clicked";const colHoverClass="o-web-studio--col-hovered";function cleanStyling(mainEl,classNames){mainEl.querySelectorAll(`${classNames.map((c) => `.${c}`)}`).forEach((el)=>{el.classList.remove(...classNames);});}
__exports.columnsStyling=columnsStyling;function columnsStyling(mainEl,colSelector,classNames){mainEl.querySelectorAll(`td${colSelector}, th${colSelector}`).forEach((el)=>{el.classList.add(...classNames);});}
function getSelectableCol(target,colSelector){if(target.closest("button")){return null;}
const colEl=target.closest(`td${colSelector}, th${colSelector}`);return colEl;}
const ListEditorRenderer=__exports.ListEditorRenderer=class ListEditorRenderer extends listView.Renderer{setup(){const viewEditorModel=useState(this.env.viewEditorModel);this.viewEditorModel=reactive(viewEditorModel,()=>{this.state.columns=this.getActiveColumns(this.props.list);});super.setup();this.onTableHover=useThrottleForAnimation(this.onTableHover);useEffect((rootEl)=>{rootEl.classList.add("o_web_studio_list_view_editor");},()=>[this.rootRef.el]);}
get canResequenceRows(){return false;}
getColumnClass(col){let cls=super.getColumnClass(col);if(col.studioColumnInvisible){cls+=" o_web_studio_show_invisible";}
return cls;}
getCellClass(col,record){let cls=super.getCellClass(col,record);if(col.studioColumnInvisible||super.evalInvisible(col.invisible,record)){cls+=" o_web_studio_show_invisible";}
return cls;}
getColumnHookData(col,position){let xpath;if(!col){return{xpath:"/tree",position:"inside"};}
if(col.type==="button_group"){if(position==="before"){xpath=col.buttons[0].studioXpath;}else{xpath=col.buttons[col.buttons.length-1].studioXpath;}}else{xpath=col.studioXpath;}
return{xpath,position,};}
addColsHooks(_cols){const attrs={width:"1px"};const options={};const cols=[];let hookId=0;const firstCol=_cols.find((c)=>c.optional!=="hide");const{xpath,position}=this.getColumnHookData(firstCol,"before");cols.push({type:"studio_hook",position,xpath,id:`studio_hook_${hookId++}_${(firstCol && firstCol.id) || 0}`,attrs,options,});for(const col of _cols){if(col.optional==="hide"){continue;}
cols.push(col);const{xpath,position}=this.getColumnHookData(col,"after");cols.push({type:"studio_hook",position,xpath,id:`studio_hook_${hookId++}_${col.id}`,attrs,options,});}
return cols;}
get allColumns(){let cols=this._allColumns;if(this.viewEditorModel.showInvisible){cols=cols.map((c)=>{return{...c,optional:false,studioColumnInvisible:c.optional==="hide"||this.props.evalViewModifier(c.column_invisible),};});}else{cols=cols.filter((c)=>!this.evalColumnInvisible(c.column_invisible));}
return this.addColsHooks(cols);}
set allColumns(cols){this._allColumns=cols;}
evalInvisible(modifier,record){if(this.viewEditorModel.showInvisible){return false;}
return super.evalInvisible(modifier,record);}
evalColumnInvisible(columnInvisible){if(this.viewEditorModel.showInvisible){return false;}
return super.evalColumnInvisible(columnInvisible);}
onTableHover(ev){const table=this.tableRef.el;cleanStyling(table,[colHoverClass]);if(ev.type!=="mouseover"){return;}
const colEl=getSelectableCol(ev.target,"[data-studio-xpath]");if(!colEl){return;}
const xpath=colEl.dataset.studioXpath;columnsStyling(table,`[data-studio-xpath='${xpath}']:not(.o_web_studio_hook)`,[colHoverClass,]);}
onTableClicked(ev){ev.stopPropagation();ev.preventDefault();const table=ev.currentTarget;cleanStyling(table,[colSelectedClass]);const colEl=getSelectableCol(ev.target,"[data-studio-xpath]");if(!colEl){return;}
this.env.config.onNodeClicked(colEl.dataset.studioXpath);}
makeTooltipButton(button){return JSON.stringify({button:{string:button.string,type:button.clickParams?.type,name:button.clickParams?.name,},debug:true,});}}
ListEditorRenderer.template="web_studio.ListEditorRenderer";ListEditorRenderer.recordRowTemplate="web_studio.ListEditorRenderer.RecordRow";ListEditorRenderer.components={...listView.Renderer.components,AddButtonAction,};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/list/list_editor_sidebar/list_editor_sidebar.js */
odoo.define('@web_studio/client_action/view_editor/editors/list/list_editor_sidebar/list_editor_sidebar',['@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/view_structures/view_structures','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/interactive_editor/properties/properties','@web/core/l10n/translation','@web/core/utils/strings','@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_properties','@web_studio/client_action/view_editor/view_editor_model','@web_studio/client_action/view_editor/editors/utils'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{ExistingFields,NewFields,}=require("@web_studio/client_action/view_editor/view_structures/view_structures");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{Properties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/properties");const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const{FieldProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_properties");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const{fieldsToChoices}=require("@web_studio/client_action/view_editor/editors/utils");class ListFieldNodeProperties extends FieldProperties{onChangeAttribute(value,name){if(name!=="aggregate"){return super.onChangeAttribute(...arguments);}
const activeNode=this.env.viewEditorModel.activeNode;const newAttrs={avg:"",sum:"",};if(value&&value!=="none"){const humanName=value==="sum"?_t("Sum of %s"):_t("Average of %s");const fieldString=activeNode.attrs.string||activeNode.field.label;newAttrs[value]=sprintf(humanName,fieldString);}
return this.editNodeAttributes(newAttrs);}}
const ListEditorSidebar=__exports.ListEditorSidebar=class ListEditorSidebar extends Component{static template="web_studio.ViewEditor.ListEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,NewFields,ExistingFields,Property,Properties,SidebarViewToolbox,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});this.propertiesComponents={field:{component:ListFieldNodeProperties,props:{availableOptions:["invisible","required","readonly","string","help","optional",],},},};}
get archInfo(){return this.viewEditorModel.controllerProps.archInfo;}
get defaultOrder(){if(this.archInfo.defaultOrder.length>=1){return this.archInfo.defaultOrder[0];}else{return{name:"",asc:true};}}
get editableChoices(){return[{value:"",label:_t("Open form view")},{value:"top",label:_t("Add record on top")},{value:"bottom",label:_t("Add record at the bottom")},];}
get sortChoices(){return fieldsToChoices(this.archInfo.fieldNodes);}
get orderChoices(){return[{value:"asc",label:_t("Ascending")},{value:"desc",label:_t("Descending")},];}
get defaultGroupbyChoices(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(field.type));}
setSortBy(value){this.onSortingChanged(value,this.defaultOrder.asc?"asc":"desc");}
setOrder(value){this.onSortingChanged(this.defaultOrder.name,value);}
onSortingChanged(sortBy,order){if(sortBy){this.onAttributeChanged(`${sortBy} ${order}`,"default_order");}else{this.onAttributeChanged("","default_order");}}
onAttributeChanged(value,name){return this.editArchAttributes({[name]:value});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/map/map_editor_sidebar.js */
odoo.define('@web_studio/client_action/view_editor/editors/map/map_editor_sidebar',['@web_map/map_view/map_view','@web/core/registry','@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web/model/record','@web/views/fields/many2many_tags/many2many_tags_field','@web_studio/client_action/view_editor/view_editor_model','@web/core/record_selectors/multi_record_selector'],function(require){'use strict';let __exports={};const{mapView}=require("@web_map/map_view/map_view");const{registry}=require("@web/core/registry");const{Component,useState}=require("@odoo/owl");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{Record}=require("@web/model/record");const{Many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");const MapEditorSidebar=__exports.MapEditorSidebar=class MapEditorSidebar extends Component{static template="web_studio.ViewEditor.MapEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,Property,SidebarViewToolbox,Record,Many2ManyTagsField,MultiRecordSelector,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});}
get modelParams(){return this.viewEditorModel.controllerProps.modelParams;}
get multiRecordSelectorProps(){return{resModel:"ir.model.fields",update:this.changeAdditionalFields.bind(this),resIds:this.currentAdditionalFieldsIds,domain:[["model","=",this.viewEditorModel.resModel],["ttype","not in",["many2many","one2many","binary"]],],};}
get currentAdditionalFieldsIds(){return(JSON.parse(this.viewEditorModel.xmlDoc.firstElementChild.getAttribute("studio_map_field_ids"))||[]);}
onViewAttributeChanged(value,name){value=value?value:"";return this.editArchAttributes({[name]:value});}
get contactFieldChoices(){return Object.values(this.viewEditorModel.fields).filter((field)=>field.type==="many2one"&&field.relation==="res.partner").map((field)=>({label:`${field.string} (${field.name})`,value:field.name}));}
get defaultOrderChoices(){return Object.values(this.viewEditorModel.fields).filter((field)=>field.store&&["one2many","many2many","binary"].includes(field.type)).map((field)=>({label:`${field.string} (${field.name})`,value:field.name}));}
changeAdditionalFields(resIds){const currentFullIds=this.currentAdditionalFieldsIds;const newIds=resIds.filter((id)=>!currentFullIds.includes(id));let toRemoveIds;const operationType=newIds.length?"add":"remove";if(operationType==="remove"){toRemoveIds=currentFullIds.filter((id)=>!resIds.includes(id));}
this.viewEditorModel.doOperation({type:"map_popup_fields",target:{operation_type:operationType,field_ids:operationType==="add"?newIds:toRemoveIds,},});}}
registry.category("studio_editors").add("map",{...mapView,Sidebar:MapEditorSidebar,});return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/pivot/pivot_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/pivot/pivot_editor',['@odoo/owl','@web/core/registry','@web/views/pivot/pivot_view','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web_studio/client_action/view_editor/operations_utils','@web_studio/client_action/view_editor/editors/utils','@web/model/record','@web/views/fields/many2many_tags/many2many_tags_field','@web_studio/client_action/view_editor/view_editor_model','@web/views/utils','@web/core/record_selectors/multi_record_selector'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{pivotView}=require("@web/views/pivot/pivot_view");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const operationUtils=require("@web_studio/client_action/view_editor/operations_utils");const{fieldsToChoices}=require("@web_studio/client_action/view_editor/editors/utils");const{Record}=require("@web/model/record");const{Many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const{computeReportMeasures}=require("@web/views/utils");const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");function getFieldNameFromGroupby(str){return str.split(":")[0];}
const PivotEditorSidebar=__exports.PivotEditorSidebar=class PivotEditorSidebar extends Component{static template="web_studio.ViewEditor.PivotEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,Property,SidebarViewToolbox,Record,Many2ManyTagsField,MultiRecordSelector,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);this.editArchAttributes=useEditNodeAttributes({isRoot:true});}
get possibleMeasures(){const{fieldAttrs,activeMeasures}=this.archInfo;return computeReportMeasures(this.viewEditorModel.fields,fieldAttrs,activeMeasures);}
get multiRecordSelectorProps(){return{resModel:"ir.model.fields",update:this.changeMeasureFields.bind(this),resIds:this.currentMeasureFields,domain:[["model","=",this.viewEditorModel.resModel],["name","in",Object.keys(this.possibleMeasures)],],};}
get currentMeasureFields(){return(JSON.parse(this.viewEditorModel.xmlDoc.firstElementChild.getAttribute("studio_pivot_measure_field_ids"))||[]);}
get archInfo(){return this.viewEditorModel.controllerProps.modelParams.metaData;}
get rowGroupBys(){return this.archInfo.rowGroupBys.map((fName)=>getFieldNameFromGroupby(fName));}
get colGroupBys(){return this.archInfo.colGroupBys.map((fName)=>getFieldNameFromGroupby(fName));}
changeMeasureFields(resIds){const currentFullIds=this.currentMeasureFields;const newIds=resIds.filter((id)=>!currentFullIds.includes(id));let toRemoveIds;const operationType=newIds.length?"add":"remove";if(operationType==="remove"){toRemoveIds=currentFullIds.filter((id)=>!resIds.includes(id));}
this.viewEditorModel.doOperation({type:"pivot_measures_fields",target:{operation_type:operationType,field_ids:operationType==="add"?newIds:toRemoveIds,},});}
onGroupByChanged(type,newValue,oldValue){const operation=operationUtils.viewGroupByOperation("pivot",type,newValue,oldValue);this.viewEditorModel.doOperation(operation);}
onViewAttributeChanged(value,name){value=value?value:"";return this.editArchAttributes({[name]:value});}
get columnGroupbyChoices(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(field.type)&&![this.archInfo.rowGroupBys[0],this.archInfo.rowGroupBys[1]].includes(field.name));}
get rowGroupbyChoices_first(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(field.type)&&![this.archInfo.colGroupBys[0],this.archInfo.rowGroupBys[1]].includes(field.name));}
get rowGroupbyChoices_second(){return fieldsToChoices(this.viewEditorModel.fields,(field)=>field.store&&this.viewEditorModel.GROUPABLE_TYPES.includes(field.type)&&![this.archInfo.colGroupBys[0],this.archInfo.rowGroupBys[0]].includes(field.name));}}
registry.category("studio_editors").add("pivot",{...pivotView,Sidebar:PivotEditorSidebar,});return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/search/search_editor.js */
odoo.define('@web_studio/client_action/view_editor/editors/search/search_editor',['@odoo/owl','@web/core/registry','@web_studio/client_action/view_editor/editors/xml_utils','@web/core/utils/xml','@web_studio/client_action/view_editor/editors/components/studio_hook_component','@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar','@web_studio/client_action/view_editor/view_structures/view_structures','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox','@web/core/l10n/translation','@web/core/utils/functions','@web/core/utils/hooks','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox','@web/views/standard_view_props'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{computeXpath,getNodesFromXpath,}=require("@web_studio/client_action/view_editor/editors/xml_utils");const{visitXML}=require("@web/core/utils/xml");const{StudioHook}=require("@web_studio/client_action/view_editor/editors/components/studio_hook_component");const{InteractiveEditorSidebar}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar");const{ExistingFields}=require("@web_studio/client_action/view_editor/view_structures/view_structures");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SidebarViewToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox");const{_t}=require("@web/core/l10n/translation");const{memoize}=require("@web/core/utils/functions");const{useOwnedDialogs}=require("@web/core/utils/hooks");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const{standardViewProps}=require("@web/views/standard_view_props");function getGroupByFieldNameFromString(str){const matches=str.match(/(,\s*)?(["'])group_by\2\1(\s*:\s*)?\2(?<fieldName>.*)\2/);if(!matches){return null;}
if(!matches.groups){return null;}
return matches.groups.fieldName;}
function isFilterGroupBy(node){if(!node.hasAttribute("context")){return false;}
if(/(['"])group_by\1\s*:/.test(node.getAttribute("context"))){return true;}
return false;}
class SearchEditorArchParser{parse(xmlDoc){this.fields=[];this.filters=[];this.groupBys=[];this.currentCategory=null;this.currentItems={items:[]};visitXML(xmlDoc,this.visitNode.bind(this));this.changeCategory(null,true);return{fields:this.fields,filters:this.filters,groupBys:this.groupBys,xmlDoc,};}
visitNode(node){if(node.nodeType!==1){return;}
const nodeName=node.nodeName;const studioXpath=computeXpath(node,"search");if(nodeName==="field"){this.changeCategory("field",true);const item=this.parseNode(node);item.studioXpath=studioXpath;this.fields.push(item);return false;}
if(nodeName==="filter"){const category=isFilterGroupBy(node)?"groupBy":"filter";this.changeCategory(category);const item=this.parseNode(node);item.studioXpath=studioXpath;this.pushItem(item);return false;}
if(nodeName==="separator"){this.changeCategory("filter",true);this.currentItems.separator=studioXpath;return false;}
if(nodeName==="group"){this.changeCategory(null,true);Array.from(node.children).forEach(this.visitNode.bind(this));this.changeCategory(null,true);return false;}}
parseNode(node){const nodeName=node.nodeName;const invisible=node.getAttribute("invisible");if(nodeName==="field"){return{type:"field",name:node.getAttribute("name"),label:node.getAttribute("string"),invisible,};}
if(nodeName==="separator"){return{type:"separator"};}
if(nodeName==="filter"){const item={type:"filter",name:node.getAttribute("name"),label:node.getAttribute("string")||node.getAttribute("help"),domain:node.getAttribute("domain"),invisible,};if(node.hasAttribute("context")){const groupBy=getGroupByFieldNameFromString(node.getAttribute("context"));if(groupBy){item.groupBy=groupBy;item.type="groupBy";}}
return item;}}
pushItem(item){this.currentItems.items.push(item);}
changeCategory(category,force){if(this.currentCategory!==category||force){let itemsToPushIn;if(this.currentCategory==="filter"){itemsToPushIn=this.filters;}else if(this.currentCategory==="groupBy"){itemsToPushIn=this.groupBys;}
if(itemsToPushIn){itemsToPushIn.push(this.currentItems);this.currentItems={items:[]};}}
this.currentCategory=category||this.currentCategory;}}
class SearchEditorController extends Component{static props={...standardViewProps,archInfo:{type:Object}};static template="web_studio.SearchEditorController";static components={StudioHook};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);}
get filtersGroups(){return this.props.archInfo.filters;}
hasItems(group){return group.some((g)=>this.getItems(g.items));}
get autoCompleteFields(){return this.props.archInfo.fields;}
get groupByGroups(){return this.props.archInfo.groupBys;}
getItems(items){if(!this.viewEditorModel.showInvisible){return items.filter((i)=>i.invisible!=="True"&&i.invisible!=="1");}
return items;}
getFirstHookProps(type){const xpath="/search";const position="inside";const group=type==="filter"?this.filtersGroups:this.groupByGroups;if(this.hasItems(group)){return false;}
const props={xpath,position,type,};if(type==="groupBy"){props.infos=JSON.stringify({create_group:true,});}
return props;}
getItemLabel(type,item){if(type==="filter"){return item.label;}
if(type==="groupBy"){let label=item.label||item.name;if(this.env.debug){label=`${label} (${item.groupBy})`;}
return label;}
if(type==="field"){let label=item.label||this.props.fields[item.name].string;if(this.env.debug){label=`${label} (${item.name})`;}
return label;}}
onItemClicked(ev,xpath){this.env.config.onNodeClicked(xpath);}}
class SearchComponents extends Component{static props={};static template="web_studio.SearchEditor.Sidebar.Components";get structures(){return{filter:{name:_t("Filter"),class:"o_web_studio_filter",},separator:{name:_t("Separator"),class:"o_web_studio_filter_separator",},};}}
class SimpleElementEditor extends Component{static props={node:{type:Object}};static components={Property,SidebarPropertiesToolbox};static template="web_studio.SearchEditor.SimpleElementEditor";setup(){this.addDialog=useOwnedDialogs();}
get viewEditorModel(){return this.env.viewEditorModel;}
get node(){return this.props.node;}
get label(){if(this.node.type==="field"&&!this.node.label){return this.env.viewEditorModel.fields[this.node.name].string;}
return this.node.label;}
get domain(){if(this.node.type==="filter"){return this.node.domain;}
return null;}
onChangeDomain(value){const operation={new_attrs:{domain:value},type:"attributes",position:"attributes",target:this.viewEditorModel.getFullTarget(this.viewEditorModel.activeNodeXpath),};this.viewEditorModel.doOperation(operation);}
onChangeLabel(value){const operation={new_attrs:{string:value},type:"attributes",position:"attributes",target:this.viewEditorModel.getFullTarget(this.viewEditorModel.activeNodeXpath),};this.viewEditorModel.doOperation(operation);}
onPropertyRemoved(){const activeNodeXpath=this.viewEditorModel.activeNodeXpath;this.viewEditorModel.activeNodeXpath=null;const operation={type:"remove",target:this.viewEditorModel.getFullTarget(activeNodeXpath),};this.viewEditorModel.doOperation(operation);}}
class SearchEditorSidebar extends Component{static template="web_studio.ViewEditor.SearchEditorSidebar";static props={openViewInForm:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},};static components={InteractiveEditorSidebar,ExistingFields,SearchComponents,Property,SidebarViewToolbox,SimpleElementEditor,};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);const searchArchParser=new SearchEditorArchParser();this._getCurrentNode=memoize(()=>{const{activeNodeXpath,xmlDoc}=this.viewEditorModel;if(!activeNodeXpath){return null;}
const node=getNodesFromXpath(activeNodeXpath,xmlDoc);return searchArchParser.parseNode(node[0]);});}
get currentNode(){const{activeNodeXpath,arch}=this.viewEditorModel;return this._getCurrentNode(`${activeNodeXpath}_${arch}`);}}
const searchEditor={ArchParser:SearchEditorArchParser,Controller:SearchEditorController,props(genericProps,editor,config){const archInfo=new editor.ArchParser().parse(genericProps.arch);return{...genericProps,archInfo};},Sidebar:SearchEditorSidebar,};registry.category("studio_editors").add("search",searchEditor);const FILTER_TYPES=["date","datetime"];const GROUPABLE_TYPES=["many2one","many2many","char","boolean","selection","date","datetime",];function fieldCanBeFilter(field){return FILTER_TYPES.includes(field.type)&&field.store;}
function fieldCanBeGroupable(field){return GROUPABLE_TYPES.includes(field.type)&&field.store;}
const disabledDropClass="o-web-studio-search--drop-disable";searchEditor.isValidHook=function isValidSearchHook({hook,element,viewEditorModel}){if(hook.closest(`.${disabledDropClass}`)){return false;}
return true;};searchEditor.prepareForDrag=function({element,viewEditorModel,ref}){const draggingStructure=element.dataset.structure;switch(draggingStructure){case"field":{const fieldName=JSON.parse(element.dataset.drop).fieldName;const field=viewEditorModel.fields[fieldName];if(!fieldCanBeFilter(field)){ref.el.querySelector(`.o-web-studio-search--filters`).classList.add(disabledDropClass);}
if(!fieldCanBeGroupable(field)){ref.el.querySelector(`.o-web-studio-search--groupbys`).classList.add(disabledDropClass);}
break;}
case"separator":case"filter":{const els=ref.el.querySelectorAll(".o-web-studio-search--fields,.o-web-studio-search--groupbys");els.forEach((el)=>el.classList.add("o-web-studio-search--drop-disable"));break;}}
return()=>{ref.el.querySelectorAll(".o-web-studio-search--drop-disable").forEach((el)=>el.classList.remove("o-web-studio-search--drop-disable"));};};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/sidebar_safe_fields.js */
odoo.define('@web_studio/client_action/view_editor/editors/sidebar_safe_fields',[],function(require){'use strict';let __exports={};const SIDEBAR_SAFE_FIELDS=__exports.SIDEBAR_SAFE_FIELDS=["badge","selection_badge","handle","percentpie","radio","selection","image_url","ace","priority","date","datetime","remaining_days","email","phone","url","binary","image","pdf_viewer","boolean","state_selection","boolean_toggle","statusbar","float","float_time","integer","monetary","percentage","progressbar","text","boolean_favorite","boolean_icon","char","statinfo","html","text_emojis","CopyClipboardChar","CopyClipboardText","CopyClipboardURL","char_emojis","many2many_tags","many2one","many2many","one2many","sms_widget","reference","daterange",];return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/utils.js */
odoo.define('@web_studio/client_action/view_editor/editors/utils',['@web/core/utils/arrays','@web/core/registry','@web_studio/client_action/view_editor/editors/sidebar_safe_fields','@odoo/owl'],function(require){'use strict';let __exports={};const{sortBy}=require("@web/core/utils/arrays");const{registry}=require("@web/core/registry");const{SIDEBAR_SAFE_FIELDS}=require("@web_studio/client_action/view_editor/editors/sidebar_safe_fields");const{useComponent,useEffect,useRef}=require("@odoo/owl");const hookPositionTolerance=__exports.hookPositionTolerance=50;__exports.cleanHooks=cleanHooks;function cleanHooks(el){for(const hookEl of el.querySelectorAll(".o_web_studio_nearest_hook")){hookEl.classList.remove("o_web_studio_nearest_hook");}}
__exports.getActiveHook=getActiveHook;function getActiveHook(el){return el.querySelector(".o_web_studio_nearest_hook");}
__exports.isToXpathEquivalentFromXpath=isToXpathEquivalentFromXpath;function isToXpathEquivalentFromXpath(position,toXpath,fromXpath){if(toXpath===fromXpath){return true;}
const toParts=toXpath.split("/");const fromParts=fromXpath.split("/");if(toParts.slice(0,-1).join("/")!==fromParts.slice(0,-1).join("/")){return false;}
const nodeIdxRegExp=/(\w+)(\[(\d+)\])?/;const toMatch=toParts[toParts.length-1].match(nodeIdxRegExp);const fromMatch=fromParts[fromParts.length-1].match(nodeIdxRegExp);if(fromMatch[1]!==toMatch[1]){return false;}
if(position==="after"&&parseInt(toMatch[3]||1)+1===parseInt(fromMatch[3]||1)){return true;}
return false;}
__exports.getHooks=getHooks;function getHooks(el){return[...el.querySelectorAll(".o_web_studio_hook")];}
__exports.randomName=randomName;function randomName(baseName){const random=Math.floor(Math.random()*10000).toString(32)+"_"+Number(new Date()).toString(32);return`${baseName}_${random}`;}
__exports.studioIsVisible=studioIsVisible;function studioIsVisible(props){return props.studioIsVisible!==undefined?props.studioIsVisible:true;}
__exports.cleanClickedElements=cleanClickedElements;function cleanClickedElements(mainEl){for(const el of mainEl.querySelectorAll(".o-web-studio-editor--element-clicked")){el.classList.remove("o-web-studio-editor--element-clicked");}}
__exports.useStudioRef=useStudioRef;function useStudioRef(refName="studioRef",onClick){const comp=useComponent();const ref=useRef(refName);useEffect((el)=>{if(el){el.setAttribute("data-studio-xpath",comp.props.studioXpath);}},()=>[ref.el]);if(onClick){const handler=onClick.bind(comp);useEffect((el)=>{if(el){el.addEventListener("click",handler,{capture:true});return()=>{el.removeEventListener("click",handler);};}},()=>[ref.el]);}}
__exports.makeModelErrorResilient=makeModelErrorResilient;function makeModelErrorResilient(ModelClass){function logError(debug){if(!debug){return;}
console.warn("The onchange triggered an error. It may indicate either a faulty call to onchange, or a faulty model python side");}
return class ResilientModel extends ModelClass{setup(){super.setup(...arguments);const orm=this.orm;const debug=this.env.debug;this.orm=Object.assign(Object.create(orm),{async call(model,method){if(method==="onchange"){try{return await orm.call.call(orm,...arguments);}catch{logError(debug);}
return{value:{}};}
return orm.call.call(orm,...arguments);},});}};}
__exports.getWowlFieldWidgets=getWowlFieldWidgets;function getWowlFieldWidgets(fieldType,currentKey="",blacklistedKeys=[],debug=false){const wowlFieldRegistry=registry.category("fields");const widgets=[];for(const[widgetKey,Component]of wowlFieldRegistry.getEntries()){if(widgetKey!==currentKey){if(!Component.supportedTypes||!Component.supportedTypes.includes(fieldType)){continue;}
if(widgetKey.includes(".")||blacklistedKeys.includes(widgetKey)){continue;}
if(!debug&&!SIDEBAR_SAFE_FIELDS.includes(widgetKey)){continue;}}
widgets.push([widgetKey,Component.displayName]);}
return sortBy(widgets,(el)=>el[1]||el[0]);}
__exports.xpathToLegacyXpathInfo=xpathToLegacyXpathInfo;function xpathToLegacyXpathInfo(xpath){const xpathInfo=[];const matches=xpath.matchAll(/\/?(\w+)(\[(\d+)\])?/g);for(const m of matches){const info={tag:m[1],indice:parseInt(m[3]||1),};xpathInfo.push(info);}
return xpathInfo;}
__exports.fieldsToChoices=fieldsToChoices;function fieldsToChoices(fields,filterCallback=undefined){let values=Object.values(fields);if(filterCallback){values=values.filter(filterCallback);}
return values.map((field)=>({label:odoo.debug?`${field.string} (${field.name})`:field.string||field.name,value:field.name,}));}
__exports.getStudioNoFetchFields=getStudioNoFetchFields;function getStudioNoFetchFields(_fieldNodes){const fieldNames=[];const fieldNodes=[];Object.entries(_fieldNodes).filter(([fNode,field])=>field.attrs&&field.attrs.studio_no_fetch).forEach(([fNode,field])=>{fieldNames.push(field.name);fieldNodes.push(fNode);});return{fieldNames,fieldNodes,};}
__exports.useModelConfigFetchInvisible=useModelConfigFetchInvisible;function useModelConfigFetchInvisible(model){function fixActiveFields(activeFields){const stack=[activeFields];while(stack.length){const activeFields=stack.pop();for(const activeField of Object.values(activeFields)){if("related"in activeField){stack.push(activeField.related.activeFields);}
delete activeField.invisible;}}
return activeFields;}
const load=model.load;model.load=(...args)=>{fixActiveFields(model.config.activeFields);return load.call(model,...args);};}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/editors/xml_utils.js */
odoo.define('@web_studio/client_action/view_editor/editors/xml_utils',['@web/core/py_js/py','@web/views/view_compiler'],function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{isComponentNode,appendAttr}=require("@web/views/view_compiler");const nodeWeak=new WeakMap();__exports.countPreviousSiblings=countPreviousSiblings;function countPreviousSiblings(node){const countXpath=`count(preceding-sibling::${node.tagName})`;return node.ownerDocument.evaluate(countXpath,node,null,XPathResult.NUMBER_TYPE).numberValue;}
__exports.computeXpath=computeXpath;function computeXpath(node,upperBoundSelector="form"){if(nodeWeak.has(node)){return nodeWeak.get(node);}
const tagName=node.tagName;const count=countPreviousSiblings(node)+1;let xpath=`${tagName}[${count}]`;const parent=node.parentElement;if(!node.matches(upperBoundSelector)){const parentXpath=computeXpath(parent,upperBoundSelector);xpath=`${parentXpath}/${xpath}`;}else{xpath=`/${xpath}`;}
nodeWeak.set(node,xpath);return xpath;}
__exports.getNodeAttributes=getNodeAttributes;function getNodeAttributes(node){const attrs={};for(const att of node.getAttributeNames()){if(att==="options"){attrs[att]=evaluateExpr(node.getAttribute(att));continue;}
attrs[att]=node.getAttribute(att);}
return attrs;}
function getXpathNodes(xpathResult){const nodes=[];let res;while((res=xpathResult.iterateNext())){nodes.push(res);}
return nodes;}
__exports.getNodesFromXpath=getNodesFromXpath;function getNodesFromXpath(xpath,xml){const owner="evaluate"in xml?xml:xml.ownerDocument;const xpathResult=owner.evaluate(xpath,xml,null,XPathResult.ORDERED_NODE_ITERATOR_TYPE);return getXpathNodes(xpathResult);}
const parser=new DOMParser();const parseStringToXml=__exports.parseStringToXml=(str)=>{return parser.parseFromString(str,"text/xml");};const serializer=new XMLSerializer();const serializeXmlToString=__exports.serializeXmlToString=(xml)=>{return serializer.serializeToString(xml);};__exports.applyInvisible=applyInvisible;function applyInvisible(invisible,compiled,params){if(!invisible||invisible==="False"||invisible==="0"){return compiled;}
let isVisileExpr;if(invisible!=="True"&&invisible!=="1"){const recordExpr=params.recordExpr||"__comp__.props.record";isVisileExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
            invisible
        )},${recordExpr}.evalContextWithVirtualIds)`;if(isComponentNode(compiled)){compiled.setAttribute("studioIsVisible",isVisileExpr);}else{appendAttr(compiled,"class",`o_web_studio_show_invisible:!${isVisileExpr}`);}}else{if(isComponentNode(compiled)){compiled.setAttribute("studioIsVisible","false");}else{appendAttr(compiled,"class",`o_web_studio_show_invisible:true`);}}
const studioShowExpr=`__comp__.viewEditorModel.showInvisible`;isVisileExpr=isVisileExpr?`(${isVisileExpr} or ${studioShowExpr})`:studioShowExpr;if(compiled.hasAttribute("t-if")){const formerTif=compiled.getAttribute("t-if");isVisileExpr=`( ${formerTif} ) and ${isVisileExpr}`;}
compiled.setAttribute("t-if",isVisileExpr);return compiled;}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/action_button/action_button.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/action_button/action_button',['@web/core/dialog/dialog','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/autocomplete/autocomplete','@odoo/owl','@web/core/utils/hooks','@web/core/l10n/translation','@web/core/record_selectors/record_selector'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{Component,useState}=require("@odoo/owl");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{RecordSelector}=require("@web/core/record_selectors/record_selector");const DialogAddNewButton=__exports.DialogAddNewButton=class DialogAddNewButton extends Component{static template=`web_studio.DialogNewButtonStatusBar`;static components={AutoComplete,Dialog,Dropdown,DropdownItem,RecordSelector,};static props={model:{type:String},onConfirm:{type:Function},close:{type:Function},};setup(){this.rpc=useService("rpc");this.state=useState({action:"",button_type:"",actionId:false,methodId:"",methodList:[],error:"",methodChecked:false,});}
get multiRecordSelectorProps(){return{resModel:"ir.actions.actions",update:(resId)=>{this.state.actionId=resId;},resId:this.state.actionId,domain:[["binding_model_id","=",this.props.model]],};}
get title(){return _t("Buttons Properties");}
get checkValidity(){if(this.state.label?.length>0){if(this.state.button_type==="action"&&this.state.actionId){return false;}else if(this.state.methodChecked&&this.state.button_type==="object"&&this.state.methodId?.length>0&&this.state.error?.length===0){return false;}else{return true;}}else{return true;}}
onChange(){this.state.actionId=false;this.state.methodId=null;}
onConfirm(){this.props.onConfirm(this.state);this.props.close();}
onCancel(){this.props.close();}
async checkMethod(){this.state.error="";this.state.methodChecked=false;if(this.state.methodId?.length>0){if(this.state.methodId.startsWith("_")){this.state.error=_t("The method %s is private.",this.state.methodId);}else{try{await this.rpc("/web_studio/check_method",{model_name:this.props.model,method_name:this.state.methodId,});}catch(error){if(error?.data?.message?.length>0){this.state.error=error.data.message;}}
this.state.methodChecked=true;}}}}
const AddButtonAction=__exports.AddButtonAction=class AddButtonAction extends Component{static props={};static template=`web_studio.AddButtonAction`;setup(){this.addDialog=useOwnedDialogs();}
onClick(){this.addDialog(DialogAddNewButton,{model:this.env.viewEditorModel.resModel,onConfirm:(state)=>{const viewEditorModel=this.env.viewEditorModel;const arch=viewEditorModel.xmlDoc;const findHeader=arch.firstChild.querySelector(":scope > header");if(!findHeader){viewEditorModel.pushOperation({type:"statusbar",view_id:this.env.viewEditorModel.view.id,});}
viewEditorModel.doOperation({type:"add_button_action",button_type:state.button_type,actionId:state.actionId,methodId:state.methodId,label:state.label,});},});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/field_configuration/field_configuration.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/field_configuration/field_configuration',['@odoo/owl','@web/core/dialog/dialog','@web/core/confirmation_dialog/confirmation_dialog','@web/core/model_field_selector/model_field_selector','@web_studio/client_action/utils','@web/core/utils/hooks','@web/session','@web/core/l10n/translation','@web/core/domain_selector/domain_selector','@web_studio/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog','@web/core/record_selectors/record_selector'],function(require){'use strict';let __exports={};const{Component,useState,xml}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{useDialogConfirmation}=require("@web_studio/client_action/utils");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{session}=require("@web/session");const{_t}=require("@web/core/l10n/translation");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{SelectionContentDialog}=require("@web_studio/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog");const{RecordSelector}=require("@web/core/record_selectors/record_selector");__exports.getCurrencyField=getCurrencyField;function getCurrencyField(fieldsGet){const field=Object.entries(fieldsGet).find(([fName,fInfo])=>{return fInfo.type==="many2one"&&fInfo.relation==="res.currency";});if(field){return field[0];}}
const SelectionValuesEditor=__exports.SelectionValuesEditor=class SelectionValuesEditor extends Component{static components={SelectionContentDialog,};static props={configurationModel:{type:Object},confirm:{type:Function},cancel:{type:Function},};static template="web_studio.SelectionValuesEditor";static Model=class SelectionValuesModel{constructor(){this.selection="[]";}
get isValid(){return true;}};get selection(){return JSON.parse(this.props.configurationModel.selection);}
onConfirm(choices){this.props.configurationModel.selection=JSON.stringify(choices);this.props.confirm();}}
const RelationalFieldConfigurator=__exports.RelationalFieldConfigurator=class RelationalFieldConfigurator extends Component{static template="web_studio.RelationalFieldConfigurator";static components={RecordSelector};static props={configurationModel:{type:Object},resModel:{type:String},fieldType:{type:String},};static Model=class RelationalFieldModel{constructor(){this.relationId=false;}
get isValid(){return!!this.relationId;}};setup(){this.state=useState(this.props.configurationModel);}
get valueSelectorProps(){if(this.props.fieldType==="one2many"){return{resModel:"ir.model.fields",domain:[["relation","=",this.props.resModel],["ttype","=","many2one"],["model_id.abstract","=",false],["store","=",true],],resId:this.state.relationId,update:(resId)=>{this.state.relationId=resId;},};}
return{resModel:"ir.model",domain:[["transient","=",false],["abstract","=",false],],resId:this.state.relationId,update:(resId)=>{this.state.relationId=resId;},};}}
class RelatedChainBuilderModel{static services=["field","dialog"];constructor({services,props}){this.services=services;this.relatedParams={};this.fieldInfo={resModel:props.resModel,fieldDef:null};this.shouldOpenCurrencyDialog=props.shouldOpenCurrencyDialog;this.resModel=props.resModel;}
get isValid(){return!!this.relatedParams.related;}
getRelatedFieldDescription(resModel,lastField){const fieldType=lastField.type;const relatedDescription={readonly:true,copy:false,string:lastField.string,type:fieldType,store:["one2many","many2many"].includes(fieldType)?false:lastField.store,};if(["many2one","many2many","one2many"].includes(fieldType)){relatedDescription.relation=lastField.relation;}
if(["one2many","many2many"].includes(fieldType)){relatedDescription.relational_model=resModel;}
if(fieldType==="selection"){relatedDescription.selection=lastField.selection;}
return relatedDescription;}
async confirm(){const relatedDescription=this.getRelatedFieldDescription(this.fieldInfo.resModel,this.fieldInfo.fieldDef);if(this.shouldOpenCurrencyDialog&&relatedDescription.type==="monetary"){const currencyDescription=await openCurrencyConfirmDialog(this.services.dialog.add,this.resModel);if(!currencyDescription){return false;}
const relatedCurrencyField=await this.getRelatedCurrencyField(this.fieldInfo.resModel);if(relatedCurrencyField){currencyDescription.related=relatedCurrencyField;}else{currencyDescription.related="";}
Object.assign(this.relatedParams,currencyDescription);return true;}else{Object.assign(this.relatedParams,relatedDescription);return true;}}
async getRelatedCurrencyField(resModel){const fields=await this.services.field.loadFields(resModel);const currencyField=getCurrencyField(fields);if(!currencyField){return null;}
const chainSplit=this.relatedParams.related.split(".");chainSplit.splice(chainSplit.length-1,1,currencyField);return chainSplit.join(".");}}
const RelatedChainBuilder=__exports.RelatedChainBuilder=class RelatedChainBuilder extends Component{static template=xml`<ModelFieldSelector resModel="props.resModel" path="fieldChain" readonly="false" filter.bind="filter" update.bind="updateChain" />`;static components={ModelFieldSelector};static props={resModel:{type:String},configurationModel:{type:Object},shouldOpenCurrencyDialog:{type:Boolean},};static Model=RelatedChainBuilderModel;setup(){this.state=useState(this.props.configurationModel);this.relatedParams.related="";}
get relatedParams(){return this.state.relatedParams;}
get fieldChain(){return this.relatedParams.related;}
filter(fieldDef,path){if(!path){return fieldDef.type==="many2one";}
return true;}
async updateChain(path,fieldInfo){this.relatedParams.related=path;this.state.fieldInfo=fieldInfo;}}
function useConfiguratorModel(Model,props){const services=Object.fromEntries((Model.services||[]).map((servName)=>{let serv;if(servName==="dialog"){serv={add:useOwnedDialogs()};}else{serv=useService(servName);}
return[servName,serv];}));const model=new Model({services,props});return useState(model);}
const FieldConfigurationDialog=__exports.FieldConfigurationDialog=class FieldConfigurationDialog extends Component{static props={confirm:{type:Function},cancel:{type:Function},close:{type:Function},Component:{type:Function},componentProps:{type:Object,optional:true},fieldType:{type:String,optional:true},isDialog:{type:Boolean,optional:true},title:{type:String,optional:true},size:{type:String,optional:true},};static template="web_studio.FieldConfigurationDialog";static components={Dialog};setup(){const{confirm,cancel}=useDialogConfirmation({confirm:async()=>{let confirmValues=false;if(!this.configurationModel.isValid){return false;}
if(this.configurationModel.confirm){const res=await this.configurationModel.confirm();if(res||res===undefined){confirmValues=this.configurationModel;}}else{confirmValues=this.configurationModel;}
return this.props.confirm(confirmValues);},cancel:()=>this.props.cancel(),});this.confirm=confirm;this.cancel=cancel;this.configurationModel=useConfiguratorModel(this.Component.Model,this.props.componentProps);}
get title(){if(this.props.title){return this.props.title;}
if(this.props.fieldType){return _t("Field properties: %s",this.props.fieldType);}
return"";}
get Component(){return this.props.Component;}
get canConfirm(){return this.configurationModel.isValid;}}
__exports.openCurrencyConfirmDialog=openCurrencyConfirmDialog;function openCurrencyConfirmDialog(add,resModel){const currencyFieldDescription={default_value:session.company_currency_id,field_description:"Currency",model_name:resModel,name:"x_currency_id",relation:"res.currency",type:"many2one",};return new Promise((resolve,reject)=>{add(ConfirmationDialog,{body:_t(`In order to use a monetary field, you need a currency field on the model. Do you want to create a currency field first? You can make this field invisible afterwards.`),confirm:()=>{resolve(currencyFieldDescription);},cancel:()=>resolve(false),});});}
const FilterConfiguration=__exports.FilterConfiguration=class FilterConfiguration extends Component{static components={DomainSelector};static template="web_studio.FilterConfiguration";static props={resModel:{type:String},configurationModel:{type:Object},};static Model=class FilterConfigurationModel{constructor(){this.filterLabel="";this.domain="[]";}
get isValid(){return!!this.filterLabel;}};setup(){this.state=useState(this.props.configurationModel);}
get domainSelectorProps(){return{resModel:this.props.resModel,readonly:false,domain:this.state.domain,update:(domainStr)=>{this.state.domain=domainStr;},isDebugMode:!!this.env.debug,};}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/utils/sortable_owl','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useSortable}=require("@web/core/utils/sortable_owl");const{Component,useRef,useState}=require("@odoo/owl");const SelectionContentDialog=__exports.SelectionContentDialog=class SelectionContentDialog extends Component{static components={Dialog,};static defaultProps={defaultChoices:[],};static props={defaultChoices:{type:Array,optional:true},onConfirm:{type:Function},close:{type:Function},};static template="web_studio.SelectionContentDialog";setup(){this.state=useState({choices:this.props.defaultChoices,});this.localState=useState({_newItem:[],editedItem:null,});const itemsList=useRef("itemsList");useSortable({enable:()=>!this.editedItem,handle:".o-draggable-handle",ref:itemsList,elements:".o-draggable",cursor:"move",onDrop:(params)=>this.resequenceItems(params),});this.oldValue=new WeakMap();}
getSelectionFromItem(item){if(item.id==="new"){return this.localState._newItem;}
return this.selection[item.id];}
get selection(){return this.state.choices;}
set selection(items){this.state.choices=items;}
get title(){return _t("Field Properties");}
selectionToItem(selection,params={}){return Object.assign({id:"new",key:selection[0],name:selection[0],label:selection[1],isDraggable:false,isRemovable:false,isInEdition:false,},params);}
get selectionToItems(){const inEdition=!!this.editedItem;return this.selection.map((sel,index)=>{return this.selectionToItem(sel,{id:index,key:inEdition?index:sel[0],isInEdition:this.editedItem?.id===this.selection.indexOf(sel)&&!this.shouldFullEdit,isDraggable:!inEdition,isRemovable:!inEdition,});});}
get newItem(){return this.selectionToItem(this.localState._newItem,{isInEdition:true,id:"new"});}
get editedItem(){return this.localState.editedItem;}
get shouldFullEdit(){return Boolean(this.env.debug);}
ensureUnique(item){const value=item[0];if(!value){return false;}
const otherElements=this.selection.filter((i)=>i!==item);if(otherElements.some((i)=>i[0]===value)){return false;}
return true;}
setItemValue(item,value){if(item.id!=="new"&&item.id!==this.editedItem.id){return;}
const isEditingLabel=item.id!=="new";item=this.getSelectionFromItem(item);item[0]=isEditingLabel?this.editedItem.name:value;item[1]=value;}
addItem(item){if(!this.ensureUnique(item)){return;}
this.selection.push(item);this.localState._newItem=[];}
removeItem(item){this.selection=this.selection.filter((i)=>i[0]!==item.name);}
editItem(item){const selItem=this.getSelectionFromItem(item);if(item.id==="new"){return this.addItem(selItem);}
if(this.editedItem?.id===item.id){if(!this.ensureUnique(selItem)){return;}
this.localState.editedItem=null;this.oldValue.delete(selItem);return;}
this.oldValue.set(selItem,[...selItem]);this.localState.editedItem=item;}
discardItemChanges(item){if(item.id==="new"){return this.setItemValue(item,"");}
const selItem=this.getSelectionFromItem(item);const oldValue=this.oldValue.get(selItem);selItem[0]=oldValue[0];selItem[1]=oldValue[1];this.localState.editedItem=null;}
resequenceItems(params){const{previous,next,element}=params;const itemId=parseInt(element.dataset.itemId);let items=this.selection;const item=items[itemId];items=items.filter((i)=>i!==item);let toIndex;if(previous){toIndex=parseInt(previous.dataset.itemId)+1;}else if(next){toIndex=parseInt(next.dataset.itemId);}
items.splice(toIndex,0,item);this.selection=items;}
async onConfirm(){if(this.newItem.name?.length){this.editItem(this.newItem);}
await this.props.onConfirm(this.selection);this.props.close();}
onKeyPressed(item,key){if(key==="Enter"){this.editItem(item);}}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/interactive_editor.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/interactive_editor',['@odoo/owl','@web/core/utils/ui','@web/core/utils/draggable','@web/core/utils/hooks','@web/core/l10n/translation','@web_studio/client_action/view_editor/editors/utils','@web/core/confirmation_dialog/confirmation_dialog','@web_studio/client_action/view_editor/interactive_editor/field_configuration/field_configuration','@web_studio/client_action/view_editor/editors/xml_utils','@web_studio/client_action/view_editor/default_view_sidebar/default_view_sidebar'],function(require){'use strict';let __exports={};const{Component,toRaw}=require("@odoo/owl");const{closest,touching}=require("@web/core/utils/ui");const{useDraggable}=require("@web/core/utils/draggable");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{isToXpathEquivalentFromXpath,cleanHooks,getActiveHook,getHooks,hookPositionTolerance,randomName,}=require("@web_studio/client_action/view_editor/editors/utils");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{FieldConfigurationDialog,SelectionValuesEditor,RelationalFieldConfigurator,RelatedChainBuilder,getCurrencyField,FilterConfiguration,}=require("@web_studio/client_action/view_editor/interactive_editor/field_configuration/field_configuration");const{getNodesFromXpath,countPreviousSiblings,}=require("@web_studio/client_action/view_editor/editors/xml_utils");const{DefaultViewSidebar}=require("@web_studio/client_action/view_editor/default_view_sidebar/default_view_sidebar");const NO_M2O_AVAILABLE=_t(`
    There are no many2one fields related to the current model.
    To create a one2many field on the current model, you must first create its many2one counterpart on the model you want to relate to.
`);function copyElementOnDrag(){let element;let copy;function clone(_element){element=_element;copy=element.cloneNode(true);}
function insert(){if(element){element.insertAdjacentElement("beforebegin",copy);}}
function clean(){if(copy){copy.remove();}
copy=null;element=null;}
return{clone,insert,clean};}
const InteractiveEditor=__exports.InteractiveEditor=class InteractiveEditor extends Component{static template="web_studio.InteractiveEditor";static components={};static props={editor:true,slots:{type:Object},editorContainerRef:{type:Object},rendererRef:{type:Object},};setup(){this.defaultSidebar=DefaultViewSidebar;this.action=useService("action");this.orm=useService("orm");this.addDialog=useOwnedDialogs();this.notification=useService("notification");const getNearestHook=this.getNearestHook.bind(this);const prepareForDrag=this.props.editor.prepareForDrag;const isValidHook=this.props.editor.isValidHook||(()=>true);const styleNearestHook=this.props.editor.styleNearestHook||((ref,hook)=>{hook.classList.add("o_web_studio_nearest_hook");});function removeBootStrapClasses(element){const bootstrapClasses=Array.from(element.classList).filter((c)=>c.startsWith("position-")||c.startsWith("w-")||c.startsWith("h-"));if(!bootstrapClasses.length){return()=>{};}
element.classList.remove(...bootstrapClasses);return()=>{element.classList.add(...bootstrapClasses);};}
let cleanUps;const copyOnDrag=copyElementOnDrag();useDraggable({ref:this.props.editorContainerRef,elements:".o-draggable",onWillStartDrag:({element})=>{cleanUps=[];if(element.closest(".o_web_studio_component")){copyOnDrag.clone(element);}},onDragStart:({element})=>{cleanUps.push(removeBootStrapClasses(element));copyOnDrag.insert();if(prepareForDrag){cleanUps.push(prepareForDrag({element,viewEditorModel:this.viewEditorModel,ref:this.props.editorContainerRef,}));}},onDrag:({x,y,element})=>{cleanHooks(this.viewRef.el);element.classList.remove("o-draggable--drop-ready");const hook=getNearestHook(element,{x,y});if(!hook){return;}
if(!isValidHook({hook,element,viewEditorModel:this.viewEditorModel})){return;}
styleNearestHook(this.props.rendererRef,hook);element.classList.add("o-draggable--drop-ready");},onDrop:({element})=>{const targetHook=getActiveHook(this.viewRef.el);if(!targetHook){return;}
const{xpath,position,type,infos}=targetHook.dataset;const droppedData=element.dataset;const isNew=element.classList.contains("o_web_studio_component");const structure=isNew?droppedData.structure:"field";if(isNew){this.addStructure(structure,droppedData.drop,{xpath,position,type,infos,});}else{this.moveStructure(structure,droppedData,{xpath,position});}},onDragEnd:({element})=>{cleanHooks(this.viewRef.el);if(cleanUps){cleanUps.forEach((c)=>c());cleanUps=null;}
copyOnDrag.clean();},});this.applyAutoClick=()=>{if(!this.autoClick){return;}
const{targetInfo,tag,attrs}=this.autoClick;let xpathToClick=targetInfo.xpath;if(tag){if(targetInfo.position!=="inside"){xpathToClick=xpathToClick.split("/").slice(0,-1).join("/");}
const attrForXpath=Object.entries(attrs).filter(([,value])=>!!value).map(([attName,value])=>{return`@${attName}='${value}'`;}).join(" and ");const nodeXpath=`${tag}[${attrForXpath}]`;const fullXpath=`${xpathToClick}/${nodeXpath}`;const nodes=getNodesFromXpath(fullXpath,toRaw(this.viewEditorModel).xmlDoc);this.autoClick=null;if(nodes.length!==1){return;}
const atPosition=countPreviousSiblings(nodes[0])+1;xpathToClick=`${xpathToClick}/${tag}[${atPosition}]`;}
const domEl=this.props.rendererRef.el.querySelector(`[data-studio-xpath='${xpathToClick}'], [studioxpath='${xpathToClick}']`);if(domEl){domEl.click();}};}
get viewEditorModel(){return this.env.viewEditorModel;}
get viewRef(){return this.viewEditorModel.viewRef;}
getNearestHook(draggedEl,{x,y}){const viewRefEl=this.viewRef.el;cleanHooks(viewRefEl);const mouseToleranceRect={x:x-hookPositionTolerance,y:y-hookPositionTolerance,width:hookPositionTolerance*2,height:hookPositionTolerance*2,};const touchingEls=touching(getHooks(viewRefEl),mouseToleranceRect);const closestHookEl=closest(touchingEls,{x,y});return closestHookEl;}
openViewInForm(){return this.action.doAction({type:"ir.actions.act_window",res_model:"ir.ui.view",res_id:this.env.viewEditorModel.mainView.id,views:[[false,"form"]],target:"current",},{clearBreadcrumbs:true});}
openDefaultValues(){const resModel=this.env.viewEditorModel.resModel;this.action.doAction({name:_t("Default Values"),type:"ir.actions.act_window",res_model:"ir.default",target:"current",views:[[false,"list"],[false,"form"],],domain:[["field_id.model","=",resModel]],},{clearBreadcrumbs:true});}
setAutoClick(targetInfo,nodeDescr){if(!targetInfo){this.autoClick=null;return;}
if(targetInfo&&!nodeDescr){this.autoClick={targetInfo,};return;}
let nameAttr=nodeDescr.attrs.name;if(nodeDescr.tag==="field"&&!nameAttr){nameAttr=nodeDescr.field_description.name;}
this.autoClick={targetInfo,tag:nodeDescr.tag,attrs:{name:nameAttr},};}
async addField(droppedData,targetInfo){const data=JSON.parse(droppedData);const isExistingField="fieldName"in data;let newNode;if(!isExistingField){newNode=await this.getNewFieldNode(data);}else{newNode={tag:"field",attrs:{name:data.fieldName},};const field=this.viewEditorModel.fields[data.fieldName];if(field.type==="monetary"){this.setCurrencyInfos(newNode.attrs);}}
if(!newNode){return;}
if(!isExistingField){this.viewEditorModel.setRenameableField(newNode.field_description?.name,true);}
if(this.viewEditorModel.viewType==="kanban"){newNode.attrs.display="full";}
if(this.viewEditorModel.viewType==="list"){newNode.attrs.optional="show";}
const operation={node:newNode,target:this.viewEditorModel.getFullTarget(targetInfo.xpath),position:targetInfo.position,type:"add",};this.setAutoClick(targetInfo,newNode);return this.viewEditorModel.doOperation(operation);}
async addStructure(structure,droppedData,targetInfo){if(structure==="field"&&!["groupBy","filter"].includes(targetInfo.type)){return this.addField(droppedData,targetInfo);}
if(["notebook","group","separator"].includes(structure)){const operation={node:{tag:structure,attrs:{name:randomName(`studio_${structure}`),},},target:this.viewEditorModel.getFullTarget(targetInfo.xpath),position:targetInfo.position,type:"add",};this.setAutoClick(targetInfo,operation.node);return this.viewEditorModel.doOperation(operation);}
if(structure==="filter"){const filterData=await new Promise((resolve)=>{this.addDialog(FieldConfigurationDialog,{title:_t("New Filter"),size:"md",confirm:(data)=>resolve(data),cancel:()=>resolve(false),Component:FilterConfiguration,componentProps:{resModel:this.viewEditorModel.resModel},});});if(!filterData){return;}
const node={tag:"filter",attrs:{domain:filterData.domain,name:randomName("studio_filter"),string:filterData.filterLabel,},};const operation={node,target:this.viewEditorModel.getFullTarget(targetInfo.xpath),position:targetInfo.position,type:"add",};this.setAutoClick(targetInfo,operation.node);return this.viewEditorModel.doOperation(operation);}
if(this.viewEditorModel.viewType==="search"&&structure==="field"&&["groupBy","filter"].includes(targetInfo.type)){const fieldName=JSON.parse(droppedData).fieldName;const fieldGet=this.viewEditorModel.fields[fieldName];const willBeGroupBy=targetInfo.type==="groupBy";const node={tag:"filter",attrs:{name:randomName(`studio_${willBeGroupBy ? "group" : "filter"}_by`),string:fieldGet.string,},};if(willBeGroupBy){node.attrs.context=`{'group_by': '${fieldName}'}`;if(targetInfo.infos&&JSON.parse(targetInfo.infos).create_group){node.attrs.create_group=true;}}else{node.attrs.date=fieldName;}
const operation={node,target:this.viewEditorModel.getFullTarget(targetInfo.xpath),position:targetInfo.position,type:"add",};this.setAutoClick(targetInfo,operation.node);return this.viewEditorModel.doOperation(operation);}}
async getNewFieldNode(data){const string=_t("New %s",data.string);const newNode={field_description:{field_description:string,name:randomName(`x_studio_${data.fieldType}_field`),type:data.fieldType,model_name:this.viewEditorModel.resModel,special:data.special,},tag:"field",attrs:{widget:data.widget},};if(data.special==="lines"){return newNode;}
const fieldType=data.fieldType;if(fieldType==="selection"&&data.widget==="priority"){newNode.field_description.selection=[["0","Normal"],["1","Low"],["2","High"],["3","Very High"],];return newNode;}
if(["selection","one2many","many2one","many2many","related"].includes(fieldType)){if(fieldType==="one2many"){const count=await this.orm.searchCount("ir.model.fields",[["relation","=",this.viewEditorModel.resModel],["ttype","=","many2one"],["store","=",true],]);if(!count){this.addDialog(ConfirmationDialog,{title:_t("No related many2one fields found"),body:NO_M2O_AVAILABLE,confirm:async()=>{},});return;}}
const fieldParams=await this.openFieldConfiguration(fieldType);if(!fieldParams){return;}
if(fieldType==="selection"){newNode.field_description.selection=fieldParams.selection;}
if(fieldType==="one2many"){newNode.field_description.relation_field_id=fieldParams.relationId;}
if(fieldType==="many2many"||fieldType==="many2one"){newNode.field_description.relation_id=fieldParams.relationId;}
if(fieldType==="related"){Object.assign(newNode.field_description,fieldParams.relatedParams);if(!newNode.field_description.related){delete newNode.field_description.related;}}}
if(fieldType==="monetary"){this.setCurrencyInfos(newNode.field_description);}
if(fieldType==="integer"){newNode.field_description.default_value="0";}
return newNode;}
openFieldConfiguration(fieldType){let dialogProps;if(fieldType==="selection"){dialogProps={Component:SelectionValuesEditor,isDialog:true,};}else if(["one2many","many2many","many2one"].includes(fieldType)){dialogProps={Component:RelationalFieldConfigurator,componentProps:{fieldType,resModel:this.viewEditorModel.resModel},};}else if(fieldType==="related"){dialogProps={Component:RelatedChainBuilder,componentProps:{resModel:this.viewEditorModel.resModel,shouldOpenCurrencyDialog:!this.hasCurrencyField(),},};}
const fieldParams=new Promise((resolve,reject)=>{this.addDialog(FieldConfigurationDialog,{fieldType,confirm:async(params)=>{resolve(params);},cancel:()=>resolve(false),...dialogProps,});});return fieldParams;}
moveStructure(structure,droppedData,targetInfo){if(structure!=="field"){throw Error("Moving anything else than a field is not supported");}
if(isToXpathEquivalentFromXpath(targetInfo.position,targetInfo.xpath,droppedData.studioXpath)){return;}
const operation={type:"move",node:this.viewEditorModel.getFullTarget(droppedData.studioXpath),target:this.viewEditorModel.getFullTarget(targetInfo.xpath),position:targetInfo.position,};const subViewXpath=this.viewEditorModel.getSubviewXpath();if(subViewXpath){operation.node.subview_xpath=subViewXpath;}
if(this.viewEditorModel.activeNodeXpath===droppedData.studioXpath){this.setAutoClick(targetInfo,operation.node);}
this.viewEditorModel.doOperation(operation);}
hasCurrencyField(){return getCurrencyField(this.viewEditorModel.fields);}
setCurrencyInfos(object){const currencyField=getCurrencyField(this.viewEditorModel.fields);if(currencyField){object.currency_field=currencyField;object.currency_in_view=this.viewEditorModel.fieldsInArch.includes(currencyField);}}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/interactive_editor_sidebar.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/interactive_editor_sidebar',['@web/core/l10n/translation','@odoo/owl','@web/core/notebook/notebook','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{onWillStart,useState,onWillUpdateProps,Component}=require("@odoo/owl");const{Notebook}=require("@web/core/notebook/notebook");const{useBus}=require("@web/core/utils/hooks");const tabsDisplay={new:{class:"o_web_studio_new px-2",title:_t("Add"),},view:{class:"o_web_studio_view px-2",title:_t("View"),},properties:{class:"o_web_studio_properties px-2",title:_t("Properties"),},};const InteractiveEditorSidebar=__exports.InteractiveEditorSidebar=class InteractiveEditorSidebar extends Component{static components={Notebook};static template="web_studio.ViewEditor.InteractiveEditorSidebar";static props={slots:{type:Object},};setup(){this.editorModel=useState(this.env.viewEditorModel);this.tabsDisplay=tabsDisplay;useBus(this.editorModel.bus,"error",()=>this.render(true));this._defaultTab=this.computeDefaultTab(this.props);this.editorModel.sidebarTab=this._defaultTab;onWillStart(()=>{this.editorModel.resetSidebar();});onWillUpdateProps(()=>{const editorModel=this.editorModel;if(editorModel.sidebarTab==="properties"&&!editorModel.activeNode){editorModel.resetSidebar();}});}
get icons(){return{new:"fa-plus",view:"fa-television",properties:"fa-server",};}
computeDefaultTab(props){const slots=props.slots;const defaults=Object.keys(slots).filter((s)=>slots[s].isDefault);if(defaults.length){return defaults[0];}
return"new"in slots?"new":"view";}
get defaultTab(){return this.editorModel.sidebarTab||this._defaultTab;}
onTabClicked(tab){if(tab!=="properties"){this.editorModel.resetSidebar(tab);}
this.editorModel.sidebarTab=tab;}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/properties/field_properties/field_properties.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_properties',['@odoo/owl','@web/core/l10n/translation','@web/core/confirmation_dialog/confirmation_dialog','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog','@web/core/utils/hooks','@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility','@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/type_widget_properties','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox','@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties','@web_studio/client_action/view_editor/view_editor_model'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps,useState,toRaw}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{SelectionContentDialog}=require("@web_studio/client_action/view_editor/interactive_editor/field_configuration/selection_content_dialog");const{useService}=require("@web/core/utils/hooks");const{LimitGroupVisibility}=require("@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility");const{TypeWidgetProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/type_widget_properties");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");const{ModifiersProperties}=require("@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");class TechnicalName extends Component{static props={node:{type:Object},};static template="web_studio.ViewEditor.InteractiveEditorProperties.Field.TechnicalName";static components={Property};setup(){this.renameField=(value)=>{return this.env.viewEditorModel.renameField(this.props.node.attrs.name,`x_studio_${value}`,false);};}
get canEdit(){return(this.env.debug&&this.env.viewEditorModel.isFieldRenameable(this.props.node.attrs.name));}
get fieldName(){const fName=this.props.node.attrs.name;if(this.canEdit){return fName.split("x_studio_")[1];}
return fName;}}
const FieldProperties=__exports.FieldProperties=class FieldProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Field";static props={node:{type:Object},availableOptions:{type:Array,optional:true},};static components={LimitGroupVisibility,Property,TechnicalName,TypeWidgetProperties,SidebarPropertiesToolbox,ModifiersProperties,};setup(){this.dialog=useService("dialog");this.rpc=useService("rpc");this.state=useState({});this.editNodeAttributes=useEditNodeAttributes();onWillStart(async()=>{if(this.canShowDefaultValue){this.state.defaultValue=await this.getDefaultValue(this.props.node);}});onWillUpdateProps(async(nextProps)=>{if(this._canShowDefaultValue(nextProps.node)){this.state.defaultValue=await this.getDefaultValue(nextProps.node);}});}
get viewEditorModel(){return this.env.viewEditorModel;}
async onChangeFieldString(value){const operation={new_attrs:{string:value},type:"attributes",position:"attributes",target:this.viewEditorModel.getFullTarget(this.viewEditorModel.activeNodeXpath),};operation.node=operation.target;if(this.viewEditorModel.isFieldRenameable(this.props.node.field.name)&&value){await this.viewEditorModel.doOperation(operation,false);return this.viewEditorModel.renameField(this.props.node.attrs.name,value);}else{return this.viewEditorModel.doOperation(operation);}}
onChangeAttribute(value,name){return this.editNodeAttributes({[name]:value});}
onChangeDefaultValue(value){this.rpc("/web_studio/set_default_value",{model_name:this.env.viewEditorModel.resModel,field_name:this.props.node.field.name,value,});}
async getDefaultValue(node){const defaultValueObj=await this.rpc("/web_studio/get_default_value",{model_name:this.env.viewEditorModel.resModel,field_name:node.field.name,});return defaultValueObj.default_value;}
get optionalVisibilityChoices(){return{choices:[{label:_t("Show by default"),value:"show"},{label:_t("Hide by default"),value:"hide"},],};}
get defaultValuesInputType(){const node=this.props.node;return node.attrs?.widget==="statusbar"?"selection":node.attrs.widget||node.field.type;}
get defaultValuesChoices(){if(this.props.node.field.selection){return{choices:this.props.node.field.selection.map(([value,label])=>{return{label,value,};}),};}
return undefined;}
_canShowDefaultValue(node){return!["image","many2many","many2one","binary"].includes(node.field.type);}
get canShowDefaultValue(){return this._canShowDefaultValue(this.props.node);}
get canEditSelectionChoices(){return this.props.node.field.manual&&this.props.node.field.type==="selection";}
isAttributeSupported(name){return this.props.availableOptions?.includes(name);}
editSelectionChoices(){const field=this.props.node.field;this.dialog.add(SelectionContentDialog,{defaultChoices:toRaw(field).selection.map((s)=>[...s]),onConfirm:async(choices)=>{const result=await this.rpc("/web_studio/edit_field",{model_name:this.env.viewEditorModel.resModel,field_name:field.name,values:{selection:JSON.stringify(choices)},force_edit:false,});let reflectChanges=!result;if(result&&result.records_linked){reflectChanges=false;await new Promise((resolve)=>{this.dialog.add(ConfirmationDialog,{body:result.message||_t("Are you sure you want to remove the selection values?"),confirm:async()=>{await this.rpc("/web_studio/edit_field",{model_name:this.env.viewEditorModel.resModel,field_name:field.name,values:{selection:JSON.stringify(choices)},force_edit:true,});reflectChanges=true;resolve();},cancel:()=>resolve(),});});}
if(reflectChanges){field.selection=choices;}},});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/properties/field_properties/field_type_properties.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_type_properties',['@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const EDITABLE_ATTRIBUTES=__exports.EDITABLE_ATTRIBUTES={context:{name:"context",label:_t("Context"),type:"string",},domain:{name:"domain",label:_t("Domain"),type:"domain",getValue({attrs,field}){return{domain:attrs.domain,relation:field.relation,};},},aggregate:{name:"aggregate",label:_t("Aggregate"),type:"selection",choices:[{value:"sum",label:_t("Sum")},{value:"avg",label:_t("Average")},{value:"none",label:_t("No aggregation")},],getValue({attrs}){return attrs.sum?"sum":attrs.avg?"avg":"none";},},placeholder:{name:"placeholder",label:_t("Placeholder"),type:"string",},};const FIELD_TYPE_ATTRIBUTES=__exports.FIELD_TYPE_ATTRIBUTES={char:{common:[EDITABLE_ATTRIBUTES.placeholder],},date:{common:[EDITABLE_ATTRIBUTES.placeholder],},datetime:{common:[EDITABLE_ATTRIBUTES.placeholder],},float:{common:[EDITABLE_ATTRIBUTES.placeholder],list:[EDITABLE_ATTRIBUTES.aggregate],},html:{common:[EDITABLE_ATTRIBUTES.placeholder],},integer:{common:[EDITABLE_ATTRIBUTES.placeholder],list:[EDITABLE_ATTRIBUTES.aggregate],},many2many:{common:[EDITABLE_ATTRIBUTES.domain,EDITABLE_ATTRIBUTES.context],},many2one:{common:[EDITABLE_ATTRIBUTES.domain,EDITABLE_ATTRIBUTES.context,EDITABLE_ATTRIBUTES.placeholder,],},monetary:{common:[EDITABLE_ATTRIBUTES.placeholder],list:[EDITABLE_ATTRIBUTES.aggregate],},selection:{common:[EDITABLE_ATTRIBUTES.placeholder],},};const COMPUTED_DISPLAY_OPTIONS=__exports.COMPUTED_DISPLAY_OPTIONS={collaborative_trigger:{superOption:"collaborative",getInvisible:(value)=>!value,},no_quick_create:{superOption:"no_create",getValue:(value)=>value,getReadonly:(value)=>value,},no_create_edit:{superOption:"no_create",getValue:(value)=>value,getReadonly:(value)=>value,},decimals:{superOption:"human_readable",getInvisible:(value)=>!value,},zoom_delay:{superOption:"zoom",getInvisible:(value)=>!value,},dynamic_placeholder_model_reference_field:{superOption:"dynamic_placeholder",getInvisible:(value)=>!value,},edit_max_value:{superOption:"editable",getInvisible:(value)=>!value,},no_edit_color:{superOption:"color_field",getInvisible:(value)=>!value,},};return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/properties/field_properties/type_widget_properties.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/type_widget_properties',['@odoo/owl','@web/core/registry','@web_studio/client_action/view_editor/property/property','@web_studio/client_action/view_editor/editors/utils','@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_type_properties','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,onWillUpdateProps,useState}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{Property}=require("@web_studio/client_action/view_editor/property/property");const{getWowlFieldWidgets}=require("@web_studio/client_action/view_editor/editors/utils");const{EDITABLE_ATTRIBUTES,FIELD_TYPE_ATTRIBUTES,COMPUTED_DISPLAY_OPTIONS,}=require("@web_studio/client_action/view_editor/interactive_editor/properties/field_properties/field_type_properties");const{useService}=require("@web/core/utils/hooks");const TypeWidgetProperties=__exports.TypeWidgetProperties=class TypeWidgetProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Field.TypeWidgetProperties";static components={Property};static props={node:{type:Object},onChangeAttribute:{type:Function},};setup(){this.rpc=useService("rpc");this.attributes=useState({field:[],selection:[],boolean:[],domain:[],number:[],string:[],});this.attributesForCurrentTypeAndWidget=this.getAttributesForCurrentTypeAndWidget(this.props);this.groupAttributesPerType(this.props);onWillUpdateProps((nextProps)=>{this.attributesForCurrentTypeAndWidget=this.getAttributesForCurrentTypeAndWidget(nextProps);this.groupAttributesPerType(nextProps);});}
groupAttributesPerType(props){this.attributes.field=this.getAttributesOfTypeField(props);this.attributes.selection=this.getWidgetAttributes("selection",props);this.attributes.boolean=this.getWidgetAttributes("boolean",props);this.attributes.domain=this.getWidgetAttributes("domain",props);this.attributes.number=this.getWidgetAttributes("number",props);this.attributes.string=this.getWidgetAttributes("string",props);}
getAttributesOfTypeField(props){const fieldAttributes=this.getWidgetAttributes("field",props);if(fieldAttributes.length){const fields=Object.entries(this.env.viewEditorModel.fields).map(([key,value])=>{return{...value,name:value.name||key,};});fieldAttributes.forEach((attribute)=>{attribute.choices=this.getFieldChoices(attribute,fields);});return fieldAttributes;}
return[];}
getSupportedOptions(props){const widgetName=props.node.attrs?.widget||props.node.field.type;const fieldRegistry=registry.category("fields").content;const widgetDescription=fieldRegistry[this.env.viewEditorModel.viewType+"."+widgetName]||fieldRegistry[widgetName];return(widgetDescription?.[1].supportedOptions?.filter((o)=>!o.viewTypes||o.viewTypes.includes(this.env.viewEditorModel.viewType))||[]);}
get widgetChoices(){const widgets=getWowlFieldWidgets(this.props.node.field.type,this.props.node.attrs.widget,[],this.env.debug);return{choices:widgets.map(([value,label])=>{label=label?label:"";return{label:`${label} (${value})`.trim(),value,};}),};}
_getAttributesForCurrentTypeAndWidget(props){const fieldType=props.node.field.type;const{viewType}=this.env.viewEditorModel;const fieldCommonViewsProperties=FIELD_TYPE_ATTRIBUTES[fieldType]?.common||[];const fieldSpecificViewProperties=FIELD_TYPE_ATTRIBUTES[fieldType]?.[viewType]||[];return[...fieldCommonViewsProperties,...fieldSpecificViewProperties,...this.getSupportedOptions(props),];}
getAttributesForCurrentTypeAndWidget(props){const _attributesForCurrentTypeAndWidget=this._getAttributesForCurrentTypeAndWidget(props);_attributesForCurrentTypeAndWidget.forEach((property)=>{if(COMPUTED_DISPLAY_OPTIONS[property.name]){const dependentOption=COMPUTED_DISPLAY_OPTIONS[property.name];const superOption=_attributesForCurrentTypeAndWidget.find((o)=>o.name===dependentOption.superOption);property.isSubOption=true;if(!superOption.subOptions){superOption.subOptions=[];}
if(superOption.subOptions.find((o)=>o.name===property.name)===undefined){superOption.subOptions.push(property);}}});return _attributesForCurrentTypeAndWidget;}
getWidgetAttributes(type,props){return this.attributesForCurrentTypeAndWidget.filter((attribute)=>attribute.type===type).map((attribute)=>{if(EDITABLE_ATTRIBUTES[attribute.name]){return this.getPropertyFromAttributes(attribute,props);}
return this.getPropertyFromOptions(attribute,props);}).filter((attribute)=>attribute!==undefined);}
getFieldChoices(attribute,fields){if(attribute.availableTypes){let availableFields=fields.filter((f)=>attribute.availableTypes.includes(f.type)&&f.name!==this.env.viewEditorModel.activeNode.attrs.name);if(attribute.name==="currency_field"){availableFields=availableFields.filter((f)=>f.relation==="res.currency");}
return availableFields.map((f)=>{return{label:this.env.debug?`${f.string} (${f.name})`:f.string,value:f.name,};});}
return fields;}
getPropertyFromAttributes(property,props){let value;value=props.node.attrs[property.name];if(property.getValue){const attrs=props.node.attrs||{};const field=props.node.field||{};value=property.getValue({attrs,field});}
if(value===undefined&&property.default){value=property.default;}
return{...property,value,};}
getPropertyFromOptions(property,props){let value;if(COMPUTED_DISPLAY_OPTIONS[property.name]){const dependentOption=COMPUTED_DISPLAY_OPTIONS[property.name];const superOption=this.attributesForCurrentTypeAndWidget.find((o)=>o.name===dependentOption.superOption);const superValue=this.getPropertyFromOptions(superOption,props).value;if(dependentOption.getReadonly){property.isReadonly=dependentOption.getReadonly(superValue);}
if(dependentOption.getValue){property.value=dependentOption.getValue(superValue);if(property.isReadonly){return property;}}
if(dependentOption.getInvisible){property.isInvisible=dependentOption.getInvisible(superValue);}}
value=props.node.attrs.options?.[property.name];if(property.type==="string"){value=JSON.stringify(value);}
if(value===undefined&&property.default){value=property.default;}
if(property.name==="currency_field"&&!value){value=props.node.field.currency_field;}
return{...property,value,};}
getSelectValue(value){return typeof value==="object"?JSON.stringify(value):value;}
async onChangeCurrency(value){const proms=[];proms.push(this.rpc("/web_studio/set_currency",{model_name:this.env.viewEditorModel.resModel,field_name:this.props.node.field.name,value,}));this.env.viewEditorModel.fields[this.props.node.field.name]["currency_field"]=value;if(this.env.viewEditorModel.fieldsInArch.includes(value)){await Promise.all(proms).then((results)=>{if(results[0]===true){this.env.viewEditorModel.fields[this.props.node.field.name]["currency_field"]=value;}});this.attributes.field=this.attributes.field.map((e)=>{if(e.name==="currency_field"){e.value=value;}
return e;});return;}
const currencyNode={tag:"field",attrs:{name:value},};const operation={node:currencyNode,target:this.env.viewEditorModel.getFullTarget(this.env.viewEditorModel.activeNodeXpath),position:"after",type:"add",};proms.push(this.env.viewEditorModel.doOperation(operation));await Promise.all(proms).then((results)=>{if(results[0]===true){this.env.viewEditorModel.fields[this.props.node.field.name]["currency_field"]=value;}});}
onChangeWidget(value){return this.props.onChangeAttribute(value,"widget");}
async onChangeProperty(value,name){const currentProperty=this.attributesForCurrentTypeAndWidget.find((e)=>e.name===name);if(name==="currency_field"&&this.props.node.field.type==="monetary"){await this.onChangeCurrency(value);if(!this.props.node.attrs.options?.[name]){return;}
value="";}
if(EDITABLE_ATTRIBUTES[name]){return this.props.onChangeAttribute(value,name);}
const options={...this.props.node.attrs.options};if(value||currentProperty.type==="boolean"){if(["[","{"].includes(value[0])||!isNaN(value)){options[name]=JSON.parse(value);}else if(currentProperty.type==="number"){options[name]=Number(value);}else{options[name]=value;}}else{delete options[name];}
this.props.onChangeAttribute(JSON.stringify(options),"options");}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/properties/limit_group_visibility/limit_group_visibility',['@odoo/owl','@web/model/record','@web_studio/client_action/view_editor/view_editor_model','@web/core/record_selectors/multi_record_selector'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Record}=require("@web/model/record");const{useEditNodeAttributes}=require("@web_studio/client_action/view_editor/view_editor_model");const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");const LimitGroupVisibility=__exports.LimitGroupVisibility=class LimitGroupVisibility extends Component{static template="web_studio.ViewEditor.LimitGroupVisibility";static components={Record,MultiRecordSelector,};static props={node:{type:Object},};setup(){this.editNodeAttributes=useEditNodeAttributes();}
onChangeAttribute(value,name){return this.editNodeAttributes({[name]:value});}
get multiRecordSelectorProps(){const resIds=JSON.parse(this.props.node.attrs.studio_groups||"[]").map((group)=>group.id);return{resModel:"res.groups",resIds,update:(resIds)=>{this.onChangeAttribute(resIds,"groups");},};}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/properties/modifiers/modifiers_properties',['@odoo/owl','@web/core/checkbox/checkbox','@web/core/utils/hooks','@web/core/expression_editor_dialog/expression_editor_dialog'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const{useOwnedDialogs}=require("@web/core/utils/hooks");const{ExpressionEditorDialog}=require("@web/core/expression_editor_dialog/expression_editor_dialog");const ModifiersProperties=__exports.ModifiersProperties=class ModifiersProperties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties.Modifiers";static components={CheckBox};static props={node:{type:Object},availableOptions:{type:Array},};setup(){this.addDialog=useOwnedDialogs();}
isAttributeSupported(name){return this.props.availableOptions?.includes(name);}
onChangeModifier(name,value){const isTypeBoolean=typeof value==="boolean";const encodesBoolean=isTypeBoolean||this.isBooleanExpression(value);const isTruthy=encodesBoolean?this.isBoolTrue(value):!!value;const newAttrs={};const oldAttrs={...this.props.node.attrs};const changingInvisible=name==="invisible";const isInList=this.env.viewEditorModel.viewType==="list";if(encodesBoolean){if(changingInvisible&&isInList){if(isTruthy){newAttrs["column_invisible"]="True";}else{newAttrs["column_invisible"]="False";newAttrs["invisible"]="False";}}else{newAttrs[name]=isTruthy?"True":"False";}}else{newAttrs[name]=value;if(changingInvisible&&isInList&&"column_invisible"in oldAttrs){newAttrs["column_invisible"]="False";}}
if(this.env.viewEditorModel.viewType==="form"&&name==="readonly"){newAttrs.force_save=isTruthy?"1":"0";}
const operation={new_attrs:newAttrs,type:"attributes",position:"attributes",target:this.env.viewEditorModel.getFullTarget(this.env.viewEditorModel.activeNodeXpath),};this.env.viewEditorModel.doOperation(operation);}
getCheckboxClassName(value){if(value&&!this.isBooleanExpression(value)){return"o_web_studio_checkbox_indeterminate";}}
isBooleanExpression(expression){return["1","0","True","true","False","false"].includes(expression);}
isBoolTrue(value){if(typeof value==="boolean"){return value;}
return["1","True","true"].includes(value);}
valueAsBoolean(expression){if(!expression){return false;}
if(this.isBooleanExpression(expression)){return this.isBoolTrue(expression);}
return true;}
onConditionalButtonClicked(name,value){if(typeof value!=="string"||value===""){value="False";}
const{fields,resModel,fieldsInArch}=this.env.viewEditorModel;this.addDialog(ExpressionEditorDialog,{resModel,fields:Object.fromEntries(["id",...fieldsInArch].map((name)=>[name,fields[name]])),expression:value,onConfirm:(expression)=>this.onChangeModifier(name,expression),});}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/properties/properties.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/properties/properties',['@odoo/owl','@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox'],function(require){'use strict';let __exports={};const{Component,useState,xml}=require("@odoo/owl");const{SidebarPropertiesToolbox}=require("@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox");class DefaultProperties extends Component{static props={node:{type:Object},};static template=xml`
        <SidebarPropertiesToolbox/>
    `;static components={SidebarPropertiesToolbox};}
const Properties=__exports.Properties=class Properties extends Component{static template="web_studio.ViewEditor.InteractiveEditorProperties";static props={propertiesComponents:{type:Object},};static components={DefaultProperties};setup(){this.viewEditorModel=useState(this.env.viewEditorModel);}
get node(){return this.viewEditorModel.activeNode;}
get propertiesComponent(){return this.props.propertiesComponents[this.nodeType]||{};}
get nodeType(){return this.node?.arch.tagName;}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/properties/sidebar_properties_toolbox/sidebar_properties_toolbox',['@odoo/owl','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const SidebarPropertiesToolbox=__exports.SidebarPropertiesToolbox=class SidebarPropertiesToolbox extends Component{static props={};static template="web_studio.ViewEditor.InteractiveEditorProperties.Toolbox";setup(){this.orm=useService("orm");this.action=useService("action");this.dialog=useService("dialog");}
get node(){return this.env.viewEditorModel.activeNode;}
get nodeType(){return this.node.arch.tagName;}
onRemoveFromView(){let nodeHumanName=this.nodeType;if(this.nodeType==="t"&&this.node.attrs["t-name"]==="kanban-menu"){nodeHumanName=_t("dropdown");}
this.dialog.add(ConfirmationDialog,{body:_t("Are you sure you want to remove this %s from the view?",nodeHumanName),confirm:()=>{return this.removeNodeFromArch();},cancel:()=>{},});}
async openFormAction(){const resId=await this.orm.searchRead("ir.model.fields",[["model","=",this.env.viewEditorModel.resModel],["name","=",this.node.field.name],],["id"]);return this.action.doAction({type:"ir.actions.act_window",res_model:"ir.model.fields",res_id:resId[0].id,views:[[false,"form"]],target:"current",},{clearBreadcrumbs:true});}
removeNodeFromArch(xpath){const target=this.env.viewEditorModel.getFullTarget(xpath||this.node.xpath);const operation={type:"remove",target,};this.env.viewEditorModel.resetSidebar();return this.env.viewEditorModel.doOperation(operation);}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox.js */
odoo.define('@web_studio/client_action/view_editor/interactive_editor/sidebar_view_toolbox/sidebar_view_toolbox',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const SidebarViewToolbox=__exports.SidebarViewToolbox=class SidebarViewToolbox extends Component{static template="web_studio.ViewEditor.ViewToolbox";static props={canEditXml:{type:Boolean,optional:true},onMore:{type:Function,optional:true},openDefaultValues:{type:Function,optional:true},canEditDefaultValues:{type:Boolean,optional:true},};}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/operations_utils.js */
odoo.define('@web_studio/client_action/view_editor/operations_utils',[],function(require){'use strict';let __exports={};__exports.viewGroupByOperation=viewGroupByOperation;function viewGroupByOperation(viewType,type,newValue,oldValue=undefined){const operation_type=newValue?"add":"remove";const operation={target:{view_type:viewType,field_names:[operation_type==="add"?newValue:oldValue],operation_type,field_type:type,},type:"graph_pivot_groupbys_fields",};if(oldValue&&newValue){operation.target.operation_type="replace";operation.target.old_field_names=oldValue;}
return operation;}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/property/property.js */
odoo.define('@web_studio/client_action/view_editor/property/property',['@odoo/owl','@web/core/checkbox/checkbox','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/select_menu/select_menu','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{SelectMenu}=require("@web/core/select_menu/select_menu");const{useService}=require("@web/core/utils/hooks");const Property=__exports.Property=class Property extends Component{static template="web_studio.Property";static components={CheckBox,SelectMenu,DomainSelectorDialog};static defaultProps={childProps:{},class:"",};static props={name:{type:String},type:{type:String},value:{optional:true},onChange:{type:Function,optional:true},childProps:{type:Object,optional:true},class:{type:String,optional:true},isReadonly:{type:Boolean,optional:true},slots:{type:Object,optional:true,},tooltip:{type:String,optional:true},};setup(){this.dialog=useService("dialog");}
get className(){const propsClass=this.props.class?this.props.class:"";return`o_web_studio_property_${this.props.name} ${propsClass}`;}
onDomainClicked(){this.dialog.add(DomainSelectorDialog,{resModel:this.props.childProps.relation,domain:this.props.value||"[]",isDebugMode:!!this.env.debug,onConfirm:(domain)=>this.props.onChange(domain,this.props.name),});}
onViewOptionChange(value){this.props.onChange(value,this.props.name);}}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/studio_view.js */
odoo.define('@web_studio/client_action/view_editor/studio_view',['@web/search/with_search/with_search','@web_studio/client_action/view_editor/editors/utils','@odoo/owl','@web/core/utils/hooks','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{WithSearch}=require("@web/search/with_search/with_search");const{cleanClickedElements}=require("@web_studio/client_action/view_editor/editors/utils");const{Component,onError,onMounted,toRaw,useRef,xml,useSubEnv,useEffect}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const HEIGHT="height: 100%;";const StudioView=__exports.StudioView=class StudioView extends Component{static props={autoClick:{type:Function,optional:true},"*":true};setup(){this.notification=useService("notification");this.style=this.props.setOverlay?`pointer-events: none; ${HEIGHT}`:HEIGHT;this.withSearchProps={resModel:this.props.resModel,SearchModel:this.props.SearchModel,context:this.props.context,domain:this.props.domain,globalState:this.props.globalState,searchViewArch:this.props.searchViewArch,searchViewFields:this.props.searchViewFields,irFilters:this.props.searchViewIrFilters,display:this.props.display,};this.viewEditorModel=this.env.viewEditorModel;this.viewRenderer=useRef("viewRenderer");this.controllerProps={...this.viewEditorModel.controllerProps};useEffect((xpath)=>{if(xpath){this.updateActiveNode({xpath,resetSidebarOnNotFound:true});}},()=>[this.viewEditorModel.activeNodeXpath]);const rawModel=toRaw(this.viewEditorModel);useEffect(()=>{rawModel.isInEdition=false;},()=>[rawModel.isInEdition]);onError((error)=>{if(rawModel.isInEdition){this.notification.add(_t("The requested change caused an error in the view. It could be because a field was deleted, but still used somewhere else."),{type:"danger",title:_t("Error"),});this.viewEditorModel.resetSidebar("view");this.viewEditorModel._operations.undo(false);}else{throw error;}});const config={...this.env.config,onNodeClicked:(xpath)=>{if(this.updateActiveNode({xpath})){this.viewEditorModel.activeNodeXpath=xpath;}},};if(this.props.autoClick){onMounted(()=>this.props.autoClick());}
useSubEnv({config,__beforeLeave__:null,__getGlobalState__:null,__getLocalState__:null,__getContext__:null,__getOrderBy__:null,});}
updateActiveNode({xpath,resetSidebarOnNotFound=false}){const vem=this.env.viewEditorModel;cleanClickedElements(this.viewRenderer.el);const el=this.viewRenderer.el.querySelector(`[data-studio-xpath="${xpath}"], [studioxpath="${xpath}"]`);if(!el){if(resetSidebarOnNotFound){vem.resetSidebar();}
return false;}
if(vem.editorInfo.editor.styleClickedElement){vem.editorInfo.editor.styleClickedElement(this.viewRenderer,{xpath});return true;}
const clickable=el.closest(".o-web-studio-editor--element-clickable");if(clickable){clickable.classList.add("o-web-studio-editor--element-clicked");}
return true;}}
StudioView.components={WithSearch};StudioView.template=xml`
    <div t-att-style="style" class="w-100" t-ref="viewRenderer">
        <WithSearch t-props="withSearchProps" t-slot-scope="search">
            <t t-component="viewEditorModel.editorInfo.editor.Controller" t-props="Object.assign(controllerProps, search)" />
        </WithSearch>
    </div>
`;return __exports;});;

/* /web_studio/static/src/client_action/view_editor/view_editor.js */
odoo.define('@web_studio/client_action/view_editor/view_editor',['@odoo/owl','@web/core/utils/hooks','@web/core/registry','@web_studio/client_action/view_editor/studio_view','@web_studio/client_action/view_editor/interactive_editor/interactive_editor','@web_studio/client_action/view_editor/view_editor_hook','@web/webclient/actions/action_service','@web/views/view','@web_studio/client_action/xml_resource_editor/xml_resource_editor'],function(require){'use strict';let __exports={};const{Component,onWillUpdateProps,useState,useSubEnv,useRef}=require("@odoo/owl");const{useBus,useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{StudioView}=require("@web_studio/client_action/view_editor/studio_view");const{InteractiveEditor}=require("@web_studio/client_action/view_editor/interactive_editor/interactive_editor");const{useViewEditorModel}=require("@web_studio/client_action/view_editor/view_editor_hook");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{getDefaultConfig}=require("@web/views/view");const{XmlResourceEditor}=require("@web_studio/client_action/xml_resource_editor/xml_resource_editor");class ViewXmlEditor extends XmlResourceEditor{static props={...XmlResourceEditor.props,studioViewArch:{type:String}};setup(){super.setup();this.viewEditorModel=this.env.viewEditorModel;useBus(this.viewEditorModel.bus,"error",()=>this.render(true));this.studioViewState=useState({arch:this.props.studioViewArch});onWillUpdateProps((nextProps)=>{if(nextProps.studioViewArch!==this.props.studioViewArch){const studioResource=this.getStudioResource(this.state.resourcesOptions);if(studioResource){studioResource.value.arch=nextProps.studioViewArch;}}});}
getStudioResource(resourcesOptions){return resourcesOptions.find((opt)=>opt.value.id===this.viewEditorModel.studioViewId);}}
const ViewEditor=__exports.ViewEditor=class ViewEditor extends Component{static props={...standardActionServiceProps};static components={StudioView,InteractiveEditor,ViewXmlEditor};static template="web_studio.ViewEditor";setup(){this.studio=useService("studio");this.user=useService("user");this.rpc=useService("rpc");this.orm=useService("orm");useSubEnv({config:getDefaultConfig()});this.rootRef=useRef("root");this.rendererRef=useRef("viewRenderer");this.viewEditorModel=useViewEditorModel(this.rendererRef);}
get interactiveEditorKey(){const{viewType,breadcrumbs}=this.viewEditorModel;let key=viewType;if(breadcrumbs.length>1){key+=`_${breadcrumbs.length}`;}
return key;}
onSaveXml({resourceId,oldCode,newCode}){this.viewEditorModel.doOperation({type:"replace_arch",viewId:resourceId,oldArch:oldCode,newArch:newCode,});}
onXmlEditorClose(){this.viewEditorModel.switchMode();}}
registry.category("actions").add("web_studio.view_editor",ViewEditor);return __exports;});;

/* /web_studio/static/src/client_action/view_editor/view_editor_hook.js */
odoo.define('@web_studio/client_action/view_editor/view_editor_hook',['@odoo/owl','@web/core/utils/hooks','@web_studio/studio_service','@web_studio/client_action/editor/edition_flow','@web_studio/client_action/view_editor/view_editor_model','@web_studio/client_action/view_editor/view_editor_snackbar'],function(require){'use strict';let __exports={};const{onWillDestroy,onWillStart,status,useComponent,useEnv,useState,useSubEnv,}=require("@odoo/owl");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{viewTypeToString}=require("@web_studio/studio_service");const{useEditorBreadcrumbs,useEditorMenuItem,}=require("@web_studio/client_action/editor/edition_flow");const{ViewEditorModel}=require("@web_studio/client_action/view_editor/view_editor_model");const{ViewEditorSnackbar}=require("@web_studio/client_action/view_editor/view_editor_snackbar");__exports.useViewEditorModel=useViewEditorModel;function useViewEditorModel(viewRef){const env=useEnv();const services=Object.fromEntries(["user","rpc","orm","ui","notification"].map((sName)=>{return[sName,useService(sName)];}));services.studio={...env.services.studio};services.dialog={add:useOwnedDialogs()};const editionFlow=useState(env.editionFlow);useEditorBreadcrumbs({name:viewTypeToString(services.studio.editedViewType)});const viewEditorModel=new ViewEditorModel({env,services,editionFlow,viewRef,});useSubEnv({viewEditorModel});const{_snackBar,_operations}=viewEditorModel;useEditorMenuItem({component:ViewEditorSnackbar,props:{operations:_operations,saveIndicator:_snackBar},});const component=useComponent();onWillStart(async()=>{return new Promise((resolve,reject)=>{viewEditorModel.load().then(resolve).catch((error)=>{if(status(component)!=="destroyed"){reject(error);}});});});onWillDestroy(()=>{viewEditorModel.isInEdition=false;});return useState(viewEditorModel);}
__exports.useSnackbarWrapper=useSnackbarWrapper;function useSnackbarWrapper(fn){const env=useEnv();return env.viewEditorModel._decorateFunction(fn);}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/view_editor_model.js */
odoo.define('@web_studio/client_action/view_editor/view_editor_model',['@web/core/registry','@web/search/search_model','@web_studio/client_action/view_editor/editors/xml_utils','@odoo/owl','@web/core/utils/strings','@web/core/utils/xml','@web_studio/studio_service','@web_studio/client_action/view_editor/editors/utils','@web_studio/client_action/utils','@web/views/view_compiler','@web/core/l10n/translation','@web_studio/client_action/editor/edition_flow','@web/core/utils/concurrency','@web/core/confirmation_dialog/confirmation_dialog'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SearchModel}=require("@web/search/search_model");const{computeXpath,getNodesFromXpath,getNodeAttributes,parseStringToXml,serializeXmlToString,}=require("@web_studio/client_action/view_editor/editors/xml_utils");const{EventBus,markRaw,useEnv,reactive,toRaw}=require("@odoo/owl");const{sprintf}=require("@web/core/utils/strings");const{parseXML}=require("@web/core/utils/xml");const{viewTypeToString}=require("@web_studio/studio_service");const{xpathToLegacyXpathInfo,cleanClickedElements,}=require("@web_studio/client_action/view_editor/editors/utils");const{Reactive,memoizeOnce}=require("@web_studio/client_action/utils");const{getModifier,resetViewCompilerCache}=require("@web/views/view_compiler");const{_t}=require("@web/core/l10n/translation");const{EditorOperations,SnackbarIndicator}=require("@web_studio/client_action/editor/edition_flow");const{Race}=require("@web/core/utils/concurrency");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const editorsRegistry=registry.category("studio_editors");const viewRegistry=registry.category("views");class EditorOperationsWithSnackbar extends EditorOperations{constructor(params){super(...arguments);this.snackBar=params.snackBar;this.race=markRaw(new Race());}
_wrapPromise(prom){const _prom=super._wrapPromise(prom);this.snackBar.add(this.race.add(_prom));return _prom;}}
function getFieldsInArch(xmlDoc){return Array.from(xmlDoc.querySelectorAll("field")).filter((el)=>!el.parentElement.closest("field")).map((n)=>n.getAttribute("name"));}
function getSubarchPosition(mainArch,xpathToField,archTag){const xpathToArch=`${xpathToField}/${archTag}[not(@studio_subview_inlined)]`;const nodes=getNodesFromXpath(xpathToArch,parseStringToXml(mainArch));let hasArch=false;let position=1;for(const node of nodes){if(getModifier(node,"invisible")!=="True"&&getModifier(node,"invisible")!=="1"){hasArch=true;break;}
position++;}
return{hasArch,position};}
function getSubArch(mainArch,xpathToField,archTag,position){const xpathToView=`${archTag}[${position}]`;const xpathToArch=`${xpathToField}/${xpathToView}`;const nodes=getNodesFromXpath(xpathToArch,parseStringToXml(mainArch));if(nodes.length!==1){throw new Error(`Single sub-view arch not found for xpath: ${xpathToArch}`);}
return serializeXmlToString(nodes[0]);}
function buildKey(...args){return args.join("_");}
const ViewEditorModel=__exports.ViewEditorModel=class ViewEditorModel extends Reactive{constructor({env,services,editionFlow,viewRef}){super();this._isInEdition=false;this.mode="interactive";this.env=env;this.bus=markRaw(new EventBus());this._services=markRaw(services);this._studio=services.studio;this._snackBar=new SnackbarIndicator();this._operations=new EditorOperationsWithSnackbar({do:this._handleOperations.bind(this),onDone:this._handleDone.bind(this),onError:this._handleError.bind(this),snackBar:this._snackBar,});this._decorateCall=async(callback,...args)=>{this._services.ui.block();const prom=callback(...args);this._snackBar.add(prom);try{return await prom;}finally{this._services.ui.unblock();}};this._decorateFunction=(callback)=>{return async(...args)=>{return this._decorateCall(callback,...args);};};this._rpc=services.rpc;this._decoratedRpc=this._decorateFunction(services.rpc);this._editionFlow=editionFlow;this.GROUPABLE_TYPES=["many2one","char","boolean","selection","date","datetime"];this._activeNodeXpath=undefined;this.lastActiveNodeXpath=undefined;this._getEditor=memoizeOnce(()=>{const viewType=this.viewType;const view=viewRegistry.contains(viewType)?viewRegistry.get(viewType):null;const editor=editorsRegistry.contains(viewType)?editorsRegistry.get(viewType):null;return{getProps:editor?editor.props:view.props,editor:this.mode==="interactive"?editor||view:view||editor,};});this._getControllerProps=memoizeOnce(function(){let{resId,resIds}=this.isEditingSubview?this._subviewInfo:this._studio.editedControllerState||{};resIds=resIds||[];resId=resId||resIds[0];const arch=parseXML(this.arch);if(this.mode!=="interactive"){arch.querySelectorAll(`[studio_no_fetch="1"]`).forEach((n)=>n.remove());}
const rootArchNode=this.xmlDoc.firstElementChild;const controllerClasses=Array.from(new Set(["o_view_controller",`o_${this.viewType}_view`,...(rootArchNode.getAttribute("class")||"").split(" "),])).filter((c)=>c);let controllerProps={info:{},relatedModels:{...toRaw(this.viewDescriptions.relatedModels)},useSampleModel:["graph","pivot"].includes(this.viewType),searchMenuTypes:[],className:controllerClasses.join(" "),resId,resIds,resModel:this.resModel,arch,fields:{...toRaw(this.fields)},};if(["list","tree","form"].includes(this.viewType)&&this.mode==="interactive"&&this._subviewInfo){controllerProps.parentRecord=this._subviewInfo.parentRecord;}
const{editor,getProps}=this.editorInfo;controllerProps=getProps?getProps(controllerProps,editor,this.env.config):controllerProps;return markRaw(controllerProps);});this.__getDefaultStudioViewProps=memoizeOnce(()=>{const editedAction=this._studio.editedAction;let globalState;if(this._views.search&&!this.isEditingSubview){globalState=editedAction.globalState;}
const context=this._subviewInfo?this._subviewInfo.context:editedAction.context;const searchModel=this.editorInfo.editor.SearchModel||SearchModel;return{context,resModel:this.resModel,SearchModel:searchModel,setOverlay:!["form","list","tree","kanban","search"].includes(this.viewType)||this.mode!=="interactive",display:{controlPanel:false,searchPanel:false},globalState,};});this._getActiveNode=memoizeOnce(()=>{if(!this.activeNodeXpath){return undefined;}
const node=getNodesFromXpath(this.activeNodeXpath,this.xmlDoc)[0];if(!node){return null;}
const isField=node.tagName==="field";const attrs=getNodeAttributes(node);let field;if(isField){field=reactive(this.fields[attrs.name]);Object.defineProperty(field,"label",{get(){return field.string;},configurable:true,});}
return reactive({arch:node,attrs,xpath:this.activeNodeXpath,field,});});this._getUnprocessedXmlDoc=memoizeOnce((arch)=>parseStringToXml(arch));this.breadcrumbs=editionFlow.breadcrumbs;this._editionFlow=editionFlow;this._views={};this.studioViewArch="";this.viewDescriptions={relatedModels:{},fields:[],};this.viewRef=viewRef;this.showInvisible=false;this._currentSidebarTab=undefined;this._getFieldsAllowedRename=memoizeOnce(()=>{return new Set();});}
get editorInfo(){return this._getEditor(buildKey(this.viewType,this.mode));}
get controllerProps(){const key=buildKey(this.arch,this.viewType,this.mode,this.resModel,this.breadcrumbs.length>1?this.breadcrumbs.length:1);return this._getControllerProps(key);}
get studioViewProps(){const key=buildKey(this.viewType,this.resModel,this.mode,this.isEditingSubview);return this.__getDefaultStudioViewProps(key);}
get xmlDoc(){return this._getUnprocessedXmlDoc(this.arch);}
get isEditingSubview(){return this.breadcrumbs.length>1;}
set isInEdition(value){value=!!value;if(this.isInEdition===value){return;}
this._isInEdition=value;if(value){this._services.ui.block();}else{this._services.ui.unblock();}}
get isInEdition(){return this._isInEdition;}
get mainView(){return this._views?this._views[this.mainViewType]:undefined;}
get mainArch(){return this.mainView?this.mainView.arch:"";}
get mainViewType(){return this._studio.editedViewType;}
get mainResModel(){return this._studio.editedAction.res_model;}
get arch(){return this.isEditingSubview?this._subviewInfo.getArch(this.mainArch):this.mainArch;}
get viewType(){return this.isEditingSubview?this._subviewInfo.viewType:this.mainViewType;}
get view(){return this._views[this.viewType];}
get resModel(){return this.isEditingSubview?this._subviewInfo.resModel:this.mainResModel;}
get fields(){return this.viewDescriptions.relatedModels[this.resModel];}
get activeNode(){return this._getActiveNode(buildKey(this.activeNodeXpath,this.arch));}
get studioViewKey(){return buildKey(this.arch,JSON.stringify(this.fields));}
get fieldsInArch(){return getFieldsInArch(this.xmlDoc);}
get isChatterAllowed(){return!this.isEditingSubview&&this._isChatterAllowed;}
get activeNodeXpath(){return this._activeNodeXpath;}
set activeNodeXpath(value){this._activeNodeXpath=value;if(value){this.lastActiveNodeXpath=value;}}
get sidebarTab(){if(this.activeNodeXpath){return"properties";}
return this._currentSidebarTab;}
set sidebarTab(newTab){this._currentSidebarTab=newTab;}
async editX2ManyView({viewType,fieldName,record,xpath,fieldContext}){const staticList=record.data[fieldName];const resIds=staticList.records.map((r)=>r.resId);const resModel=staticList.resModel;const archTag=viewType==="list"?"tree":viewType;const currentFullXpath=this.getSubviewXpath();let xpathToField=xpath;if(currentFullXpath){const xpathWithoutView=xpath.split("/").slice(2);xpathToField=`${currentFullXpath}/${xpathWithoutView.join("/")}`;}
const{hasArch,position}=getSubarchPosition(this.mainArch,xpathToField,archTag);if(!hasArch){const subViewRef=fieldContext[`${archTag}_view_ref`]||null;this.studioViewArch=await this._createInlineView({subViewType:viewType,fullXpath:xpathToField,subViewRef,resModel,fieldName,});const viewDescriptions=await this._editionFlow.loadViews();this.viewDescriptions=viewDescriptions;Object.assign(this._views,viewDescriptions.views);this._operations.clear(false);}
await this._decorateCall(()=>this.fieldsGet(resModel));const context=Object.fromEntries(Object.entries(fieldContext).filter(([key,val])=>{return!key.startsWith("default_")&&!key.endsWith("_view_ref");}));const x2ManyEditionInfo={name:sprintf("Subview %s",viewTypeToString(viewType)),context,resModel,resId:resIds[0],resIds,viewType,parentRecord:record,xpath:`${xpath}/${archTag}[${position}]`,fieldName,getArch:memoizeOnce((mainArch)=>{return getSubArch(mainArch,xpathToField,archTag,position);}),};this._editionFlow.pushBreadcrumb(x2ManyEditionInfo);}
async fieldsGet(resModel){this.fieldsGetCache=this.fieldsGetCache||new Set();if(!this.fieldsGetCache.has(resModel)){const fg=await this._services.orm.call(resModel,"fields_get");this.fieldsGetCache.add(resModel);Object.assign(this.viewDescriptions.relatedModels[resModel],fg);}}
async load(){const proms=[this._editionFlow.loadViews({forceSearch:true})];if(this.viewType==="form"){proms.push(this._studio.isAllowed("chatter",this.mainResModel));}
const[viewDescriptions,isChatterAllowed]=await Promise.all(proms);this._isChatterAllowed=isChatterAllowed;this.viewDescriptions=viewDescriptions||{relatedModels:{},fields:[],};Object.assign(this._views,viewDescriptions.views);const{mainViewId,viewId,arch}=await this._getStudioViewArch();this.studioViewArch=arch;this.studioViewId=viewId;if(!this.mainView.id){this.env.bus.trigger("CLEAR-CACHES");this.mainView.id=mainViewId;}}
getSubviewXpath(){if(!this.isEditingSubview){return null;}
const temp=[`/${this.mainViewType === "list" ? "tree" : this.mainViewType}[1]`];this.breadcrumbs.slice(1).forEach(({data})=>{const withoutView=data.xpath.split("/").slice(2);temp.push(...withoutView);});return temp.join("/");}
getFullTarget(xpath,{isXpathFullAbsolute=true}={}){const nodes=getNodesFromXpath(xpath,this.xmlDoc);if(nodes.length!==1){throw new Error("Xpath resolved to nothing or multiple nodes");}
const element=nodes[0];const attrs={};["name","id","class","for"].forEach((attrName)=>{if(element.hasAttribute(attrName)){attrs[attrName]=element.getAttribute(attrName);}});let xpath_info;if(isXpathFullAbsolute){xpath_info=xpathToLegacyXpathInfo(xpath);}else{const fullAbsolute=computeXpath(element,this.viewType==="list"?"tree":this.viewType);xpath_info=xpathToLegacyXpathInfo(fullAbsolute);}
const target={tag:element.tagName,attrs,xpath_info,};const subViewXpath=this.getSubviewXpath();if(subViewXpath){target.subview_xpath=subViewXpath;const subViewTargetInfo=xpathToLegacyXpathInfo(subViewXpath);xpath_info.splice(0,1,subViewTargetInfo[subViewTargetInfo.length-1]);}
return target;}
async doOperation(operation,write=true){return this._operations.do(operation,!write);}
pushOperation(operation){return this._operations.pushOp(operation);}
resetSidebar(tab=null){this.sidebarTab=tab;this.activeNodeXpath=undefined;const resetEl=this.viewRef.el;if(resetEl){cleanClickedElements(resetEl);}}
switchMode(){resetViewCompilerCache();this.mode=this.mode==="interactive"?"xml":"interactive";}
setRenameableField(fieldName,add=true){if(add){this._fieldsAllowedRename.add(fieldName);}else{this._fieldsAllowedRename.delete(fieldName);}}
isFieldRenameable(fieldName){return this._fieldsAllowedRename.has(fieldName);}
async renameField(fieldName,newName,autoUnique=true){newName=newName.toLowerCase().trim().replace(/[^\w\s-]/g,"").replace(/[\s_-]+/g,"_").replace(/^-+|-+$/g,"");if(!newName.startsWith("x_studio_")){newName=`x_studio_${newName}`;}
const existingFields=this.fields;if(autoUnique){const baseName=newName;let index=1;while(newName in existingFields){newName=baseName+"_"+index;index++;}}
if(!autoUnique&&newName in existingFields){this._services.dialog.add(AlertDialog,{body:_t("A field with the same name already exists."),});return;}
this.isInEdition=true;const prom=this._rpc("/web_studio/rename_field",{studio_view_id:this.studioViewId,studio_view_arch:this.studioViewArch,model:this.resModel,old_name:fieldName,new_name:newName,});this._snackBar.add(prom);try{await prom;}catch(e){this.isInEdition=false;throw e;}
const strOperations=JSON.stringify(this._operations.operations);const chars="[^\\w\\u007F-\\uFFFF]";const re=new RegExp(`(${chars}|^)${fieldName}(${chars}|$)`,"g");this._operations.clear();this.setRenameableField(fieldName,false);this.setRenameableField(newName,true);this._operations.doMulti(JSON.parse(strOperations.replace(re,`$1${newName}$2`)));}
async _createInlineView({subViewType,fullXpath,subViewRef,resModel,fieldName}){subViewType=subViewType==="list"?"tree":subViewType;const context={...this._services.user.context,lang:false,studio:true};if(subViewRef){context[`${subViewType}_view_ref`]=subViewRef;}
const studioViewArch=await this._decoratedRpc("/web_studio/create_inline_view",{model:resModel,view_id:this.mainView.id,field_name:fieldName,subview_type:subViewType,subview_xpath:fullXpath,context,});this.env.bus.trigger("CLEAR-CACHES");return studioViewArch;}
async _editView(operations){return this._rpc("/web_studio/edit_view",{view_id:this.mainView.id,studio_view_arch:this.studioViewArch,operations:operations,model:this.resModel,context:{...this._services.user.context,lang:false,studio:true},});}
async _editViewArch(viewId,viewArch){const result=await this._rpc("/web_studio/edit_view_arch",{view_id:viewId,view_arch:viewArch,context:{...this._services.user.context,lang:false,studio:true},});return result;}
async _handleOperations({mode,operations,lastOp}){this.isInEdition=true;if(lastOp.type!=="replace_arch"){operations=operations.filter((op)=>op.type!=="replace_arch");return this._editView(operations);}else{const viewId=lastOp.viewId;let{newArch,oldArch}=lastOp;if(mode==="undo"){const _newArch=newArch;newArch=oldArch;oldArch=_newArch;}
return this._editViewArch(viewId,newArch);}}
_handleDone({mode,pending,pendingUndone,result}){this.env.bus.trigger("CLEAR-CACHES");if(result){this.viewDescriptions.relatedModels=result.models;const oldArch=this._views[this.mainViewType].arch;const newArch=result.views[this.mainViewType].arch;this._views[this.mainViewType].arch=newArch;if(oldArch===newArch){this.isInEdition=false;}
if(!this.studioViewId&&result.studio_view_id){this.studioViewId=result.studio_view_id;}}
const isUndoing=mode==="undo";const pendingOps=isUndoing?pendingUndone:pending;const lastOperation=pendingOps[pendingOps.length-1];if(lastOperation&&lastOperation.type==="replace_arch"){if(lastOperation.viewId===this.studioViewId){this.studioViewArch=isUndoing?lastOperation.oldArch:lastOperation.newArch;this._operations.clear();const ops=isUndoing?this._operations.undone:this._operations.operations;ops.push(lastOperation);}}}
async _handleError({mode,pending,error}){this.isInEdition=false;this._services.notification.add(_t("This operation caused an error, probably because a xpath was broken"),{type:"danger",title:_t("Error"),});this.resetSidebar("view");this.bus.trigger("error");}
async _getStudioViewArch(){const result=await this._rpc("/web_studio/get_studio_view_arch",{model:this.resModel,view_type:this.viewType,view_id:this.mainView.id,context:{...this._services.user.context,lang:false},});return{arch:result.studio_view_arch,viewId:result.studio_view_id,mainViewId:result.main_view_id,};}
get _subviewInfo(){if(!this.isEditingSubview){return null;}
const length=this.breadcrumbs.length;return this.breadcrumbs[length-1].data;}
get _fieldsAllowedRename(){return this._getFieldsAllowedRename(this.breadcrumbs.length>1?this.breadcrumbs.length:1);}}
__exports.useEditNodeAttributes=useEditNodeAttributes;function useEditNodeAttributes({isRoot=false}={}){const vem=useEnv().viewEditorModel;function editNodeAttributes(newAttributes){let target;let node;if(isRoot){target=vem.getFullTarget(`/${vem.viewType === "list" ? "tree" : vem.viewType}`);target.isSubviewAttr=true;}else{target=vem.getFullTarget(vem.activeNodeXpath);const{arch,attrs}=vem.activeNode;node={tag:arch.tagName,attrs,};}
const operation={new_attrs:newAttributes,type:"attributes",position:"attributes",target,};if(node){operation.node=node;}
return vem.doOperation(operation);}
return editNodeAttributes;}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/view_editor_snackbar.js */
odoo.define('@web_studio/client_action/view_editor/view_editor_snackbar',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const ViewEditorSnackbar=__exports.ViewEditorSnackbar=class ViewEditorSnackbar extends Component{static template="web_studio.ViewEditor.Snackbar";static props={operations:Object,saveIndicator:Object,};}
return __exports;});;

/* /web_studio/static/src/client_action/view_editor/view_structures/view_structures.js */
odoo.define('@web_studio/client_action/view_editor/view_structures/view_structures',['@odoo/owl','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const ExistingFields=__exports.ExistingFields=class ExistingFields extends Component{static props={fieldsInArch:{type:Array},fields:{type:Object},folded:{type:Boolean,optional:true},};static defaultProps={folded:true,};static template="web_studio.ViewStructures.ExistingFields";setup(){this.state=useState({folded:this.props.folded,searchValue:"",});}
isMatchingSearch(field){if(!this.state.searchValue){return true;}
const search=this.state.searchValue.toLowerCase();let matches=field.string.toLowerCase().includes(search);if(!matches&&this.env.debug&&field.name){matches=field.name.toLowerCase().includes(search);}
return matches;}
get existingFields(){const fieldsInArch=this.props.fieldsInArch;const filtered=Object.entries(this.props.fields).filter(([fName,field])=>{if(fieldsInArch.includes(fName)||!this.isMatchingSearch(field)){return false;}
return true;});return filtered.map(([fName,field])=>{return{...field,name:fName,classType:field.type,dropData:JSON.stringify({fieldName:fName}),};});}
getDropInfo(field){return{structure:"field",fieldName:field.name,isNew:false,};}}
const newFields=[{type:"char",string:_t("Text")},{type:"text",string:_t("Multine Text")},{type:"integer",string:_t("Integer")},{type:"float",string:_t("Decimal")},{type:"html",string:_t("HTML")},{type:"monetary",string:_t("Monetary")},{type:"date",string:_t("Date")},{type:"datetime",string:_t("Datetime")},{type:"boolean",string:_t("CheckBox")},{type:"selection",string:_t("Selection")},{type:"binary",string:_t("File"),widget:"file"},{type:"one2many",string:_t("Lines"),special:"lines"},{type:"one2many",string:_t("One2Many")},{type:"many2one",string:_t("Many2One")},{type:"many2many",string:_t("Many2Many")},{type:"binary",string:_t("Image"),widget:"image",name:"picture"},{type:"many2many",string:_t("Tags"),widget:"many2many_tags",name:"tags"},{type:"selection",string:_t("Priority"),widget:"priority"},{type:"binary",string:_t("Signature"),widget:"signature"},{type:"related",string:_t("Related Field")},];const NewFields=__exports.NewFields=class NewFields extends Component{static props={};static template="web_studio.ViewStructures.NewFields";get newFieldsComponents(){return newFields.map((f)=>{const classType=f.special||f.name||f.widget||f.type;return{...f,name:classType,classType,dropData:JSON.stringify({fieldType:f.type,widget:f.widget,name:f.name,special:f.special,string:f.string,}),};});}}
return __exports;});;

/* /web_studio/static/src/client_action/xml_resource_editor/xml_resource_editor.js */
odoo.define('@web_studio/client_action/xml_resource_editor/xml_resource_editor',['@odoo/owl','@web/core/l10n/translation','@web/core/code_editor/code_editor','@web/core/resizable_panel/resizable_panel','@web/core/select_menu/select_menu','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps,toRaw,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{CodeEditor}=require("@web/core/code_editor/code_editor");const{ResizablePanel}=require("@web/core/resizable_panel/resizable_panel");const{SelectMenu}=require("@web/core/select_menu/select_menu");const{useService}=require("@web/core/utils/hooks");class ViewSelector extends SelectMenu{static template="web_studio.ViewSelector";static choiceItemTemplate="web_studio.ViewSelector.ChoiceItemRecursive";static props={...SelectMenu.props,choices:{optional:true,type:Array,element:{type:Object,shape:{value:true,label:{type:String},resource:{optional:true},},},},};getMainViews(){return this.state.displayedOptions.filter((opt)=>opt.resource.isMainResource);}
getInherited(choice){const inheritedChoices=this.state.displayedOptions.filter((opt)=>(opt.resource.inherit_id||[])[0]===choice.resource.id);if(inheritedChoices.length){inheritedChoices.forEach((opt)=>(opt.resource.relatedChoice=choice.resource.id));}
return inheritedChoices;}
getComposedBy(choice){const resource=choice.resource;if(!resource.called_xml_ids){return[];}
const composedChoices=this.state.displayedOptions.filter((opt)=>resource.called_xml_ids.includes(opt.resource.xml_id));if(composedChoices.length){composedChoices.forEach((opt)=>(opt.resource.relatedChoice=resource.id));}
return composedChoices;}
sliceDisplayedOptions(){const childChoices=this.state.choices.filter((c)=>c.resource.relatedChoice);childChoices.forEach((c)=>this.addRelatedChoice(c.resource.relatedChoice));super.sliceDisplayedOptions();}
addRelatedChoice(parentId){if(this.state.choices.findIndex((c)=>c.resource.id===parentId)===-1){const parent=this.props.choices.find((c)=>c.resource.id===parentId);if(!parent.resource.isMainResource){this.addRelatedChoice(parent.resource.relatedChoice);}
this.state.choices.push(parent);}}}
const XmlResourceEditor=__exports.XmlResourceEditor=class XmlResourceEditor extends Component{static template="web_studio.XmlResourceEditor";static components={ResizablePanel,CodeEditor,SelectMenu:ViewSelector};static props={onClose:{type:Function},onCodeChange:{type:Function,optional:true},onSave:{type:Function,optional:true},mainResourceId:{type:true},defaultResourceId:{type:true,optional:true},canSave:{type:Boolean,optional:true},minWidth:{type:Number,optional:true},reloadSources:{type:Number,optional:true},displayAlerts:{type:Boolean,optional:true},onResourceChange:{type:Function,optional:true},};static defaultProps={canSave:true,minWidth:400,reloadSources:1,displayAlerts:true,onResourceChange:()=>{},};setup(){this.rpc=useService("rpc");this.state=useState({resourcesOptions:[],currentResourceId:null,_codeChanges:null,});this.codeEditorKey=this.props.reloadSources;onWillStart(()=>this.loadResources(this.props.mainResourceId));onWillUpdateProps(async(nextProps)=>{const shouldReload=nextProps.mainResourceId!==this.props.mainResourceId||this.codeEditorKey!==nextProps.reloadSources;const nextResourceId=nextProps.mainResourceId!==this.props.mainResourceId?nextProps.mainResourceId:this.state.currentResourceId;if(shouldReload){this.state._codeChanges=null;await this.loadResources(nextProps.mainResourceId);this.state.currentResourceId=nextResourceId;}
this.codeEditorKey=nextProps.reloadSources;});this.alerts=useState({"built-in-file":{message:_t("Editing a built-in file through this editor is not advised, as it will prevent it from being updated during future App upgrades."),display:true,},});}
get minWidth(){return this.props.minWidth;}
get arch(){const currentResourceId=this.state.currentResourceId;if(!currentResourceId){return"";}
return this.tempCode||this.getResourceFromId(currentResourceId).arch;}
get tempCode(){if(!this.state.currentResourceId){return"";}
return this.state._codeChanges&&this.state._codeChanges[this.state.currentResourceId];}
set tempCode(value){if(!this.state.currentResourceId){return;}
this.state._codeChanges=this.state._codeChanges||{};this.state._codeChanges[this.state.currentResourceId]=value;}
getResourceFromId(resourceId){const opt=this.state.resourcesOptions.find((opt)=>opt.value===resourceId)||{};return opt.resource;}
onFormat(){this.tempCode=window.vkbeautify.xml(this.tempCode||this.arch,4);}
hideAlert(alertKey){this.alerts[alertKey].display=false;}
onCloseClick(){this.props.onClose();}
onCodeChange(code){this.tempCode=code;if("onCodeChange"in this.props){this.props.onCodeChange({...toRaw(this.state._codeChanges)});}}
onSaveClick(){if(!this.tempCode){return;}
const resource=this.getResourceFromId(this.state.currentResourceId);this.props.onSave({resourceId:resource.id,newCode:this.tempCode,oldCode:resource.oldArch,});}
onResourceChange(resourceId){this.state.currentResourceId=resourceId;this.props.onResourceChange(this.getResourceFromId(this.state.currentResourceId));}
async loadResources(resourceId){const resources=await this.rpc("/web_studio/get_xml_editor_resources",{key:resourceId,});const resourcesOptions=resources.views.map((res)=>({label:`${res.name} (${res.xml_id})`,value:res.id,resource:{...res,oldArch:res.arch,isMainResource:res.key===resourceId||res.id===resourceId||res.xml_id===resourceId,},}));this.state.resourcesOptions=resourcesOptions;if(resourcesOptions.length>=1){let defaultResource;if(this.props.defaultResourceId||resources.main_view_key){const defaultId=this.props.defaultResourceId||resources.main_view_key;defaultResource=resourcesOptions.find((opt)=>opt.resource.id===defaultId||opt.resource.xml_id===defaultId||opt.resource.key===defaultId);}
defaultResource=defaultResource||resourcesOptions[0];this.state.currentResourceId=defaultResource.value;}
return resourcesOptions;}}
return __exports;});;

/* /web_studio/static/src/views/kanban_report/new_report_dialog.js */
odoo.define('@web_studio/views/kanban_report/new_report_dialog',['@odoo/owl','@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const NewReportDialog=__exports.NewReportDialog=class NewReportDialog extends Component{setup(){this.rpc=useService("rpc");this.user=useService("user");this.layouts=[{name:"web.external_layout",label:_t("External"),description:_t("Business header/footer"),},{name:"web.internal_layout",label:_t("Internal"),description:_t("Minimal header/footer"),},{name:"web.basic_layout",label:_t("Blank"),description:_t("No header/footer"),},];}
async createNewReport(layout){const report=await this.rpc("/web_studio/create_new_report",{model_name:this.props.resModel,layout,context:this.user.context,});this.props.onReportCreated(report);this.props.close();}}
NewReportDialog.template="web_studio.NewReportDialog";NewReportDialog.components={Dialog};NewReportDialog.props=["resModel","onReportCreated","close"];return __exports;});;

/* /web_studio/static/src/views/kanban_report/report_kanban_view.js */
odoo.define('@web_studio/views/kanban_report/report_kanban_view',['@web/core/registry','@web/core/utils/hooks','@web/views/kanban/kanban_view','@web/views/kanban/kanban_controller','@web_studio/views/kanban_report/new_report_dialog'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{kanbanView}=require("@web/views/kanban/kanban_view");const{KanbanController}=require("@web/views/kanban/kanban_controller");const{NewReportDialog}=require("@web_studio/views/kanban_report/new_report_dialog");class StudioReportKanbanController extends KanbanController{setup(){super.setup();this.actionService=useService("action");this.dialogService=useService("dialog");this.orm=useService("orm");}
createRecord(){this.dialogService.add(NewReportDialog,{resModel:this.props.context.default_model,onReportCreated:(report)=>{this.openRecord({data:report,resId:report.id});},});}
openRecord(record){return this.actionService.doAction("web_studio.action_edit_report",{report:{data:record.data,res_id:record.resId,},});}}
const studioReportKanbanView={...kanbanView,Controller:StudioReportKanbanController,};registry.category("views").add("studio_report_kanban",studioReportKanbanView);return __exports;});